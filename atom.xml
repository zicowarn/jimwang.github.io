<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jim Wang 的个人技术博客</title>
  
  <subtitle>全栈探索之路</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zicowarn.github.io/"/>
  <updated>2020-09-22T09:11:08.000Z</updated>
  <id>https://zicowarn.github.io/</id>
  
  <author>
    <name>Jim Wang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python 杂记之 如何使用pyenv管理python版本管理</title>
    <link href="https://zicowarn.github.io/2020/09/22/0809-python-hwoto-install-pyevn/"/>
    <id>https://zicowarn.github.io/2020/09/22/0809-python-hwoto-install-pyevn/</id>
    <published>2020-09-22T09:11:08.000Z</published>
    <updated>2020-09-22T09:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><p>作者: Jim Wang 公众号:  <a class="main-button-link" href="#wechat" rel="noopener">巴博萨船长</a></p><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>Python的版本管理非常有必要，这种想法在第一次接触到python3的时候就开始有的想法。但是工作中所遇项目主要是在windows系统下，开发环境并不复杂，又使用Eclipse的项目设定结合windows的环境变量。所以也一直没有去尝试着安装配置pyevn，但是自己工作之余学些aws lambda函数时，就遇到了需要隔离python版本与创建虚拟运行环境的使用场景，最终还是逃不过这部分内容，因此也就有了这篇网文。</p><h3 id="什么是pyenv和为什么要版本隔离"><a href="#什么是pyenv和为什么要版本隔离" class="headerlink" title="什么是pyenv和为什么要版本隔离"></a>什么是pyenv和为什么要版本隔离</h3><p>Pyenv主要是用于Python版本隔离，所谓版本隔离，就是同时安装与使用不同版本的Python在一个主机里，且彼此之间没有交叉也不相互影响。在没有Pyenv之前，在windows系统下也可以实现多python版本共存，可以使用环境变量进行隔离。在Linux系统下则可以使用update-alternatives这一系统命令链接符工具来进行版本管理。</p><p>那为什么需要版本管理。假设你有两个Python项目，一个是Python2.x另一个是Python3.x，这是你就可以考虑版本隔离了，或者需要同时测试，管理很多不同版本的Python项目，也可以考虑版本隔离。</p><h3 id="什么是virtualenv和为什么需要虚拟环境"><a href="#什么是virtualenv和为什么需要虚拟环境" class="headerlink" title="什么是virtualenv和为什么需要虚拟环境"></a>什么是virtualenv和为什么需要虚拟环境</h3><p>virtualenv主要是为了创建Python运行的虚拟环境。所谓虚拟环境，就是Python运行时，库依赖性的隔离。比如项目一需要A依赖包，项目二需要B依赖包。传统习惯是，将A包与B包都使用pip install命令进行安装，就可以同时完成项目一与项目二的开发工作，但是这在开发时是没问题的，但在部署时就不一定了，如果部署环境与开发环境不一致，就可能需要花时间去从新安装依赖包，如果部署平台与开发平台也不一致，或者部署环境中的存储限制就需要在开发的时候创建一个虚拟环境，创建一个最小依赖的开发环境。</p><p>常见的一些定义virtualenv和pyvenv（同venv）都是用于创建虚拟运行环境，实现库依赖性的隔离。区别是前者支持Python不同版本，可以为不同python创建虚拟环境，而后者仅支持python3.x，venv仅支持python3.6以后不的版本。另一点区别是，virtualenv是PyPI软件包，pyvenv（同venv）是标准库。</p><h3 id="什么是pipenv和什么是依赖管理"><a href="#什么是pipenv和什么是依赖管理" class="headerlink" title="什么是pipenv和什么是依赖管理"></a>什么是pipenv和什么是依赖管理</h3><p>另一些常见的定义还有pipevn，pipenv可以视为pip命令和virtualenv命令的组合命令。virtualenv创建的虚拟环境仅仅实现了Python库的依赖性隔离。但是一个虚拟环境下随着项目功能的增加，依赖包的变化，一段时间之后这个虚拟环境下第三方库的依赖具体什么样，就很难弄明白了。pipenv就是为了解决这一问题而存在的。这点很像nodejs的依赖包管理工具npm（或cnpm）。使用Pipenv时，Pipenv会自动管理python库依赖。Pipenv会在创建虚拟环境时自动创建Pipfile和Pipfile.lock文件，之后在安装和卸载第三方依赖包的时候，这两个文件都会得到更新被维护。Pipfile记录项目依赖包列表，Pipfile.lock记录固定版本的详细依赖包列表。</p><h3 id="其他相关定义"><a href="#其他相关定义" class="headerlink" title="其他相关定义"></a>其他相关定义</h3><p>virtualenvwrapper是对virtualenv命令的扩展。pyenv-virtualenv是pyenv的插件，主要用于确保pyenv和virtualenv能够同时使用。如果使用的是python3.3以上的版本，则默认python自带venv，pyenv-virtualenv插件就是可选内容。pyenv-virtualenvwrapper也是pvenv的插件，主要是为了是pyenv中能集成virtualenvwrapper。</p><h3 id="安装pvenv"><a href="#安装pvenv" class="headerlink" title="安装pvenv"></a>安装pvenv</h3><p>本文的安装环境为mac os Catalina 版本为10.5.5。在终端输入一下命令, pyenv目前不支持windows （windows可以使用pyenv-win来代替），只支持mac和linux。官方提供了一个安装脚本，安装起来非常简单，它会自动安装<code>pyenv</code>和<code>pyenv-virtualenv</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash</span><br></pre></td></tr></table></figure><p>也可使用git命令克隆pyenv源代码至本地，命令如下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/pyenv/pyenv.git ~/.pyenv</span><br></pre></td></tr></table></figure><p>完成上述步骤就需要修改环境变量了，打开bash配置文件.bash_profile或者.bashrc，在文档末尾添加如下内容，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$HOME</span>/.pyenv/bin:<span class="variable">$PATH</span>"</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(pyenv init -)</span>"</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(pyenv virtualenv-init -)</span>"</span></span><br></pre></td></tr></table></figure><p>Mac环境下可以尝试直接使用下列命令来进行安装，需要注意的是，使用brew 安装 pyenv 是不需要进行环境配置的，brew 在安装 pyenv 时已经自动设定了相关内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install pyenv</span><br></pre></td></tr></table></figure><h3 id="配置pyenv"><a href="#配置pyenv" class="headerlink" title="配置pyenv"></a>配置pyenv</h3><p>完成安装知乎，配置部分的内容其实很简单，仅需要在bash配置文件中添加如下内容，完成pyenv的初始化即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(pyenv init -)</span>"</span></span><br></pre></td></tr></table></figure><h3 id="使用pyenv"><a href="#使用pyenv" class="headerlink" title="使用pyenv"></a>使用pyenv</h3><p>pyenv提供了11个可用命令，可以参考<a href="https://github.com/pyenv/pyenv/blob/master/COMMANDS.md" target="_blank" rel="noopener">文档</a>来查看具体内容，在这里简单介绍几个常用命令。</p><h5 id="pyenv-versions"><a href="#pyenv-versions" class="headerlink" title="pyenv versions"></a>pyenv versions</h5><p>用于检查当前系统中已经安装的python版本，命令输出如下内容，带星号为当前系统默认使用的python版本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">username@mac~ % pyenv versions         </span><br><span class="line">* system (<span class="built_in">set</span> by /Users/username/.pyenv/version)</span><br><span class="line">  2.7.10</span><br><span class="line">  2.7.15</span><br></pre></td></tr></table></figure><h5 id="pyenv-version"><a href="#pyenv-version" class="headerlink" title="pyenv version"></a>pyenv version</h5><p>用于查看当前系统默认使用的python版本，命令输出如下内容，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username@mac ~ % pyenv version </span><br><span class="line">system (set by &#x2F;Users&#x2F;username&#x2F;.pyenv&#x2F;version)</span><br></pre></td></tr></table></figure><h5 id="pyevn-install-–list"><a href="#pyevn-install-–list" class="headerlink" title="pyevn install –list"></a>pyevn install –list</h5><p>用于检查，所有可安装的python版本，输出内容如下，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">username@mac ~ % pyenv install --list</span><br><span class="line">Available versions:</span><br><span class="line">  2.1.3</span><br><span class="line">  2.2.3</span><br><span class="line">  2.3.7</span><br><span class="line">  2.4.0</span><br><span class="line">  2.4.1</span><br></pre></td></tr></table></figure><p>输出列表里纯数字的表示官方版本，其他的版本注释如下：</p><ul><li>activepython (ActiveState公司) 主要面向企业用户与数据科学家，可以节省大量精力在Python的组装与管理方面</li><li>anaconda (Anaconda公司)主要用例包括数学、统计学、工程、数据分析、机器学习以及其他相关应用</li><li>ironPython 属于一套立足.Net运行时——或者CLR（公共语言运行时）——的Python实现方</li><li>jython 能够将Python 2.x编译为JVM字节码，并在JVM上运行生成的程序，其仅支持Python 2.x</li><li>pypy 属于CPython解释器的替代品，其利用即时（JIT）编译以加速Python程序的执行</li><li>micropython 是Python 3的一个完整软件实现，用C语言编写，被优化于运行在微控制器之上， 如Arduino等</li><li>miniconda 只包含最基本的内容：python与conda，以及相关的必须依赖项，是conda的最小依赖开发环境</li><li>stackless 是python的一个增强版本，是python协程的一个实现。 使用它可以避免创建线程所引起的不必要的开销， 同时也可以实现无锁编程。</li></ul><h5 id="python-install-3-7-0"><a href="#python-install-3-7-0" class="headerlink" title="python install 3.7.0"></a>python install 3.7.0</h5><p>该命令意指安装Python 3.7.0的官方版本版本，该命令输出如下内容，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">username@mac ~ % pyenv install 3.7.0  </span><br><span class="line">...</span><br><span class="line">python-build: use openssl@1.1 from homebrew</span><br><span class="line">python-build: use readline from homebrew</span><br><span class="line">Installing Python-3.7.0...</span><br><span class="line">python-build: use readline from homebrew</span><br><span class="line">python-build: use zlib from xcode sdk</span><br><span class="line">Installed Python-3.7.0 to /Users/username/.pyenv/versions/3.7.0</span><br></pre></td></tr></table></figure><h5 id="python-uninstall"><a href="#python-uninstall" class="headerlink" title="python uninstall"></a>python uninstall</h5><p>该命令用于卸载特定版本的python</p><h5 id="python-rehash"><a href="#python-rehash" class="headerlink" title="python rehash"></a>python rehash</h5><p>在安装新一个版本的python后可以执行此命令，使其pyenv更新自己要管理的所有python版本的相关信息。</p><h3 id="卸载pyenv"><a href="#卸载pyenv" class="headerlink" title="卸载pyenv"></a>卸载pyenv</h3><p>pyenv的卸载非常简单，删除.pyenv目录与bash配置文件的相关内容即可。</p><h3 id="更新pyenv"><a href="#更新pyenv" class="headerlink" title="更新pyenv"></a>更新pyenv</h3><p>在mac中，可以使用brew upgrade pyenv来完成pyenv的更新，也可以通过从github中克隆新版本的源码到本地安装目录完成相应更新工作。</p><h3 id="安装pyenv-virtualenv"><a href="#安装pyenv-virtualenv" class="headerlink" title="安装pyenv-virtualenv"></a>安装pyenv-virtualenv</h3><p>在完成python版本的隔离之后，就可以尝试实现项目依赖的隔离，这就需要借助pyenv-virtualenv来完成，安装pyenv-virtualenv也有两种方法，在mac中使用brew 安装或者，从github中克隆源码到本地。</p><p>mac中使用brew install pyenv-virtualenv命令则可以完成安装，该命令的输出内容如下，按照输出内容的提示，我们需要在完成安装之后对其进行配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">username@mac ~ % brew install pyenv-virtualenv</span><br><span class="line">==&gt; Downloading https://github.com/pyenv/pyenv-virtualenv/archive/v1.1.5.tar.gz</span><br><span class="line">==&gt; Downloading from https://codeload.github.com/pyenv/pyenv-virtualenv/tar.gz/v</span><br><span class="line"><span class="comment">######################################################################## 100.0%</span></span><br><span class="line">==&gt; ./install.sh</span><br><span class="line">==&gt; Caveats</span><br><span class="line">To <span class="built_in">enable</span> auto-activation add to your profile:</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">which</span> pyenv-virtualenv-init &gt; /dev/null; <span class="keyword">then</span> <span class="built_in">eval</span> <span class="string">"<span class="variable">$(pyenv virtualenv-init -)</span>"</span>; <span class="keyword">fi</span></span><br><span class="line">==&gt; Summary</span><br><span class="line"> /usr/<span class="built_in">local</span>/Cellar/pyenv-virtualenv/1.1.5: 22 files, 65.7KB, built <span class="keyword">in</span> 2 seconds</span><br></pre></td></tr></table></figure><p>从github中克隆源码到本地的命令如下，这里需要注意的是，需要在当前用户的home目录运行该命令，因为源码的本地目录为pyenv的子目录，如有必要也需要手动创建子目录plugins。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/pyenv/pyenv-virtualenv.git .pyenv/plugins/pyenv-virtualenv</span><br></pre></td></tr></table></figure><h3 id="配置pyenv-virtualenv"><a href="#配置pyenv-virtualenv" class="headerlink" title="配置pyenv-virtualenv"></a>配置pyenv-virtualenv</h3><p>根据brew install pyenv-virtualenv，完成配置仅需在bash配置文件中加入如下内容即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">which</span> pyenv-virtualenv &gt;/dev/null; <span class="keyword">then</span> <span class="built_in">eval</span> <span class="string">"<span class="variable">$(pyenv virtualenv-init -)</span>"</span>;<span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>然后可以使用如下命令，更新bash配置的修改，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> .bash_profile</span><br></pre></td></tr></table></figure><h3 id="使用pyenv-virtualenv"><a href="#使用pyenv-virtualenv" class="headerlink" title="使用pyenv-virtualenv"></a>使用pyenv-virtualenv</h3><p>pyenv-virtualenv的具体使用方法，可以参考<a href="https://github.com/pyenv/pyenv-virtualenv/blob/master/README.md" target="_blank" rel="noopener">文档</a>本文简单介绍一下部分命令。</p><h5 id="pyenv-virtualenv-版本号-虚拟环境名"><a href="#pyenv-virtualenv-版本号-虚拟环境名" class="headerlink" title="pyenv virtualenv 版本号 虚拟环境名"></a>pyenv virtualenv 版本号 虚拟环境名</h5><p>比如，由于项目中aws 的lambda函数中使用python 3.6.0 的是最终是需要完成一个python 3.6.0的虚拟运行环境，那么就可以使用如下命令，这里版本号为3.6.0， 虚拟环境名为env360。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">username@mac ~ % pyenv virtualenv 3.6.0 env360</span><br><span class="line">Requirement already satisfied: setuptools <span class="keyword">in</span> /Users/username/.pyenv/versions/3.6.0/envs/env360/lib/python3.6/site-packages</span><br><span class="line">Requirement already satisfied: pip <span class="keyword">in</span> /Users/username/.pyenv/versions/3.6.0/envs/env360/lib/python3.6/site-packages</span><br></pre></td></tr></table></figure><h5 id="pyenv-virtualenvs"><a href="#pyenv-virtualenvs" class="headerlink" title="pyenv virtualenvs"></a>pyenv virtualenvs</h5><p>用于查看当前所有存在的环境名，命令输出内容如下，每个虚拟环境会出现两次，分别为虚拟环境目录的真实目录和目录链接。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">username@mac ~ % pyenv virtualenvs            </span><br><span class="line">  3.6.0/envs/env360 (created from /Users/username/.pyenv/versions/3.6.0)</span><br><span class="line">  3.8.5/envs/env385 (created from /Users/username/.pyenv/versions/3.8.5)</span><br><span class="line">  env360 (created from /Users/username/.pyenv/versions/3.6.0)</span><br><span class="line">  env385 (created from /Users/username/.pyenv/versions/3.8.5)</span><br></pre></td></tr></table></figure><h5 id="pyenv-activate-虚拟环境名"><a href="#pyenv-activate-虚拟环境名" class="headerlink" title="pyenv activate 虚拟环境名"></a>pyenv activate 虚拟环境名</h5><p>用于激活特定名称的虚拟运行环境，命令输出如下内容。激活后有如下提示信息。如提示信息所述，在非虚拟环境下运行export PYENV_VIRTUALENV_DISABLE_PROMPT=1，则可以在以后激活虚拟环境时，关闭该提示信息。虚拟环境激活之后，命令行提示符部分会有(env360)类似字样，说明当前在env360的虚拟运行环境下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">username@mac ~ % pyenv activate env360</span><br><span class="line">pyenv-virtualenv: prompt changing will be removed from future release. configure `<span class="built_in">export</span> PYENV_VIRTUALENV_DISABLE_PROMPT=1<span class="string">' to simulate the behavior.</span></span><br><span class="line"><span class="string">(env360) username@mac ~ %</span></span><br></pre></td></tr></table></figure><h5 id="pyenv-virtualenv-delete-虚拟环境名-或-pyenv-uninstall-虚拟环境名"><a href="#pyenv-virtualenv-delete-虚拟环境名-或-pyenv-uninstall-虚拟环境名" class="headerlink" title="pyenv virtualenv-delete 虚拟环境名 或 pyenv uninstall 虚拟环境名"></a>pyenv virtualenv-delete 虚拟环境名 或 pyenv uninstall 虚拟环境名</h5><p>这两个命令都是用于删除特定名称的虚拟运行环境，以命令<code>pyenv virtualenv-delete</code>为例，输出入如下内容。命令运行后会有提示信息用于确认操作，输入yes即可确认操作，完成虚拟运行环境的删除工作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">username@mac ~ % pyenv virtualenv-delete env385          </span><br><span class="line">pyenv-virtualenv: remove /Users/username/.pyenv/versions/3.8.5/envs/env385? yes</span><br><span class="line">username@mac ~ %</span><br></pre></td></tr></table></figure><h3 id="卸载-pyenv-virtualenv"><a href="#卸载-pyenv-virtualenv" class="headerlink" title="卸载 pyenv-virtualenv"></a>卸载 pyenv-virtualenv</h3><p>pyenv-virtualenv的卸载和pyenv的卸载过程类似，删除bash配置文件的相关内容，在pyenv目录中的删除相对应的pyenv-virtualenv子目录即可。</p><h3 id="更新-pyenv-virtualenv"><a href="#更新-pyenv-virtualenv" class="headerlink" title="更新 pyenv-virtualenv"></a>更新 pyenv-virtualenv</h3><p>如图pyenv一样，在mac中，可以使用brew upgrade pyenv-virtualenv来完成pyenv-virtualenv的更新，也可以通过从github中克隆新版本的源码到本地安装目录完成相应更新工作。</p><h3 id="所遇问题与解决方案"><a href="#所遇问题与解决方案" class="headerlink" title="所遇问题与解决方案"></a>所遇问题与解决方案</h3><h4 id="问题：Ubuntu-下使用pyenv安装3-7-0版本时，遇到的安装错误"><a href="#问题：Ubuntu-下使用pyenv安装3-7-0版本时，遇到的安装错误" class="headerlink" title="问题：Ubuntu 下使用pyenv安装3.7.0版本时，遇到的安装错误"></a>问题：Ubuntu 下使用pyenv安装3.7.0版本时，遇到的安装错误</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">root@R021:~<span class="comment"># pyenv install -v 3.6.12</span></span><br><span class="line">Downloading Python-3.6.12.tar.xz...</span><br><span class="line">-&gt; https://www.python.org/ftp/python/3.6.12/Python-3.6.12.tar.xz</span><br><span class="line">/tmp/python-build.20200916030737.1554 ~</span><br><span class="line">Installing Python-3.6.12...</span><br><span class="line">/tmp/python-build.20200916030737.1554/Python-3.6.12 /tmp/python-build.20200916030737.1554 ~</span><br><span class="line">checking build system <span class="built_in">type</span>... x86_64-pc-linux-gnu</span><br><span class="line">checking host system <span class="built_in">type</span>... x86_64-pc-linux-gnu</span><br><span class="line">checking <span class="keyword">for</span> python3.6... no</span><br><span class="line">checking <span class="keyword">for</span> python3... python3</span><br><span class="line">checking <span class="keyword">for</span> --<span class="built_in">enable</span>-universalsdk... no</span><br><span class="line">checking <span class="keyword">for</span> --with-universal-archs... no</span><br><span class="line">checking MACHDEP... linux</span><br><span class="line">checking <span class="keyword">for</span> --without-gcc... no</span><br><span class="line">checking <span class="keyword">for</span> --with-icc... no</span><br><span class="line">checking <span class="keyword">for</span> gcc... no</span><br><span class="line">checking <span class="keyword">for</span> cc... no</span><br><span class="line">checking <span class="keyword">for</span> cl.exe... cl.exe</span><br><span class="line"></span><br><span class="line">BUILD FAILED (Ubuntu 16.04 using python-build 1.2.20-6-gd1ae4a1)</span><br><span class="line"></span><br><span class="line">Inspect or clean up the working tree at /tmp/python-build.20200916030737.1554</span><br><span class="line">Results logged to /tmp/python-build.20200916030737.1554.log</span><br></pre></td></tr></table></figure><p>出现上述问题的原因为，部分pyenv所需的内容没有安装，可以尝试使用如下命令来检查和安装pyenv的所需组建，然后仔使用pyenv安装所需python版本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev</span><br></pre></td></tr></table></figure><h4 id="问题：Mac-下使用pyenv安装3-7-0版本时，遇到的安装错误"><a href="#问题：Mac-下使用pyenv安装3-7-0版本时，遇到的安装错误" class="headerlink" title="问题：Mac 下使用pyenv安装3.7.0版本时，遇到的安装错误"></a>问题：Mac 下使用pyenv安装3.7.0版本时，遇到的安装错误</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">username@mac ~ % pyenv install 3.7.0 </span><br><span class="line">Downloading openssl-1.0.2k.tar.gz...</span><br><span class="line">-&gt; https://www.openssl.org/<span class="built_in">source</span>/openssl-1.0.2k.tar.gz</span><br><span class="line">Installing openssl-1.0.2k...</span><br><span class="line"></span><br><span class="line">BUILD FAILED (OS X 10.15.5 using python-build 20180424)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">configure: error: C compiler cannot create executables</span><br><span class="line">See `config.log<span class="string">' for more details.</span></span><br></pre></td></tr></table></figure><p>上述错误中的关键内容为C 编译器错误，解决方法。这时候就要检查xcode comand line组件是否安装，使用如下命令检测xcode command line是否安装，如果有输出内容，则说明已经安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username@mac ~ % xcode-select -p</span><br><span class="line">/Library/Developer/CommandLineTools</span><br></pre></td></tr></table></figure><p>如果想检查xcode command line的版本，则可以使用如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">username@mac ~ % pkgutil --pkg-info=com.apple.pkg.CLTools_Executables</span><br><span class="line">package-id: com.apple.pkg.CLTools_Executables</span><br><span class="line">version: 12.0.0.0.1.1599194153</span><br><span class="line">volume: /</span><br><span class="line">location: /</span><br><span class="line">install-time: 1600823154</span><br><span class="line">groups: com.apple.FindSystemFiles.pkg-group</span><br></pre></td></tr></table></figure><p>如果没有安装，则需要安装Xcode command line， 然后重新使用pyenv安装所需版本的python。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>以上即为本人在安装和配置pyenv和pyenv-virtualenv整个过程，也包括自己在不同系统下安装这两个组建所遇问题和找到的解决方案。Python版本隔离与Python开发运行环境隔离，两者哪一个更有必要了解安装？哪种方案最优？个人觉得没必要过多纠结，适合自己需求的就是最合适的。上述方案也仅为一家之言，并非最优，若读者有别的思路也欢迎关注我的个人微信公众号，一起讨论学习。</p><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">    版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，    转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。</div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者: Jim Wang 公众号:  &lt;a class=&quot;main-button-link&quot; href=&quot;#wechat&quot; rel=&quot;noopener&quot;&gt;巴博萨船长&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;摘要：为何需要使用pyenv来管理python的版本，pyenv与pipenv和virtualenv的关系是什么样的。在自己使用pyenv的时候遇见过什么样的问题，又是如何解决所遇问题的。如果遇见诸如“BUILD FAILED”的安装错误，出现该错误的原因可能是什么？&lt;/p&gt;
&lt;p&gt;Abstract: Why do we need to manage the use pyenv python version, pyenv relationship with pipenv and virtualenv is what. What kind of problems have been encountered when using pyenv and how have they been solved. If you encounter an installation error such as “BUILD FAILED”, what could be the cause of the error?&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python 相关 - 8. Python 杂记" scheme="https://zicowarn.github.io/categories/Python-%E7%9B%B8%E5%85%B3-8-Python-%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="https://zicowarn.github.io/tags/Python/"/>
    
      <category term="杂记" scheme="https://zicowarn.github.io/tags/%E6%9D%82%E8%AE%B0/"/>
    
      <category term="Pyenv" scheme="https://zicowarn.github.io/tags/Pyenv/"/>
    
      <category term="版本管理" scheme="https://zicowarn.github.io/tags/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 如何在VS Code中调试Hexo的相关代码</title>
    <link href="https://zicowarn.github.io/2020/09/03/hexo-03-howto-debug-hexo-in-vscode/"/>
    <id>https://zicowarn.github.io/2020/09/03/hexo-03-howto-debug-hexo-in-vscode/</id>
    <published>2020-09-03T01:25:45.000Z</published>
    <updated>2020-09-03T01:25:45.000Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>按理说，日常Hexo的使用是不需要考虑代码调试的。一般情况下使用到的Hexo版本也是经过充分测试才发布的正式版本。可能还会有一些隐藏的小问题，但也足以应对日常使用。能想起来调试Hexo的相关代码，完全是出于好奇，想知道hexo deploy命令运行时到底做了些什么，hexo deploy背后的具体流程是什么，如何将项目中的README.md文件在部署时同时被拷贝到<strong>.deploy_git</strong>目录中，进而部署到Github中。带着这些问题，花费了点时间尝试之后，现将调试环境的部署方式记录下来，以便自己以后回顾学习。 </p><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p>VS Code 编辑器对Node的调试环境做了很大的优化和支持。实际应用中，需要自己做的是很少的，在VS Code中<strong>运行</strong>和<strong>调试</strong>的设置都在launch.json这个配置文件中。VS Code也为Node项目提供了多配置模版snippets（点击按钮Add Configuration…即可看见配置模版列表），在方法一中我们先选择一个“<strong>Launch Program</strong>”的模版，基本的配置内容如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"0.2.0"</span>,</span><br><span class="line">    <span class="attr">"configurations"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"node"</span>,</span><br><span class="line">            <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"Launch"</span>,</span><br><span class="line">            <span class="attr">"program"</span>: <span class="string">"$&#123;workspaceRoot&#125;/index.js"</span></span><br><span class="line">        &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中重要的参数<strong>request</strong>的取值和基本区别如下，两者的应用场景差异的具体细节不是本文重点，就不在本文中进行详细解释。</p><ul><li>launch 模式：VS Code会启动一个独立的具有debug模式的程序。</li><li>attach 模式：用于监听一个已经启动的程序。</li></ul><p>由于我们选择的是Lauch Program的配置模版，其<code>request</code>的参数默认为launch，该模式也是我们本文中使用的。在添加相应的内容之后，就可以在VS Code中，调试诸如hexo deploy的命令相关代码。接下来，只需要在Javascript文件“./node_modules/hexo-deployer-git/lib/deployer.js”中合适的位置添加断点，然后启动该配置，就可以看到程序在断点停留。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.2.0"</span>,</span><br><span class="line">  <span class="attr">"configurations"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"node"</span>,</span><br><span class="line">      <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"Debug Hexo Deploy Direct"</span>,</span><br><span class="line">      <span class="attr">"cwd"</span>: <span class="string">"$&#123;workspaceFolder&#125;"</span>,</span><br><span class="line">      <span class="attr">"runtimeArgs"</span>: [</span><br><span class="line">        <span class="string">"--nolazy"</span> <span class="comment">// 强制V8引擎完成代码的编译工作，这在远程调试时比较有用，可选</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"program"</span>: <span class="string">"./node_modules/hexo-cli/bin/hexo"</span>,</span><br><span class="line">      <span class="attr">"args"</span>: [</span><br><span class="line">        <span class="string">"deploy"</span>,</span><br><span class="line">        <span class="string">"--debug"</span> <span class="comment">//设置Hexo的 log基本，以便输出更多的日志内容</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"console"</span>: <span class="string">"internalConsole"</span>,</span><br><span class="line">      <span class="attr">"outputCapture"</span>: <span class="string">"std"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>我们也可以选择使用“<strong>Launch via npm</strong>”的模版，选用这个配置模版后会得到以下配置内容。npm作为node第三方依赖模块的管理工具，用npm运行js文件和node运行js文件的差异，我们不在本文中进行讨论。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.2.0"</span>,</span><br><span class="line">  <span class="attr">"configurations"</span>: [&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"Launch via NPM"</span>,</span><br><span class="line">    <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">    <span class="attr">"runtimeArgs"</span>: [</span><br><span class="line">      <span class="string">"run-script"</span>,</span><br><span class="line">      <span class="string">"debug"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"runtimeExecutable"</span>: <span class="string">"npm"</span>,</span><br><span class="line">    <span class="attr">"skipFiles"</span>: [</span><br><span class="line">      <span class="string">"&lt;node_internals&gt;/**"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"pwa-node"</span></span><br><span class="line">  &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上述模版信息为基础，修改添加一些选项后，我们得到以下配置内容。使用该配置内容，也能完成调试环境的搭建。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.2.0"</span>,</span><br><span class="line">  <span class="attr">"configurations"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"node"</span>,</span><br><span class="line">      <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"Debug Hexo Deploy via npm"</span>,</span><br><span class="line">      <span class="attr">"cwd"</span>: <span class="string">"$&#123;workspaceFolder&#125;"</span>,</span><br><span class="line">      <span class="attr">"runtimeExecutable"</span>: <span class="string">"npm"</span>,</span><br><span class="line">      <span class="attr">"runtimeArgs"</span>: [</span><br><span class="line">        <span class="string">"run"</span>, <span class="string">"deploy"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"console"</span>: <span class="string">"internalConsole"</span>,</span><br><span class="line">      <span class="attr">"outputCapture"</span>: <span class="string">"std"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述配置中的<code>runtimeArgs</code>配置项中的<code>deploy</code>参数，意指Hexo项目的配置文件package.json中的<code>scripts</code>配置项目中的<code>deploy</code>，参见下列内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"hexo-site"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.0.0"</span>,</span><br><span class="line">  <span class="attr">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"build"</span>: <span class="string">"hexo generate"</span>,</span><br><span class="line">    <span class="attr">"clean"</span>: <span class="string">"hexo clean"</span>,</span><br><span class="line">    <span class="attr">"deploy"</span>: <span class="string">"hexo deploy"</span>,</span><br><span class="line">    <span class="attr">"server"</span>: <span class="string">"hexo server"</span></span><br><span class="line">  &#125;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h4><p>有些人也推荐使用另一种方法，该方法以本文中的方法二为基础，不过需要安装依赖模块<strong>node-cli</strong>。安装该依赖模块的时候，需使用下列命令，以确保该模块被安装在devDependencies节点下，以便以后初始化项目时，运行npm install –production命令时，该依赖模块不会被安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -save-dev node-cli</span><br></pre></td></tr></table></figure><p>在安装完node的CLI后，就需要对Hexo的package.json文件进行修改，在<code>scripts</code>中添加以下内容：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"hexo-site"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.0.0"</span>,</span><br><span class="line">  <span class="attr">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"build"</span>: <span class="string">"hexo generate"</span>,</span><br><span class="line">    <span class="attr">"clean"</span>: <span class="string">"hexo clean"</span>,</span><br><span class="line">    <span class="attr">"deploy"</span>: <span class="string">"hexo deploy"</span>,</span><br><span class="line">    <span class="attr">"server"</span>: <span class="string">"hexo server"</span>,</span><br><span class="line">    <span class="attr">"debug-deploy"</span>: <span class="string">"node ./node_modules/hexo-cli/bin/hexo deploy --debug"</span> <span class="comment">// 该行</span></span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后修改VS Code的launch.json文件，选用方法二中使用的“<strong>Launch via npm</strong>”模版，然后参照以下内容完成配置，就可以搭建Hexo代码的调试环境。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.2.0"</span>,</span><br><span class="line">  <span class="attr">"configurations"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"node"</span>,</span><br><span class="line">      <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"Debug Hexo Deploy via npm"</span>,</span><br><span class="line">      <span class="attr">"cwd"</span>: <span class="string">"$&#123;workspaceFolder&#125;"</span>,</span><br><span class="line">      <span class="attr">"runtimeExecutable"</span>: <span class="string">"npm"</span>,</span><br><span class="line">      <span class="attr">"runtimeArgs"</span>: [</span><br><span class="line">        <span class="string">"run"</span>, <span class="string">"debug-deploy"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"console"</span>: <span class="string">"internalConsole"</span>,</span><br><span class="line">      <span class="attr">"outputCapture"</span>: <span class="string">"std"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上三种方法都能用于VS Code中Hexo调试环境的搭建工作，三种方法也没有优劣之分，正所谓萝卜白菜各有所爱，使用哪一种方法全凭个人喜好。</p><h3 id="应用技巧"><a href="#应用技巧" class="headerlink" title="应用技巧"></a>应用技巧</h3><p>Hexo的日志组件Logger的部分方法如下。前文中介绍的相关配置中的“–debug”，就是为了设置日志的输出等级，以便获取更多的程序运行信息。</p><ul><li>log.info()</li><li>log.debug()</li><li>log.warn()</li><li>log.error()</li></ul><p>默认情况下，由于VS Code存在问题（<a href="https://github.com/Microsoft/vscode/issues/19750" target="_blank" rel="noopener">Issues 19750</a>，请点击查看具体内容），所以上述的logger方法，因其内部使用了“<strong>process.stdout.write()</strong>”方法，这个方法输出的文本和<strong>“console.log()”</strong>方法所输出的文本，会输出到不同的地方（虽然理论上console.log内部使用的也是process.stdout.write方法，输出的文本内容应该位于同一地方），仅代码中的console.log输出的内容会显示在VS Code的<strong>DEBUG CONSOLE中</strong>。这种情况下，由于缺少日志信息不利于调试，就需要解决该问题。解决方法就是在配置中添加下列代码：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">//"port": 9229,</span></span><br><span class="line">  <span class="attr">"console"</span>: <span class="string">"internalConsole"</span>, <span class="comment">//integratedTerminal意指 VS Code 的 TERMINAL</span></span><br><span class="line">  <span class="attr">"outputCapture"</span>: <span class="string">"std"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>outputCapture</code> 这项配置，如果设置为std，则标准输出stdout 与标准错误stderr的输出都将显示在调试控制台中，而不是在调试端口上的输出。这对于直接写入stdout / stderr流而不是使用console.*的程序或在使用其他第三方日志库时会很有帮助。</p><p>能有此文全因自己好奇。在文章最后想说一下，这里没有专家，记录这些主要是为了自己以后回顾学习之方便，文章有不足之处也实属正常。见解不同，诚切赐教，关注微信公众号，一起讨论学习。</p><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">    版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，    转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。</div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者: Jim Wang 公众号: &lt;a class=&quot;main-button-link&quot; href=&quot;#wechat&quot; rel=&quot;noopener&quot;&gt;巴博萨船长&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;摘要：在使用Hexo部署自己的博客时，常常接触hexo generater，hexo clean和hexo deploy等命令，估计很少人想过如何调试Hexo这些命令的相关代码。作为基于Node的开源blog项目，其在VS Code中的调试环境是什么样的？如何建立这样的调试环境？调试时需要注意什么？ 在VSCode调试Node代码时，可能会遇见方法process.stdout.write和方法console.log的输出内容不在同一位置的问题，该问题如何解决?&lt;/p&gt;
&lt;p&gt;Abstract: When using hexo to deploy the blog, often use commands such as hexo generator, hexo clean and hexo deploy. Few people have thought about how to debug the Hexo codes related to these commands. As a node-based open source blog project, what is its debugging environment in VS Code? How to build a debugging environment for debugging Hexo code? What should pay attention to when debugging? When debugging Node code in VS Code, the output content of process.stdout.write and console.log are not in the same location, why? How to solve the problem?&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo 相关 - 实战经验" scheme="https://zicowarn.github.io/categories/Hexo-%E7%9B%B8%E5%85%B3-%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Hexo" scheme="https://zicowarn.github.io/tags/Hexo/"/>
    
      <category term="调试" scheme="https://zicowarn.github.io/tags/%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 解决嵌入的html被渲染的问题和code_dir的配置项的用法</title>
    <link href="https://zicowarn.github.io/2020/09/02/hexo-02-embed-html-and-downloads-code/"/>
    <id>https://zicowarn.github.io/2020/09/02/hexo-02-embed-html-and-downloads-code/</id>
    <published>2020-09-02T00:11:08.000Z</published>
    <updated>2020-09-02T00:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h3 id="嵌入式html渲染异常"><a href="#嵌入式html渲染异常" class="headerlink" title="嵌入式html渲染异常"></a>嵌入式html渲染异常</h3><p>在使用Hexo管理自己的技术博客文章时，有时候需要在文中嵌入html代码。例如使用iframe嵌入html网页，这时候常常会遇见渲染异常，即嵌入的html也被hexo的主题代码渲染了。解决这部分异常的方法很简单。假设文章中嵌入的html代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">width</span>=<span class="string">"200"</span> <span class="attr">height</span>=<span class="string">"300"</span> <span class="attr">src</span>=<span class="string">"demo/demo-1.html"</span> <span class="attr">frameborder</span>=<span class="string">"40"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>解决该问题的方法很简单，仅需在Hexo的配置文件_config.yml中找到<code>skip_render</code>这一配置项，按照如下修改配置文件即可：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">demo/*.html</span></span><br></pre></td></tr></table></figure><p>出现问题的原因是：在渲染markdown文章的时候，内部的html也一并被渲染了，修改这一项则可以在渲染的时候过滤指定文件。该配置支持通配模式。相同方法，嵌入文章的CSS和Javascript文件也可以在渲染时被忽略。</p><h3 id="code-dir配置项的用法"><a href="#code-dir配置项的用法" class="headerlink" title="code_dir配置项的用法"></a>code_dir配置项的用法</h3><p>在hexo的配置文件_config.yml中有<code>code_dir</code>这一配置项，这个配置项也是在修改<code>skip_render</code>的时候发现的，就好奇它的作用，弄清楚之后记录下来，以便以后回顾学习。了解发现这个配置的用处很大。之前写文章时，为了解决文章配图的问题，当时学会了<code>post_asset_folder</code>配置项，为此也安装了<strong>hexo-asset-image</strong>包。所以一开始在使用iframe尝试在文章中嵌入html页面时，就把相应的html文件，css文件，js文件全部放在了与post同名的文件夹中，但是学会<code>code_dir</code>这一配置项后，就可以更优雅地处理这些文件了。</p><p><code>code_dir</code>的默认值为路径<strong>downloads/code</strong>。问题是该文件夹应该位于何处，才能在确保使用hexo server和hexo deploy两个命令时，文章被正确处理。经过尝试之后得知，文件夹downloads/code应位于<strong>source</strong>文件夹内，如下图。这样的话可以确保，无论文章是在编辑、预览或发布时，文章中的相关内容都有效。</p><p><img src="/2020/09/02/hexo-02-embed-html-and-downloads-code/hexo-02-01.png" alt="截屏2020-09-02 下午4.52.28"></p><p>这个文件夹，不仅可以用于本文提到嵌入式的html，css和js文件的保存目录，也可以作为示例代码的保存路径以供读者下载尝试。即在markdown文章内使用下列代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">donwload file</span>](<span class="link">/downloads/code/demo.html</span>)</span><br></pre></td></tr></table></figure><p>文章发布时，读者就可以使用右键菜单“储存为…”下载所需文件。</p><p>这里没有专家，记录这些主要是为了自己以后回顾学习之方便，文章有不足之处也实属正常。见解不同，诚切赐教，关注微信公众号，一起讨论学习。</p><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">    版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，    转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。</div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者: Jim Wang 公众号: &lt;a class=&quot;main-button-link&quot; href=&quot;#wechat&quot; rel=&quot;noopener&quot;&gt;巴博萨船长&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;摘要：使用Hexo时，如何解决嵌入的html也被hexo的主题代码渲染的问题？hexo中的code_dir的文件夹的作用是？&lt;/p&gt;
&lt;p&gt;Abstract: How to solve the problem that embedded html is also rendered by hexo theme code. What does the code_dir folder in hexo for? &lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo 相关 - 实战经验" scheme="https://zicowarn.github.io/categories/Hexo-%E7%9B%B8%E5%85%B3-%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Hexo" scheme="https://zicowarn.github.io/tags/Hexo/"/>
    
      <category term="使用技巧" scheme="https://zicowarn.github.io/tags/%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>CSS 如何运用CSS来隐藏页面文本</title>
    <link href="https://zicowarn.github.io/2020/08/29/css-01-use-css-hide-content/"/>
    <id>https://zicowarn.github.io/2020/08/29/css-01-use-css-hide-content/</id>
    <published>2020-08-29T09:13:51.000Z</published>
    <updated>2020-08-29T09:13:51.000Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>开篇立意，在探索全栈程序猿的路上我还坚持爬行着。在本文伊始想给大家大家讲一下，这里没有什么所谓专家和也没有能独挡一面的技术大拿，有的仅仅是一个愿意不断尝试，愿意学习的学生而已。不忘初心，正所谓阅文无数，不如明师指路；明师指路，不如自己去悟。说到底，学习知识做到知行合一才是真理。</p><h3 id="任务背景"><a href="#任务背景" class="headerlink" title="任务背景"></a>任务背景</h3><p>为了学会CSS相关的内容，更为了把学到的东西用到实处，在实践中发现问题，再回过头来继续学习，螺旋上升，加快成长。从今天开始，所发的CSS相关的文章就是在记录自己学习使用CSS的时候走的每一步。</p><p>为了学习前端知识，在过去一段时间尝试完成的项目是一个管理构建项目和查看构建状态的网页工具，在该项目中使用了Material Design Lite组件用于解决页面布局和基本的元素样式。使这个该组建也是为了学习和了解Material Design这种扁平化设计理念。官方网页介绍的使用方法如下，是在html页面中导入CSS和JavaScript两者资源。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./material.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./material.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://fonts.googleapis.com/icon?family=Material+Icons"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中material.min.css文件，是自己在<a href="https://getmdl.io/customize" target="_blank" rel="noopener">https://getmdl.io/customize</a> 官方页面下，按照说明文档，自定义生成的，其使用的默认主色为indigo和强调色为pink。相关的使用方法与规范，请参见官方文档，本文不再做说明。</p><h3 id="所遇问题"><a href="#所遇问题" class="headerlink" title="所遇问题"></a>所遇问题</h3><p>有关Material Design Lite使用方法的内容中关于字体图标Material+Icons的链接的部分，由于大家熟知的原因，使用这个地址的CDN是不被推荐的，另一方面，因为该小型管理项目最终也是在内部网络使用的，再者初始版本中使用的是w3 css开源主题，Roboto免费字体与Font Awesome开源图表库，这些内容也希望能新的样式中继续使用。所以类似这样的外部链接就有悖项目现实情况。当然网络中也有此类资源本地使用方法的介绍，相关内容因与本文无关，不在赘述。</p><p>自己项目页面基本布局如下图所示，左侧为导航navibar部分，底部为页脚footer部分，右上为页眉header部分与右侧中部为主要内容显示部分。navibar会根据页面宽度自动显示与隐藏，这是Material Design Lite的组件特性。</p><p><img src="/2020/08/29/css-01-use-css-hide-content/css-01-03.png" alt></p><p>项目中header部分的代码如下，注意，这里使用的是jade模版。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; header part</span><br><span class="line">header(class&#x3D;&quot;mdl-layout__header&quot;)</span><br><span class="line">  div(class&#x3D;&quot;mdl-layout__header-row&quot;)</span><br><span class="line">    span(class&#x3D;&quot;mdl-layout-title&quot;). </span><br><span class="line">      #&#123;t(&#39;index.title&#39;, &#39;My header title&#39;)&#125;</span><br><span class="line">    div(class&#x3D;&quot;mdl-layout-spacer&quot;)</span><br></pre></td></tr></table></figure><p>由于是响应式的UI布局，当页面尺寸低于一个值时，左侧导航菜单就会被隐藏，同时按钮图标会显示在Header部分，估计很多朋友都见过类似的响应式布局，如此一来，就遇到了本文所述的关键问题。前文说道项目中没有引入Material+Icons的链接。也就无法显示正确显示这个按钮，具体情况如图所示：</p><p><img src="/2020/08/29/css-01-use-css-hide-content/css-01-02.png" alt></p><p>该按钮是由material.min.js自动生成的，当页面宽度缩小到一定值时，页眉header部分的代码变为如下所示，对比之间的代码可见在div(class=”mdl-layout__header-row”)上面出现了一个新的div块，内部为一个图标元素，该图标即为上图中的菜单按钮，由于定义图标的资源未被引入，所以图标未正确显示。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"mdl-layout__header is-casting-shadow"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">aria-expanded</span>=<span class="string">"false"</span> <span class="attr">role</span>=<span class="string">"button"</span> <span class="attr">tabindex</span>=<span class="string">"0"</span> <span class="attr">class</span>=<span class="string">"mdl-layout__drawer-button"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"material-icons"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mdl-layout__header-row"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"mdl-layout-title"</span>&gt;</span>My header title<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   ...</span><br></pre></td></tr></table></figure><p>按钮图标的内容content是由常量MaterialLayout.prototype.Constant_中的MENU_ICON来定义的，可以通过查看未压缩的material.js文档找到如下的定义：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">MaterialLayout.prototype.Constant_ = &#123;</span><br><span class="line">    MAX_WIDTH: <span class="string">'(max-width: 1024px)'</span>,</span><br><span class="line">    TAB_SCROLL_PIXELS: <span class="number">100</span>,</span><br><span class="line">    RESIZE_TIMEOUT: <span class="number">100</span>,</span><br><span class="line">    MENU_ICON: '&amp;#xE5D2;', # 按钮图标的值</span><br><span class="line">    CHEVRON_LEFT: <span class="string">'chevron_left'</span>,</span><br><span class="line">    CHEVRON_RIGHT: <span class="string">'chevron_right'</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>由于项目现实条件约束，不能引入Material+Icons的链接，又因为最后使用的是压缩后的min.js文件，文件可读性太差，再者修改代码就要理解机制，所以修改相应的js代码也不现实。那能不能通过CSS控制元素的样式隐藏这个图标内容呢？这就是今天文章的主要内容。使用CSS来隐藏页面文本元素的方法很简单，关键代码如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hide-text</span> &#123;</span><br><span class="line">  <span class="attribute">text-indent</span>: <span class="number">100%</span>; </span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实验表明，该方法适用于现有项目，解决了所遇问题，再使用的时候我就好奇背后的原理。也想知道上述CSS代码是如何实现隐藏文本的呢？背后逻辑与思想究竟又是什么？（诸位前辈莫笑，毕竟本人CSS理论知识不足，大部分就是现学现用的）。结合上述方法和项目本身条件，由于隐藏该内容的目的是想使用新的图标，所以，最终相关的CSS代码如下，由于文本文档被隐藏，这时使用新的按钮图标&lt;i&gt;来替换原始按钮图标也会被隐藏，所以就需要以背景的方式显示新的图标，由于Font Awesome图标的颜色为黑色，为此我还修改了相应svg文件中的“<strong>fill</strong>”属性，使其图标颜色为白色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.mdl-layout__header</span> <span class="selector-class">.mdl-layout__drawer-button</span> <span class="selector-class">.material-icons</span> &#123;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">30px</span> <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(../fonts/bars-solid.svg) no-repeat;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">0.3em</span>;</span><br><span class="line">  <span class="attribute">text-indent</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个方法被称为为Kellum方法，在方法溯源上我没有去深究。在搜索外文资料时，输入该关键字确实能够过滤结果。该方法主要思想就是在设置文中不换行white-space: nowrap的前提下，无限制地增加首行缩进text-indent: 100%从而将文本内容推出到页面的显示范围。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">overflow</span>: <span class="selector-tag">hidden</span></span><br></pre></td></tr></table></figure><p>该方法内overflow: hidden的使用算是非常聪明的地方，也说明了该方法设计者对CSS的经验之丰富。测试表明，如果在该方法中不使用overflow:hidden，那么如果文本中包含&lt;a&gt;元素的话，左侧的边界会被击穿，即文本中的第一个字符还是会被显示出来，感兴趣可以测试下下列代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">p &#123;</span><br><span class="line"><span class="css"><span class="selector-tag">text-indent</span><span class="selector-pseudo">:100</span>%;</span></span><br><span class="line">white-space: nowrap;</span><br><span class="line">//overflow:hidden</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>122345678abcdefghijklmnopqrstuvwxy</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对该方法的讨论还远不止如此，有人建议使用“text-indent: 9999px”来替代“text-indent:100%”从而保证文本内容一定会被推出显示范围，而且如果使用9999px的话，可以不需结合overflow:hidden，此时文本的左侧边界不会被击穿。感兴趣的话，也可以结合上面的示例页面代码自己尝试一下。但也有一部分人对“9999px”在该方法中替代“100%”持反对态度，因为如果使用绝对值的话，浏览器就需要画出9999px边框，这样的话在性能方面就会有些损失。</p><p>也有人在使用时发现，该方法并不适用于html的&lt;button&gt;元素，使用此方法时，Button元素的右侧，即带有缩进的文本的左侧边界也会被击穿，此时情况与上文中文本包含&lt;a&gt;元素时一致，可以使用下方代码进行测试：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">button</span><br><span class="line">&#123;</span><br><span class="line">width: 120px;</span><br><span class="line">  height: 32px;</span><br><span class="line">  text-indent: 100%; </span><br><span class="line">  white-space: nowrap;</span><br><span class="line">  overflow: hidden</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>Button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上述代码的结果如下，可以看出文本左侧边界被“<strong>击穿</strong>”了。</p><p><img src="/2020/08/29/css-01-use-css-hide-content/css-01-04.png" alt></p><p>为什么遇到&lt;button&gt;元素时，即便结合使用了overflow: hidden还是会出现页面被击穿的现象呢？这是因为一些类似于&lt;button&gt;的html元素本身自带内部填充intrinsic padding。重置button的padding属性就可以解决这一问题，当然将text-indent的值设置为大于100%，或使用前文中所说的9999px也能达到相似的结果。将下面的代码添加至上面的html代码中就能解决这个问题：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>; <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>本人在CSS方面的知识并不丰富，一直在不断学习，文章中所述所写必然存在不足之处，望各位读者多多指正。如果哪位朋友有更好的解决方案，更希望能不吝赐教，大家一同学习，共同进步。欢迎关注我的微信公众号，留言讨论。</p><h3 id="参考目录"><a href="#参考目录" class="headerlink" title="参考目录"></a>参考目录</h3><p>Hide text using css: <a href="https://stackoverflow.com/questions/471510/hide-text-using-css" target="_blank" rel="noopener">https://stackoverflow.com/questions/471510/hide-text-using-css</a></p><p>why the kellum method doesn’t work with button elements? : <a href="https://stackoverflow.com/questions/26992552/css-image-replacement-why-the-kellum-method-doesnt-work-with-button-elements" target="_blank" rel="noopener">https://stackoverflow.com/questions/26992552/css-image-replacement-why-the-kellum-method-doesnt-work-with-button-elements</a></p><p>CSS white-space 属性: <a href="https://www.w3school.com.cn/cssref/pr_text_white-space.asp" target="_blank" rel="noopener">https://www.w3school.com.cn/cssref/pr_text_white-space.asp</a></p><p>CSS text-indent 属性: <a href="https://www.w3school.com.cn/cssref/pr_text_text-indent.asp" target="_blank" rel="noopener">https://www.w3school.com.cn/cssref/pr_text_text-indent.asp</a></p><p>Replacing the -9999px hack (new image replacement) : <a href="http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/" target="_blank" rel="noopener">http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/</a></p><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">    版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，    转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。</div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要：究竟什么样的应用场景中才需要使用CSS来隐藏文本，为什么不直接修改HTML来删除想要隐藏的内容呢？使用CSS来隐藏页面文本，究竟是如何实现的？为什么要在项目中这么做，究竟为何？究竟什么是Kellum方法，该方法的使用范围与方法的局限性是？&lt;/p&gt;
&lt;p&gt;Abstract: What kind of application scenarios need to use CSS to hide text, why not directly modify the HTML to delete the content that you want to hide? How to use CSS to hide page text? Why do I do this in my own project? When is the Kellum method, the scope of use of the method and the limitations of the method?&lt;/p&gt;
    
    </summary>
    
    
      <category term="CSS 相关 - 实战经验" scheme="https://zicowarn.github.io/categories/CSS-%E7%9B%B8%E5%85%B3-%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="前端" scheme="https://zicowarn.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="CSS" scheme="https://zicowarn.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Python 杂记之 如何在实现子进程到父进程的环境变量更新</title>
    <link href="https://zicowarn.github.io/2020/07/17/0808-ma-run-vcvars-set-devenv-ci/"/>
    <id>https://zicowarn.github.io/2020/07/17/0808-ma-run-vcvars-set-devenv-ci/</id>
    <published>2020-07-17T09:11:08.000Z</published>
    <updated>2020-07-17T09:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><p>作者: Jim Wang 公众号:  <a class="main-button-link" href="#wechat" rel="noopener">巴博萨船长</a></p><h3 id="任务背景"><a href="#任务背景" class="headerlink" title="任务背景"></a>任务背景</h3><p> 该任务是：当前所用的完成持续集成的脚本是Python语言实现的。在现有的脚本的核心内容是，使用subprocess.Popen方法来调用devenv命令，从而实现项目的清理clean和构建build。</p><p>今年伊始，项目中引用了.NET组件。一部分代码使用.NET完成了一个交互界面窗口。由于使用了.NET，编译的时候就需要对.NET的程序集进行强名称签名等一系列操作。例如，在导出类型库时会使用到的类型库导出工具Tlbexp.exe（一般在Visual Studio项目属性中<strong>[生成]</strong>部分中的“为COM互操作注册”被勾选时），以及程序集注册工具Regasm.exe等。此类工具的路径为：C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\Tools\。理论上，当在命令行中使用devenv命令工具时，该工具就会自动查找上述的工具目录，并保证在编译解决方案的时候能够访问到这些工具。实践得知，devenv不能完成诸如此类环境变量的设置。进而在使用devenv时，因为项目配置中的所用到的工具因为无法找到会发生编译错误。</p><p>既然devenv不能实现理论结果，那就需要用到vsvars32.bat个batch文件了了。该文件是visual studio自带的文件，本质就是配置环境变量，工作目录的一些批处理命令。任务中遇到的问题是Tlbexp.exe无法找到，问题的本质是工具的路径不在系统环境中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VS140COMNTOOLS&#x3D;C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\Tools\</span><br></pre></td></tr></table></figure><h3 id="初始代码"><a href="#初始代码" class="headerlink" title="初始代码"></a>初始代码</h3><p>话不多少，直接上代码，项目一开始我们使用的是如下的代码，代码的主要内容是使用subprocess模块下的Popen方法来调用cmd命令devenv完成代码的清除clean和构建build，部分代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> subprocess <span class="keyword">as</span> sp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 省略部分</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mCompile</span><span class="params">(slnPath, compilArgs)</span>:</span></span><br><span class="line">    <span class="string">"""[summary]</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        slnPath ([type]): [description]</span></span><br><span class="line"><span class="string">        compilArgs ([type]): [description]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Raises:</span></span><br><span class="line"><span class="string">        RuntimeError: [description]</span></span><br><span class="line"><span class="string">        ValueError: [description]</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    compilerExe = <span class="string">"C://Porgamm Files (x86)//Microsoft Visual Studio XX.X/CommonX//IDE//devenv"</span></span><br><span class="line">    startupinfo = sp.STARTUPINFO()</span><br><span class="line">    startupinfo.dwFlags |= sp.STARTF_USESHOWWINDOW</span><br><span class="line"></span><br><span class="line">    logClean = <span class="string">"clean.txt"</span></span><br><span class="line">    stepClean = sp.Popen([compilerExe, <span class="string">"/clean"</span>, compilArgs, slnPath, <span class="string">"/OUT"</span>, logClean ], stdout=sp.PIPE, stderr=sp.STDOUT, startupinfo=startupinfo)</span><br><span class="line">    stdoutdata, stderrdata = stepClean .communicate()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> stepClean.returncode != <span class="number">0</span>:</span><br><span class="line">        msg = <span class="string">"Error: Failed to clean the solution "</span> + slnPath</span><br><span class="line">        <span class="keyword">if</span> stdoutdata != <span class="literal">None</span>:</span><br><span class="line">            msg = msg + <span class="string">"\nError Message: "</span> + stdoutdata</span><br><span class="line">        <span class="keyword">raise</span> RuntimeError(msg)</span><br><span class="line">    </span><br><span class="line">    logBuild = <span class="string">"build.txt"</span></span><br><span class="line">    stepCompile = sp.Popen([compilerExe, <span class="string">"/rebuild"</span>, compilArgs, slnPath, <span class="string">"/OUT"</span>, logBuild], stdout=sp.PIPE, stderr=sp.STDOUT, startupinfo=startupinfo)</span><br><span class="line">    stdoutdata, stderrdata = stepCompile.communicate()</span><br><span class="line">    <span class="keyword">if</span> stepCompile.returncode != <span class="number">0</span>:</span><br><span class="line">        msg = <span class="string">"Error: Failed to compile the solution "</span> + slnPath</span><br><span class="line">        <span class="keyword">if</span> stdoutdata != <span class="literal">None</span>:</span><br><span class="line">            msg = msg + <span class="string">"\nError Message: "</span> + stdoutdata</span><br><span class="line">        <span class="keyword">raise</span> RuntimeError(msg)</span><br></pre></td></tr></table></figure><p>上述代码中有STARTUPINFO相关内容，为了方便代码解释在此列出如下清单，清单中对每个结构体每个成员都通过注释的方式对成员的功能一一进行了解释：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">STARTUPINFO</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    DWORD cb;            <span class="comment">//包含STARTUPINFO结构中的字节数.如果Microsoft将来扩展该结构,它可用作版本控制手段.应用程序必须将cb初始化为sizeof ( STARTUPINFO )</span></span><br><span class="line">    PSTR lpReserved;      <span class="comment">//保留。必须初始化为N U L L</span></span><br><span class="line">    PSTR lpDesktop;    <span class="comment">//用于标识启动应用程序所在的桌面的名字。如果该桌面存在，新进程便与指定的桌面相关联。如果桌面不存在，便创建一个带有默认属性的桌面，并使用为新进程指定的名字。    如果lpDesktop是NULL（这是最常见的情况 ),那么该进程将与当前桌面相关联</span></span><br><span class="line">    PSTR lpTitle;    <span class="comment">//用于设定控制台窗口的名称。如果l p Ti t l e 是N U L L ，则可执行文件的名字将用作窗口名</span></span><br><span class="line">    DWORD dwX;       <span class="comment">//用于设定应用程序窗口在屏幕上应该放置的位置的x 和y 坐标（以像素为单位）。</span></span><br><span class="line">    DWORD dwY;       <span class="comment">//只有当子进程用CW_USEDEFAULT作为CreateWindow的x参数来创建它的第一个重叠窗口时,    才使用这两个坐标。若是创建控制台窗口的应用程序，这些成员用于指明控制台窗口的左上角</span></span><br><span class="line"></span><br><span class="line">    DWORD dwXSize;  <span class="comment">//用于设定应用程序窗口的宽度和长度（以像素为单位）只有dwYsize</span></span><br><span class="line">    DWORD dwYSize;  <span class="comment">// 当子进程将CW_USEDEFAULT 用作CreateWindow 的nWidth参数来创建它的第一个重叠窗口时，才使用这些值。若是创建控制台窗口的应用程序，这些成员将用于指明控制台窗口的宽度</span></span><br><span class="line">    DWORD dwXCountChars;  <span class="comment">//用于设定子应用程序的控制台窗口的宽度和高度（以字符为单位）</span></span><br><span class="line">    DWORD dwYCountChars;</span><br><span class="line">    DWORD dwFillAttribute;   <span class="comment">//用于设定子应用程序的控制台窗口使用的文本和背景颜色</span></span><br><span class="line">    DWORD dwFlags;           <span class="comment">//请参见下一段和表4 - 7 的说明</span></span><br><span class="line">    WORD wShowWindow;        <span class="comment">//用于设定如果子应用程序初次调用的ShowWindow 将SW_SHOWDEFAULT 作为    nCmdShow 参数传递时，该应用程序的第一个重叠窗口应该如何出现。本成员可以是通常用于ShowWindow 函数的任何一个SW_*标识符</span></span><br><span class="line">    WORD cbReserved2;        <span class="comment">//保留。必须被初始化为0</span></span><br><span class="line">    PBYTE lpReserved2;       <span class="comment">//保留。必须被初始化为N U L L</span></span><br><span class="line">    HANDLE hStdInput;        <span class="comment">//用于设定供控制台输入和输出用的缓存的句柄。按照默认设置，hStdInput 用于标识键盘缓存，hStdOutput 和hStdError用于标识控制台窗口的缓存</span></span><br><span class="line">    HANDLE hStdOutput;</span><br><span class="line">    HANDLE hStdError;</span><br><span class="line">&#125; STARTUPINFO, *LPSTARTUPINFO;</span><br></pre></td></tr></table></figure><p>在原始代码中使用上述结构体的<strong>dwFlags</strong>成员，该成员的值被设定为<strong>STARTF_USESHOWWINDOW</strong>，意指使用wShowWindow这个成员属性，其他相关值，请参阅下列清单。这样做的目的是，当需要隐藏窗口时，结合示例代码，仅需要在代码中添加startupinfo.wShowWindow = sp.SW_HIDE即可，但因devenv这样的命令不包含窗体，为了保持简约，所以就没有写入这些代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">                      表4-7 dwFlags 使用标志及含义</span><br><span class="line">标志                                    含义</span><br><span class="line"></span><br><span class="line">STARTF_USESIZE                 &#x2F;&#x2F; 使用dwXSize 和dwYSize 成员</span><br><span class="line">STARTF_USESHOWWINDOW              &#x2F;&#x2F;使用wShowWindow 成员</span><br><span class="line">STARTF_USEPOSITION              &#x2F;&#x2F;使用dwX 和dwY 成员</span><br><span class="line">STARTF_USECOUNTCHARS                &#x2F;&#x2F;使用dwXCountChars 和dwYCount Chars 成员</span><br><span class="line">STARTF_USEFILLATTRIBUTE          &#x2F;&#x2F;使用dwFillAttribute 成员</span><br><span class="line">STARTF_USESTDHANDLES              &#x2F;&#x2F;使用hStdInput 、hStdOutput 和hStdError 成员</span><br><span class="line">STARTF_RUN_FULLSCREEN              &#x2F;&#x2F;强制在x86 计算机上运行的控制台应用程序以全屏幕方式启动运行</span><br></pre></td></tr></table></figure><h3 id="初步修改"><a href="#初步修改" class="headerlink" title="初步修改"></a>初步修改</h3><p>我们要解决的“工具Tlbexp.exe无法找到”这个问题，就需要运行vsvars32.bat这batch文件，完成系统环境变量的更新。理论上仅需要在mComple这个函数中，即clean步骤前再次使用subprocess模块下的Popen方法来运行vsvars32.bat即可，相应代码应为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> subprocess <span class="keyword">as</span> sp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 省略部分</span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mCompile</span><span class="params">(slnPath, compilArgs)</span>:</span></span><br><span class="line">    <span class="string">"""[summary]</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        slnPath ([type]): [description]</span></span><br><span class="line"><span class="string">        compilArgs ([type]): [description]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Raises:</span></span><br><span class="line"><span class="string">        RuntimeError: [description]</span></span><br><span class="line"><span class="string">        ValueError: [description]</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    vsvarsbatch = <span class="string">"C://Porgamm Files (x86)//Microsoft Visual Studio XX.X/CommonX//Tools//vsvars32.bat"</span></span><br><span class="line">    compilerExe = <span class="string">"C://Porgamm Files (x86)//Microsoft Visual Studio XX.X/CommonX//IDE//devenv"</span></span><br><span class="line">    startupinfo = sp.STARTUPINFO()</span><br><span class="line">    startupinfo.dwFlags |= sp.STARTF_USESHOWWINDOW</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> vsvarsbatch != <span class="string">""</span>:  <span class="comment">#  run vsvars32.bat of visual studio</span></span><br><span class="line">        cmd = [vsvarsbatch]</span><br><span class="line">        stepVSARS = sp.Popen(cmd, stdout=sp.PIPE, stderr=sp.STDOUT, startupinfo=startupinfo)</span><br><span class="line">        stdoutdata, stderrdata = stepVSARS.communicate()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> stepVSARS.returncode != <span class="number">0</span>:</span><br><span class="line">            msg = <span class="string">"Error: Failed to raun vsvars32.bat"</span></span><br><span class="line">            <span class="keyword">if</span> stdoutdata != <span class="literal">None</span>:</span><br><span class="line">                msg = msg + <span class="string">"\nError Message: "</span> + stdoutdata</span><br><span class="line">            <span class="keyword">raise</span> RuntimeError(msg)</span><br><span class="line">        <span class="keyword">if</span> stepVSARS.wait() != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(stderrdata.decode(<span class="string">"mbcs"</span>))</span><br><span class="line"></span><br><span class="line">    logClean = <span class="string">"clean.txt"</span></span><br><span class="line">    stepClean = sp.Popen([compilerExe, <span class="string">"/clean"</span>, compilArgs, slnPath, <span class="string">"/OUT"</span>, logClean ], stdout=sp.PIPE, stderr=sp.STDOUT, startupinfo=startupinfo)</span><br><span class="line">    stdoutdata, stderrdata = stepClean .communicate()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 省略部分</span></span><br></pre></td></tr></table></figure><p>可现实是这样的代码达不到预期的结果，根本原因在于：<strong>程序中，进程之间的数据是隔离的，内存空间是不能共享的，进程之间要进行数据通信必须借助其他手段。子进程的结果父进程获取不到，其他的子进程当然也无法得到。</strong></p><p>还会有疑问的地方可能是，<strong>可我们的问题焦点是系统的环境变量？</strong>程序中，每个进程都有自己的运行环境，这样的环境只能从父进程被继承到子进程中，而不能反向地从子进程传递到父进程。实际上，默认情况下subprocess模块下的Popen方法一直践行着这种规则，Popen方法有env这个参数，该参数用于指定子进程的环境变量，如果 env = None，子进程的环境变量将从父进程中继承。也就是说，如果环境变量不加修改，那么子进程的环境变量与父进程一致，与其他子进程也一致。由于环境变量传递的单向性，我们上述的初始修改代码是不能完成任务要求的。</p><p>既然常规方法不行，那就使用一个<strong>非常规</strong>的方式，我们可以使用被称为“<strong>外带数据</strong>”（out-of-band）的进程通讯方式，将子进程中环境变量的变化传递给父进程。</p><h3 id="最终修改"><a href="#最终修改" class="headerlink" title="最终修改"></a>最终修改</h3><p>针对初始修改中依旧存在的问题，我们再次对代码进行了修改。最终版本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> subprocess <span class="keyword">as</span> sp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 省略部分</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mCompile</span><span class="params">(slnPath, compilArgs)</span>:</span></span><br><span class="line">    <span class="string">"""[summary]</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        slnPath ([type]): [description]</span></span><br><span class="line"><span class="string">        compilArgs ([type]): [description]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Raises:</span></span><br><span class="line"><span class="string">        RuntimeError: [description]</span></span><br><span class="line"><span class="string">        ValueError: [description]</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    vvsvarsbatch = <span class="string">"C://Porgamm Files (x86)//Microsoft Visual Studio XX.X/CommonX//Tools//vsvars32.bat"</span></span><br><span class="line">    compilerExe = <span class="string">"C://Porgamm Files (x86)//Microsoft Visual Studio XX.X/CommonX//IDE//devenv"</span></span><br><span class="line">    startupinfo = sp.STARTUPINFO()</span><br><span class="line">    startupinfo.dwFlags |= sp.STARTF_USESHOWWINDOW</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> vsvarsbatch != <span class="string">""</span>:  <span class="comment">#  run vsvars32.bat of visual studio</span></span><br><span class="line">        cmd = [vsvarsbatch, <span class="string">'&amp;&amp;'</span>, <span class="string">'set'</span>]</span><br><span class="line">        stepVSARS = sp.Popen(cmd, stdout=sp.PIPE, stderr=sp.STDOUT, startupinfo=startupinfo)</span><br><span class="line">        stdoutdata, stderrdata = stepVSARS.communicate()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> stepVSARS.returncode != <span class="number">0</span>:</span><br><span class="line">            msg = <span class="string">"Error: Failed to raun vsvars32.bat"</span></span><br><span class="line">            <span class="keyword">if</span> stdoutdata != <span class="literal">None</span>:</span><br><span class="line">                msg = msg + <span class="string">"\nError Message: "</span> + stdoutdata</span><br><span class="line">            <span class="keyword">raise</span> RuntimeError(msg)</span><br><span class="line">        <span class="keyword">if</span> stepVSARS.wait() != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(stderrdata.decode(<span class="string">"mbcs"</span>))</span><br><span class="line"></span><br><span class="line">        output = stdoutdata.decode(<span class="string">"mbcs"</span>).split(<span class="string">"\r\n"</span>)</span><br><span class="line">        dict_new_env = dict((e[<span class="number">0</span>].upper(), e[<span class="number">1</span>]) <span class="keyword">for</span> e <span class="keyword">in</span> [p.rstrip().split(<span class="string">"="</span>, <span class="number">1</span>) <span class="keyword">for</span> p <span class="keyword">in</span> output] <span class="keyword">if</span> len(e) == <span class="number">2</span>)</span><br><span class="line">        os.environ.update(dict_new_env)</span><br><span class="line"></span><br><span class="line">    logClean = <span class="string">"clean.txt"</span></span><br><span class="line">    stepClean = sp.Popen([compilerExe, <span class="string">"/clean"</span>, compilArgs, slnPath, <span class="string">"/OUT"</span>, logClean ], stdout=sp.PIPE, stderr=sp.STDOUT, startupinfo=startupinfo)</span><br><span class="line">    stdoutdata, stderrdata = stepClean .communicate()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 省略部分</span></span><br></pre></td></tr></table></figure><p>在这次修改中，代码<strong>cmd = [vsvarsbatch]</strong> 变成了<strong>cmd = [vsvarsbatch, ‘&amp;&amp;’, ‘set’]</strong>，因为vsvars32.bat脚本对环境变量的更新，是没有<strong>标准输出</strong>（stdout）的，即直接是看不到变化的，所以这里使用<strong>set</strong>，将子进程所有环境变量都打印到<strong>标准输出</strong>中，当<strong>组合命令</strong>运行结束之后，在检查命令是否异常结束之后，通过stdoutdata获取set命令的标准输出，然后在将得到的标准输出转换为字典格式，再然后更新当前的环境变量，这样父进程中的环境变量得到了更新。之后代码中的子进程都会使用更新之后的环境变量，这样就达到了任务要求，解决了任务难题。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>个人认为，项目发生变化会带来新的问题，这并不意外。解决问题时，初始思考的不全面也是正常的，遇见问题认真分析仔细研究终究会找到解决问题的方法的。当然，解决一个问题的可以有很多不同的方法，上述方法也仅仅是一家之言，并非最优，若读者有别的思路也欢迎关注我的个人微信公众号，一起讨论学习。</p><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">          版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，          转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。        </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者: Jim Wang 公众号:  &lt;a class=&quot;main-button-link&quot; href=&quot;#wechat&quot; rel=&quot;noopener&quot;&gt;巴博萨船长&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;摘要：Python 是如何访问和控制系统的环境变量的，Python中的父进程与子进程间的环境变量关系是何？能不能在运行时修改环境变量？子进程中对环境变量修改能不能传递给对父进程？如果能，怎么样实现这样的变化？如何使用subprocess.Popen运行vcvars.bat，然后在持续集成时，完成devenv清理和创建的前期准备。&lt;/p&gt;
&lt;p&gt;Abstract: How does Python access and control the system‘s environment variables？ What is the relationship between the environment variables of the parent process and the child process in Python? Can environment variables be modified at runtime? Can the modification of environment variables in the child process be passed to the parent process? If so, how to achieve such a change? How to use subprocess.Popen to run vcvars.bat, and then complete the preliminary preparations for the &lt;strong&gt;Clean&lt;/strong&gt; and &lt;strong&gt;Build&lt;/strong&gt; of &lt;strong&gt;devenv&lt;/strong&gt; during &lt;strong&gt;CI&lt;/strong&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python 相关 - 8. Python 杂记" scheme="https://zicowarn.github.io/categories/Python-%E7%9B%B8%E5%85%B3-8-Python-%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="https://zicowarn.github.io/tags/Python/"/>
    
      <category term="杂记" scheme="https://zicowarn.github.io/tags/%E6%9D%82%E8%AE%B0/"/>
    
      <category term="系统变量" scheme="https://zicowarn.github.io/tags/%E7%B3%BB%E7%BB%9F%E5%8F%98%E9%87%8F/"/>
    
      <category term="持续集成" scheme="https://zicowarn.github.io/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
  </entry>
  
  <entry>
    <title>Inno Setup 如何将.NET程序集（DLL）安装到GAC中</title>
    <link href="https://zicowarn.github.io/2020/07/13/inno-06-gacinstall/"/>
    <id>https://zicowarn.github.io/2020/07/13/inno-06-gacinstall/</id>
    <published>2020-07-13T10:11:08.000Z</published>
    <updated>2020-07-13T10:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><p>作者: Jim Wang 公众号: <a class="main-button-link" href="#wechat" rel="noopener">巴博萨船长</a> </p><h2 id="Inno-Setup-注册-Windows-中的COM程序集DLL"><a href="#Inno-Setup-注册-Windows-中的COM程序集DLL" class="headerlink" title="Inno Setup 注册 Windows 中的COM程序集DLL"></a>Inno Setup 注册 Windows 中的COM程序集DLL</h2><p>Inno Setup在设计程序安装包的时候，如果所需安装的文件中有DLL文件，而这些件又需要注册，一般情况下最容易想到且便于实施的，就是在<strong>[Run]</strong>段使用诸如下列的代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Filename: regsvr32; Parameters: "/s "</span><br><span class="line">""&lt;FilePath&gt;\demo1.dll"""; WorkingDir: &#123;commonappdata&#125;; StatusMsg: Registering DLLs</span><br><span class="line"></span><br><span class="line">Filename: &#123;#DotNetRegistToolPath&#125;&#125;\regasm.exe; Parameters: " ""&lt;FilePath&gt;\demo2.dll"" /codebase /verbose"; WorkingDir: "&#123;commonappdata&#125;"; StatusMsg: Registering DLLs; Flags: 64bit runhidden waituntilterminated;</span><br></pre></td></tr></table></figure><p>代码中<strong>regsvr32</strong>和<strong>regasm.exe</strong>都是用来在Windows系统下注册DLL文件的，需要知道的是，不是所有的DLL都需要在Windwos系统中注册的，需要注册的只有COM（Compoment Object Modal，组件对象模型）组件。所谓的<strong>注册</strong>就是向注册表的相应位置写入一些数据，该数据一般包含GUID（Global Unique Identity）与DLL文件的绝对路径，且两者间一一对应。这里的GUID可以理解为COM对象的统一入口，应用在使用该COM组件的时候，就是在使用这个GUID，而不需要关注该DLL文件具体在哪。</p><p>注册COM组件是为了什么呢？COM的最大特点就是：<strong>复用</strong>。注册的核心目的就是为了代码复用，在Windows中，我们可以把DLL文件存放在一些公共位置（例如C：Windows\System32文件夹中）这样也可以实现相同的目的，但是这写公共位置的DLL可能由于加载机制的问题被先使用，就容易出问题，判断加载的是自己想要的DLL也比较困难，在此列出Windwos系统查找并加载DLL的顺序，如下：</p><blockquote><p>系统标准DLL查找顺序（非安全模式）：</p><ol><li>应用程序所在目录；</li><li>当前目录。GetCurrentDirectory返回的目录；</li><li>系统目录。<a href="http://msdn.microsoft.com/en-us/library/ms724373(v=vs.85).aspx" target="_blank" rel="noopener"><strong>GetSystemDirectory</strong></a>返回的目录，通常是系统盘\Windows\System32；</li><li>16位系统目录。该项只是为了向前兼容的处理，可以不考虑；</li><li>Windows目录。<a href="http://msdn.microsoft.com/en-us/library/ms724454(v=vs.85).aspx" target="_blank" rel="noopener"><strong>GetWindowsDirectory</strong></a>返回的目录，通常是系统盘\Windows；</li><li>环境变量PATH中所有目录。</li></ol></blockquote><p><strong>Regsvr32</strong> 是用于注册COM组件的，具体的使用参数和注册机制和DLL内部的与注册相关的函数不在这里赘述。</p><p><strong>Regasm</strong>是.NET下注册COM组件的工具。因为Regsvr32不适用于注册.NET组件。可以理解为专为.NET设计的Regsvr32。</p><h2 id="全局程序集缓存GAC"><a href="#全局程序集缓存GAC" class="headerlink" title="全局程序集缓存GAC"></a>全局程序集缓存GAC</h2><p>GAC的全称是Global Assembly Cache，主要目的是存放一些公共的程序集。这样程序就可以从GAC中取得并使用程序集，而不需要将这些拷贝到应用程序的执行目录下面。换句话说，如果没有GAC的话，每个.NET的WinForm程序的目录下都有一份C:\WINDOWS\Microsoft.NET\Framework\<version>\System.Windows.Forms.dll的拷贝，这样既浪费存储空间也不利于升级和应用程序的版本控制。</version></p><p>在程序开发和测试阶段，可以使用.NET自带的工具gacutil.exe把程序集添加到GAC中和从GAC中删除出去，命令如下。在版本2.0的.NET中有一个名为Microsoft .NET Framework 2.0 Configuration的图形化界面GAC管理工具，也可以实现DLL在GAC中的安装与卸载，但该工具在之后的.NET版本中就不再存在。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gacutil /i &lt;path&gt;\sample.dll (参数 /i 是安装的意思 )</span><br><span class="line">gacutil /u sample.dll (参数 /u 是移除，不需要路径，仅DLL文件名即可 )</span><br></pre></td></tr></table></figure><p>需要注意的是，GAC中保存的都是强命名的程序集（Strong-named assemblies）。<strong>强命名</strong>的目的在于保持程序集的在系统中的唯一性。因为可能不同的公司会开发出具有相同名字的程序集，如果这样的程序集被复制到同一个目录内，最后一次安装的程序集会代替前面安装的，这就是著名的Windows “DLL Hell”问题。所以说，单单使用文件名，是不足以来区分程序集的，所以CLR（Common Language Runtime）就引入了一种新的程序集唯一标识机制，这就是所谓的强命名程序集。这样的程序集里会包含四个唯一标识：文件名（不带扩展名），版本号，语言文化信息（如果存在）和公有密钥，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">“MyType, Version&#x3D;1.0.0.0, Culture&#x3D;neutral, PublicKeyToken&#x3D;af5779ac332fc045”</span><br></pre></td></tr></table></figure><p>至于如何创建强命名的.NET程序集，在这儿就不再详细介绍了。想提示的是，.NET附带的有一名为sn.exe的工具。该工具可以对程序集进行签名，也可以查看已签名的程序集的公有密钥。</p><h2 id="Inno-Setup-安装强命名-NET程序集到GAC中"><a href="#Inno-Setup-安装强命名-NET程序集到GAC中" class="headerlink" title="Inno Setup 安装强命名.NET程序集到GAC中"></a>Inno Setup 安装强命名.NET程序集到GAC中</h2><p>Inno Setup 在程序安装过程中，可以使用类似在本文第一章节中介绍的添加一个<strong>[Run]</strong>字段的条目，通过使用gacutils工具，在程序安装完成后，在安装程序显示最终向导页面前，通过执行这个条目来实现强命名.NET程序集安装到GAC中。虽然这样可行，但在前面也说过，gacutils该工具在开发环境用起来还可以，如果到了生产环境，由于无法保证该工具在目标主机里也存在，所以这个方法失败风险很大。</p><p>另一个方法是使用名为<strong>gacinstall</strong>的标记（Flags），这样的标记常用在<strong>[Files]</strong>段里，需要注意的是Inno Setup在<a href="https://jrsoftware.org/files/is5.5-whatsnew.htm" target="_blank" rel="noopener">5.3.0-beta (2009-04-22)</a>版和其以后的版本中才支持该标记，所以在使用标记时请检查Inno Setup的版本，以免出错。</p><p>使用该标记的时，可以在<strong>[Files]</strong>添加如下条目内容。需要注意的是类似<strong>ignoreversion</strong>标记的不应该在类似的条目中被使用，因为.NET的DLL应该是版本敏感的，不应该忽略版本的变化。</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">; NOTE: Don<span class="string">'t use "Flags: ignoreversion" on any shared system files</span></span><br><span class="line"><span class="string">Source: "Demo.dll"; DestDir: "&#123;app&#125;"; StrongAssemblyName: "Demo, Version=7.0.3300.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A, ProcessorArchitecture=MSIL"; Flags: "gacinstall sharedfile uninsnosharedfileprompt"</span></span><br></pre></td></tr></table></figure><p>StrongAssemblyName关键字后面的内容就是上文提到的强命名程序的四个唯一标识。<strong>sharefile</strong>标记用于更新相关注册表信息，切勿略去。<strong>uninsnosharedfileprompt</strong>标记是为了保证在卸载该共享文件时，如果其引用计数为零，则自动删除文件，而不需要询问用户。 该标记必须与<strong>sharefile</strong>标志结合使用才能生效。</p><h3 id="补充内容"><a href="#补充内容" class="headerlink" title="补充内容"></a>补充内容</h3><p>.NET 3.5 版本及之前版本 GAC 路径在： C:\windows\Assembly</p><p>.NET 4.0 版本及之后版本 GAC 路径在：C:\Windows\Microsoft.Net\version\</p><p>文章中介绍了很多背景知识，仅最后一部分是才是文章中心内容。这些背景知识是自己在完成该项任务的一开始具有的疑问，进而在茫茫文海中查阅，再收集整理成文的，这利于自己，也方便你我。如果你有问题或者不同的见解，欢迎关注我的微信公众号，然后留言讨论。</p><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">          版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，          转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。        </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者: Jim Wang 公众号: &lt;a class=&quot;main-button-link&quot; href=&quot;#wechat&quot; rel=&quot;noopener&quot;&gt;巴博萨船长&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;摘要：Inno Setup 生成的安装包是如何在安装的过程中注册COM组件DLL文件的，.NET的DLL为什么需要注册？如何将.NET程序集安装到GAC中，这样做的目的又是什么？在这项任务的一开始，我也有类似的疑问，查找归纳后就有了这篇文章。&lt;/p&gt;
&lt;p&gt;Abstract: How does the installation package generated by Inno Setup register COM component DLL files during installation? What is the difference between .NET DLL and general DLL registration?&lt;/p&gt;
    
    </summary>
    
    
      <category term="Inno Setup 相关 - 实战经验" scheme="https://zicowarn.github.io/categories/Inno-Setup-%E7%9B%B8%E5%85%B3-%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Inno Setup" scheme="https://zicowarn.github.io/tags/Inno-Setup/"/>
    
      <category term=".NET" scheme="https://zicowarn.github.io/tags/NET/"/>
    
      <category term="GAC" scheme="https://zicowarn.github.io/tags/GAC/"/>
    
      <category term="COM" scheme="https://zicowarn.github.io/tags/COM/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 中特殊纯文本字符串引起异常</title>
    <link href="https://zicowarn.github.io/2020/02/25/hexo-01-code-raise-error/"/>
    <id>https://zicowarn.github.io/2020/02/25/hexo-01-code-raise-error/</id>
    <published>2020-02-25T00:11:08.000Z</published>
    <updated>2020-02-25T00:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>作者: Jim Wang 公众号: <a class="main-button-link" href="#wechat" rel="noopener">巴博萨船长</a></p><p>在转移自己的文章的时候发现了一个很有意思的事情，现在记录下来，咱们一起看看问题在哪。问题是这样的的，我之前的文章有如下文字</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ExtractTemporaryFile(<span class="string">'&#123;#DotNetFrameWorkWebInstaller&#125;'</span>);</span><br></pre></td></tr></table></figure><p>如果上述字符以纯文本的形式，即非代码样式和引用样式存在于md文件中，如果这时尝试使用hexo s命令的话，就会有如下异常被抛出。</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">someone@somenode-Pro TestBlog % hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">FATAL Something<span class="string">'s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">Template render error: (unknown path)</span></span><br><span class="line"><span class="string">  Error: expected end of comment, got end of file</span></span><br><span class="line"><span class="string">    at Object._prettifyError (/Users/someone/workspace/TestBlog/node_modules/nunjucks/src/lib.js:36:11)</span></span><br><span class="line"><span class="string">    at Template.render (/Users/someone/workspace/TestBlog/node_modules/nunjucks/src/environment.js:536:21)</span></span><br><span class="line"><span class="string">    at Environment.renderString (/Users/someone/workspace/TestBlog/node_modules/nunjucks/src/environment.js:378:17)</span></span><br><span class="line"><span class="string">    at /Users/someone/workspace/TestBlog/node_modules/hexo/lib/extend/tag.js:120:48</span></span><br><span class="line"><span class="string">    at tryCatcher (/Users/someone/workspace/TestBlog/node_modules/bluebird/js/release/util.js:16:23)</span></span><br><span class="line"><span class="string">    at Function.Promise.fromNode.Promise.fromCallback (/Users/someone/workspace/TestBlog/node_modules/bluebird/js/release/promise.js:209:30)</span></span><br><span class="line"><span class="string">    at Tag.render (/Users/someone/workspace/TestBlog/node_modules/hexo/lib/extend/tag.js:120:18)</span></span><br><span class="line"><span class="string">    at Object.onRenderEnd (/Users/someone/workspace/TestBlog/node_modules/hexo/lib/hexo/post.js:291:22)</span></span><br><span class="line"><span class="string">    at /Users/someone/workspace/TestBlog/node_modules/hexo/lib/hexo/render.js:79:21</span></span><br><span class="line"><span class="string">    at tryCatcher (/Users/someone/workspace/TestBlog/node_modules/bluebird/js/release/util.js:16:23)</span></span><br><span class="line"><span class="string">    at Promise._settlePromiseFromHandler (/Users/someone/workspace/TestBlog/node_modules/bluebird/js/release/promise.js:547:31)</span></span><br><span class="line"><span class="string">    at Promise._settlePromise (/Users/someone/workspace/TestBlog/node_modules/bluebird/js/release/promise.js:604:18)</span></span><br><span class="line"><span class="string">    at Promise._settlePromise0 (/Users/someone/workspace/TestBlog/node_modules/bluebird/js/release/promise.js:649:10)</span></span><br><span class="line"><span class="string">    at Promise._settlePromises (/Users/someone/workspace/TestBlog/node_modules/bluebird/js/release/promise.js:729:18)</span></span><br><span class="line"><span class="string">    at _drainQueueStep (/Users/someone/workspace/TestBlog/node_modules/bluebird/js/release/async.js:93:12)</span></span><br><span class="line"><span class="string">    at _drainQueue (/Users/someone/workspace/TestBlog/node_modules/bluebird/js/release/async.js:86:9)</span></span><br><span class="line"><span class="string">    at Async._drainQueues (/Users/someone/workspace/TestBlog/node_modules/bluebird/js/release/async.js:102:5)</span></span><br><span class="line"><span class="string">    at Immediate.Async.drainQueues (/Users/someone/workspace/TestBlog/node_modules/bluebird/js/release/async.js:15:14)</span></span><br><span class="line"><span class="string">    at processImmediate (internal/timers.js:456:21)</span></span><br></pre></td></tr></table></figure><p>上述异常信息中，重点为Template render error: (unknown path)。应该是，Markdown文件在渲染成html时，<strong>ExtractTemporaryFile</strong>被视为代码了，而如果修改括号中的参数值为空，异常就不存在了，如下纯文本：</p><p>ExtractTemporaryFile(‘’);</p><p>确实非常有意思。我了如下的文本，也同样会抛出相同的异常。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">render(<span class="string">'&#123;#DotNetFrameWorkWebInstaller&#125;'</span>)</span><br></pre></td></tr></table></figure><p>如果试一试一个随意的函数名称呢？比如hello这个作为函数的姓名，如下，一样会抛出异常。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello(<span class="string">'&#123;#DotNetFrameWorkWebInstaller&#125;'</span>)</span><br></pre></td></tr></table></figure><p>这样的话问题应该位于参数部分，即：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;#DotNetFrameWorkWebInstaller&#125;</span><br></pre></td></tr></table></figure><p>我也做了尝试，如果上述内容作为纯文本出现在Markdown文件内，则会抛出异常。那么如果换个变量名字呢？比如，newparams，即参数部分如下，一行会抛出异常。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;#newparams&#125;</span><br></pre></td></tr></table></figure><p>问题在于#这个符号，#后面跟着英文字符就会被理解成<strong>锚点</strong>了。该错误与圆括号有关，即Markdown文件中任何以：<strong>左圆括号 + #号 + 英文字符</strong> 形式存在的纯文本字符串都会引发上述异常（右侧圆括号可以不存在，例如，下列的字符若以纯文本存在就会引发异常：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;#dedee</span><br></pre></td></tr></table></figure><p>目前找到的解决方法为在#号前输入两个\ 反斜杠。但是渲染后，还会存在一个反斜杠，所以要额外对此进行说明。感兴趣关注微信公众号，一起讨论学习。</p><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">          版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，          转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。        </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者: Jim Wang 公众号: &lt;a class=&quot;main-button-link&quot; href=&quot;#wechat&quot; rel=&quot;noopener&quot;&gt;巴博萨船长&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在转移自己的文章的时候发现了一个很有意思的事情，现在记录下来，咱们一起看看问题在哪。问题是这样的的，我之前的文章有如下文字&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ExtractTemporaryFile(&lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;#DotNetFrameWorkWebInstaller&amp;#125;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果上述字符以纯文本的形式，即非代码样式和引用样式存在于md文件中，如果这时尝试使用hexo s命令的话，就会有如下异常被抛出。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo 相关 - 实战经验" scheme="https://zicowarn.github.io/categories/Hexo-%E7%9B%B8%E5%85%B3-%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Hexo" scheme="https://zicowarn.github.io/tags/Hexo/"/>
    
      <category term="异常处理" scheme="https://zicowarn.github.io/tags/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Inno Setup 如何更换向导页面标题部分的背景</title>
    <link href="https://zicowarn.github.io/2019/08/10/inno-05-beautify-wizard-laben/"/>
    <id>https://zicowarn.github.io/2019/08/10/inno-05-beautify-wizard-laben/</id>
    <published>2019-08-10T00:11:08.000Z</published>
    <updated>2019-08-10T00:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>作者: Jim Wang 公众号: <a class="main-button-link" href="#wechat" rel="noopener">巴博萨船长</a></p><p>开发部领导新的要求，希望在产品安装包的向导页面做些美化。比如，显示公司的logo在向导页面的标题部分。</p><a id="more"></a><p><img src="/2019/08/10/inno-05-beautify-wizard-laben/inno-label-part.png" alt></p><p>所谓标题即Label部分就是上图中红色方格标注的部分。 标注部分右侧是logo图标。</p><h3 id="1-初探，如何更换logo部分"><a href="#1-初探，如何更换logo部分" class="headerlink" title="1. 初探，如何更换logo部分"></a>1. 初探，如何更换logo部分</h3><p>Inno Setup开发文档里里有介绍如何更换Label中右侧的logo的方法。可以通过在<strong>[Setup]</strong>可以定义<code>WizardSmallImageFile</code>=”logo文件路径”来实现。但其要求的logo图片都是长宽相等的。长款不等的图片在显示会被拉伸，其效果惨不忍睹。该选项支持多重文件，即:你可以一次定义多个分辨率的logo文件，Inno Setup在安装的时候会根据系统当前的DPI设置，来自动选择合适分辨率的图片。多重定义的方法如下：</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Example:</span><br><span class="line">WizardSmallImageFile=mysmallimage.bmp,mysmallimage2.bmp</span><br></pre></td></tr></table></figure><p>Logo文件分辨率要求如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">100%55x55</span><br><span class="line">125%64x68</span><br><span class="line">150%83x80</span><br><span class="line">175%92x97</span><br><span class="line">200%110x106</span><br><span class="line">225%119x123</span><br><span class="line">250%138x140</span><br></pre></td></tr></table></figure><p>图片被拉伸通常发生在以下两种情况，一、显示器的设置发生了变化。二、Inno Setup向导页面被设定未可缩放。向导页面的缩放可以通过<code>WizardSizePercen</code>和<code>WizardResizable</code>。<code>WizardSizePercent</code>的合法值为从100值150。该参数的目的是允许你在不改变文字大小的前提下等比例缩放所以的安装和卸载向导页面。150意思是缩放为默认大小的150%，即增到50%。这里<code>WizardResizable</code>的合法值为yes和no，而当<code>WizardStyle</code>（其合法值为classic和modern）被设置为modern的时候，就默认为<code>WizardResizable</code>的值为yes，也同时默认为<code>WizardSizePercen</code>为120%。具体解释可以查看Inno Setup的官方文档。</p><h3 id="2-深入，如何得到当前的显示器的DPI"><a href="#2-深入，如何得到当前的显示器的DPI" class="headerlink" title="2. 深入，如何得到当前的显示器的DPI"></a>2. 深入，如何得到当前的显示器的DPI</h3><p>上文说到，图片的拉伸除了与向导页面有关，与系统的显示设置也相关，那如何得到当前显示的DPI呢？在Win7之前的系统中，要得到当前显示器的DPI，在Inno Setup的<strong>[Code]</strong>部分可以使用<code>TGraphicsObject.PixelsPerInch</code> 这个属性得到当前系统显示器设定的DPI。TGraphicsObject 这里有个小例子，代码如下：</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">CheckDPI</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  CurrentDPI, StandardDPI, MediumDPI, LargeDPI: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="comment">&#123; Get the current DPI, 从向导页面的字体中得到当前的DPI &#125;</span> </span><br><span class="line">  CurrentDPI  := WizardForm.Font.PixelsPerInch;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">&#123; Store defaults determined from Windows DPI settings &#125;</span></span><br><span class="line">  StandardDPI := <span class="number">96</span>;  <span class="comment">&#123; 100% &#125;</span></span><br><span class="line">  MediumDPI   := <span class="number">120</span>; <span class="comment">&#123; 125% &#125;</span></span><br><span class="line">  LargeDPI    := <span class="number">144</span>; <span class="comment">&#123; 150% &#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (CurrentDPI &gt;= StandardDPI) <span class="keyword">and</span> (CurrentDPI &lt; MediumDPI) <span class="keyword">then</span> </span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="comment">&#123; Execute some custom code for small to medium DPI &#125;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (CurrentDPI &gt;= MediumDPI) <span class="keyword">and</span> (CurrentDPI &lt; LargeDPI) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="comment">&#123; Execute some custom code for medium to large DPI &#125;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (CurrentDPI &gt;= LargeDPI) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="comment">&#123; Execute some custom code for large DPI or above &#125;</span></span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>从Inno Setup 的5.6的版本开始，在多重定义的时候，Inno Setup就会根据当前DPI自动选择图片大小。这个自动选择是如何实现的呢。 下面的代码就使用了<code>PixelsPerInch</code>这个属性，并尝试模拟了自动选择这部分功能。</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[Setup]</span><br><span class="line">; Use <span class="number">100</span>% images by <span class="keyword">default</span></span><br><span class="line">WizardImageFile=WizardImage <span class="number">100</span>.bmp</span><br><span class="line">WizardSmallImageFile=WizardSmallImage <span class="number">100</span>.bmp</span><br><span class="line"></span><br><span class="line">[Files]</span><br><span class="line">; Embed all other sizes <span class="keyword">to</span> the installer</span><br><span class="line">Source: "WizardImage *.bmp"; Excludes: "* 100.bmp"; Flags: dontcopy</span><br><span class="line">Source: "WizardSmallImage *.bmp"; Excludes: "* 100.bmp"; Flags: dontcopy</span><br><span class="line"></span><br><span class="line">[Code]</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetScalingFactor</span>:</span> Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> WizardForm.Font.PixelsPerInch &gt;= <span class="number">192</span> <span class="keyword">then</span> Result := <span class="number">200</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">if</span> WizardForm.Font.PixelsPerInch &gt;= <span class="number">144</span> <span class="keyword">then</span> Result := <span class="number">150</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">if</span> WizardForm.Font.PixelsPerInch &gt;= <span class="number">120</span> <span class="keyword">then</span> Result := <span class="number">125</span></span><br><span class="line">    <span class="keyword">else</span> Result := <span class="number">100</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">LoadEmbededScaledBitmap</span><span class="params">(Image: TBitmapImage; NameBase: <span class="keyword">string</span>)</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  <span class="keyword">Name</span>: <span class="keyword">String</span>;</span><br><span class="line">  FileName: <span class="keyword">String</span>;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">Name</span> := Format(<span class="string">'%s %d.bmp'</span>, [NameBase, GetScalingFactor]);</span><br><span class="line">  ExtractTemporaryFile(<span class="keyword">Name</span>);</span><br><span class="line">  FileName := ExpandConstant(<span class="string">'&#123;tmp&#125;\'</span> + <span class="keyword">Name</span>);</span><br><span class="line">  Image.Bitmap.LoadFromFile(FileName);</span><br><span class="line">  DeleteFile(FileName);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">InitializeWizard</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="comment">&#123; If using larger scaling, load the correct size of images &#125;</span></span><br><span class="line">  <span class="keyword">if</span> GetScalingFactor &gt; <span class="number">100</span> <span class="keyword">then</span> </span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    LoadEmbededScaledBitmap(WizardForm.WizardBitmapImage, <span class="string">'WizardImage'</span>);</span><br><span class="line">    LoadEmbededScaledBitmap(WizardForm.WizardBitmapImage2, <span class="string">'WizardImage'</span>);</span><br><span class="line">    LoadEmbededScaledBitmap(WizardForm.WizardSmallBitmapImage, <span class="string">'WizardSmallImage'</span>);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>那么有没有在不用重复定义，仅用一张图片然后根据当前的DPI来进行人为的缩放，也能达到良好的显示效果呢，当然有，方法如下：</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span></span><br><span class="line">  CustomPage: TWizardPage;</span><br><span class="line">  BtnImage: TBitmapImage;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">InitializeWizard</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  CustomPage := CreateCustomPage(wpLicense, <span class="string">'Heading'</span>, <span class="string">'Sub heading.'</span>);</span><br><span class="line">  ExtractTemporaryFile(<span class="string">'image.bmp'</span>);</span><br><span class="line">  BtnImage := TBitmapImage.Create(WizardForm); <span class="comment">//在当前页面即wpLicense页面创建一个Image按钮。</span></span><br><span class="line">  <span class="keyword">with</span> BtnImage <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      Parent := CustomPage.Surface;</span><br><span class="line">      Bitmap.LoadFromFile(ExpandConstant(<span class="string">'&#123;tmp&#125;'</span>)+<span class="string">'\image.bmp'</span>);</span><br><span class="line">      AutoSize := True;</span><br><span class="line">      AutoSize := False;  <span class="comment">// 缩放之前 关系BtnImage的自由大小属性</span></span><br><span class="line">      Height := ScaleX(Height); <span class="comment">// 然后根据当前BtnImage的大小进行缩放</span></span><br><span class="line">      Width := ScaleY(Width);</span><br><span class="line">      Stretch := True;</span><br><span class="line">      Left := ScaleX(<span class="number">90</span>);</span><br><span class="line">      Top := WizardForm.SelectTasksPage.Top + WizardForm.SelectTasksPage.Height -</span><br><span class="line">             Height - ScaleY(<span class="number">8</span>);</span><br><span class="line">      Cursor := crHand;</span><br><span class="line">      OnClick := @ImageOnClick;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h3 id="3-进阶，Win8之后新系统得到当前的显示器的DPI"><a href="#3-进阶，Win8之后新系统得到当前的显示器的DPI" class="headerlink" title="3. 进阶，Win8之后新系统得到当前的显示器的DPI"></a>3. 进阶，Win8之后新系统得到当前的显示器的DPI</h3><p>由于Windows 8.1之后的系统中，用户可以调整每个监视器的DPI缩放比例，并且Font.PixelsPerInch始终为主监视器返回DPI值，因此<strong>第2节</strong>中的方法就不在适用新的系统了。如果在多显示多DPI的复杂环境中，<strong>第2节</strong>中的方法表现的也不尽如人意。某些时候，可以监听WM_DPICHANGED事件，然后手动并使窗口适应变化的DPI（但此更改可以只是将窗口移动到具有不同DPI设置的监视器）。而 要获取某个窗口的DPI，就需要考虑别的解决方案了。我在网上找到了相关的介绍，但是我当前的项目中不需要这些，也就没对代码进行测试。感兴趣的朋友可以自己尝试一下，代码如下：</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">[Code]</span><br><span class="line"><span class="keyword">const</span></span><br><span class="line">  S_OK = $<span class="number">00000000</span>;</span><br><span class="line">  LOGPIXELSY = <span class="number">90</span>;</span><br><span class="line">  MONITOR_DEFAULTTONULL = $<span class="number">00000000</span>;</span><br><span class="line">  MONITOR_DEFAULTTOPRIMARY = $<span class="number">00000001</span>;</span><br><span class="line">  MONITOR_DEFAULTTONEAREST = $<span class="number">00000002</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span></span><br><span class="line">  HDC = THandle;</span><br><span class="line">  HMONITOR = THandle;</span><br><span class="line">  MONITOR_DPI_TYPE = (</span><br><span class="line">    MDT_EFFECTIVE_DPI,</span><br><span class="line">    MDT_ANGULAR_DPI,</span><br><span class="line">    MDT_RAW_DPI</span><br><span class="line">  );</span><br><span class="line"><span class="keyword">const</span></span><br><span class="line">  MDT_DEFAULT = MDT_EFFECTIVE_DPI;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetDC</span><span class="params">(hWnd: HWND)</span>:</span> HDC;</span><br><span class="line">  <span class="keyword">external</span> <span class="string">'GetDC@user32.dll stdcall'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ReleaseDC</span><span class="params">(hWnd: HWND; hDC: HDC)</span>:</span> Integer;</span><br><span class="line">  <span class="keyword">external</span> <span class="string">'ReleaseDC@user32.dll stdcall'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetDeviceCaps</span><span class="params">(hdc: HDC; <span class="keyword">index</span>: Integer)</span>:</span> Integer;</span><br><span class="line">  <span class="keyword">external</span> <span class="string">'GetDeviceCaps@gdi32.dll stdcall'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MonitorFromWindow</span><span class="params">(hwnd: HWND; dwFlags: DWORD)</span>:</span> HMONITOR;</span><br><span class="line">  <span class="keyword">external</span> <span class="string">'MonitorFromWindow@user32.dll stdcall'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetDpiForMonitor</span><span class="params">(hmonitor: HMONITOR; dpiType: MONITOR_DPI_TYPE;</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">out</span> dpiX: UINT; <span class="keyword">out</span> dpiY: UINT)</span>:</span> HRESULT;</span><br><span class="line">  <span class="keyword">external</span> <span class="string">'GetDpiForMonitor@shcore.dll stdcall delayload'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">IsWindows81OrLater</span>:</span> Boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  Result := GetWindowsVersion &gt;= $<span class="number">06030000</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetPrimaryMonitorDPI</span>:</span> Integer;</span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  DC: HDC;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="comment">// no need for try..finally block here; just get the desktop DC handle,</span></span><br><span class="line">  <span class="comment">// get the DPI and release the obtained handle</span></span><br><span class="line">  DC := GetDC(<span class="number">0</span>);</span><br><span class="line">  Result := GetDeviceCaps(DC, LOGPIXELSY);</span><br><span class="line">  ReleaseDC(<span class="number">0</span>, DC);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetWindowMonitorDPI</span><span class="params">(Handle: HWND)</span>:</span> Integer;</span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  HorzDPI: UINT;</span><br><span class="line">  VertDPI: UINT;</span><br><span class="line">  Monitor: HMONITOR;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="comment">// if we're not on at least Windows 8.1, then return the primary monitor</span></span><br><span class="line">  <span class="comment">// DPI since earlier systems did not allow per monitor DPI settings</span></span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> IsWindows81OrLater <span class="keyword">then</span></span><br><span class="line">    Result := GetPrimaryMonitorDPI</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="comment">// otherwise determine which monitor the given window intersects and try</span></span><br><span class="line">  <span class="comment">// to get DPI settings of the found monitor (if any; check MSDN docs for</span></span><br><span class="line">  <span class="comment">// the explanation and other options how to find the nearest monitor)</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="comment">// try to get the monitor which the window intersects</span></span><br><span class="line">    Monitor := MonitorFromWindow(Handle, MONITOR_DEFAULTTONULL);</span><br><span class="line">    <span class="comment">// if there's any, then...</span></span><br><span class="line">    <span class="keyword">if</span> Monitor &lt;&gt; <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="comment">// try to get DPI for that monitor; if it succeeds, return the value,</span></span><br><span class="line">      <span class="comment">// raise an exception otherwise (for details check the MSDN docs)</span></span><br><span class="line">      <span class="keyword">if</span> GetDpiForMonitor(Monitor, MDT_DEFAULT, HorzDPI, VertDPI) = S_OK <span class="keyword">then</span></span><br><span class="line">        Result := VertDPI</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        RaiseException(<span class="string">'GetDpiForMonitor function call failed!'</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      RaiseException(<span class="string">'The given window does not intersect any monitor!'</span>);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>这是Windows SDK中介绍的方法，整个设计相对来说比较复杂。简单来说，将上述代码加入你的项目中，当你需要显示器的DPI的时候就调用<code>GetWindowMonitorDPI</code>函数，然后根据DPI结合<strong>第2节</strong>中的方法来缩放或者选择你要显示的图片。</p><h3 id="4-回到项目，更换向导页面标题部分的背景"><a href="#4-回到项目，更换向导页面标题部分的背景" class="headerlink" title="4. 回到项目，更换向导页面标题部分的背景"></a>4. 回到项目，更换向导页面标题部分的背景</h3><p>上述的内容，也是我再寻找解决新需求的过程中，搜集和整理的部分内容，记录下来也是为了以后需要的时候知道应该向那个方向努力。我告诉开发主管的是，我个人不建议将我们安装应用程序的向导页面设置为可缩放，因为这样需要做出的改变特别多，而且当前的大小也能满足使用需求。但美化工作不能少，第一步的任务核心就是页面简介背景部分，代码如下：</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[Files]</span><br><span class="line">Source: "Logo-header.bmp"; Flags: dontcopy</span><br><span class="line"></span><br><span class="line">[Code]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">InitializeWizard</span><span class="params">()</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  BitmapImage: TBitmapImage;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="comment">// </span></span><br><span class="line">  ExtractTemporaryFile(<span class="string">'Logo-header.bmp'</span>);</span><br><span class="line">  BitmapImage := TBitmapImage.Create(WizardForm);</span><br><span class="line">  BitmapImage.Parent := WizardForm.MainPanel;</span><br><span class="line">  BitmapImage.Width := WizardForm.MainPanel.Width;</span><br><span class="line">  BitmapImage.Height := WizardForm.MainPanel.Height;</span><br><span class="line">  BitmapImage.Stretch := True;</span><br><span class="line">  BitmapImage.AutoSize := False;</span><br><span class="line">  BitmapImage.Bitmap.LoadFromFile(ExpandConstant(<span class="string">'&#123;tmp&#125;\Logo-header.bmp'</span>));</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 禁用 原始页面的小图标</span></span><br><span class="line">  WizardForm.WizardSmallBitmapImage.Visible := False;</span><br><span class="line">  <span class="comment">// 启用 页面简介标题</span></span><br><span class="line">  WizardForm.PageDescriptionLabel.Visible := True;</span><br><span class="line">  <span class="comment">// 启用 页面名称标题</span></span><br><span class="line">  WizardForm.PageNameLabel.Visible := True;</span><br><span class="line">  <span class="comment">// 限定页面简介标题宽度</span></span><br><span class="line">  WizardForm.PageDescriptionLabel.Width :=</span><br><span class="line">    WizardForm.PageDescriptionLabel.Width - ScaleX(<span class="number">120</span>);</span><br><span class="line">  <span class="comment">// 限定页面名称标题宽度</span></span><br><span class="line">  WizardForm.PageNameLabel.Width :=</span><br><span class="line">    WizardForm.PageNameLabel.Width - ScaleX(<span class="number">120</span>)</span><br><span class="line"> <span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>上述代码的核心思想就是，准备一张图片，该图片并不会被拷贝在目标文件夹中，在页面初始的时候，设定页面标题简述部分的背景，由于原始页面小logo被禁用，就需要缩进标题名称和简介文本的宽度，防止其覆盖图片的部分内容。</p><p><img src="/2019/08/10/inno-05-beautify-wizard-laben/inno-welcome-part.png" alt="image-20200220170839898"></p><p>任务第二部分内容，就是更改欢迎页面的背景图片，即上图中红色部分框选的地方。首先在<strong>[Setup]</strong>中定义属性为<a href="http://www.jrsoftware.org/ishelp/index.php?topic=setup_disablewelcomepage" target="_blank" rel="noopener"><code>DisableWelcomePage=no</code></a>，意指启用欢迎页面。 然后在<strong>[Setup]</strong>部分定义<code>WizardBitmapImage</code>属性即可。结束页面（下图）与开始页面相似，只需在<strong>[Setup]</strong>部分定义<code>WizardBitmapImage2</code> 属性即可。</p><p><img src="/2019/08/10/inno-05-beautify-wizard-laben/inno-finish-part.png" alt="image-20200220170935862"></p><p>需要说明的是，如果属性<code>WizardBitmapImage2</code>为被定义，而属性<code>WizardBitmapImage</code>被定义，则结束页面会选择<code>WizardBitmapImage</code>中定义的图片作为上图中红色部分圈选的背景图片。</p><h3 id="5-扩展，欢迎页面和结束页面整页照片"><a href="#5-扩展，欢迎页面和结束页面整页照片" class="headerlink" title="5. 扩展，欢迎页面和结束页面整页照片"></a>5. 扩展，欢迎页面和结束页面整页照片</h3><p>我们在<strong>第4节</strong>部分，了解了如何在使用Inno Setup的属性设定，更改欢迎和结束页面的左侧背景图片，那么有没有一种可能，即省去这两个页面的文字（通常需要考虑翻译的问题），直接使用一张图片作为整个页面的背景呢？有，本节我们就探索一下。中心思想为四部：</p><ul><li>在各自的父页面上拉伸“ WizardBitmapImage”（欢迎）和“ WizardBitmapImage2”（完成），因为这两个页面都有图片部分，就不需要再初始化TBitmapImage了。</li><li>隐藏其它内容，例如 标题和段落.</li><li>确保安装程序永远不需要重新启动计算机，否则会在结束图片上会显示上重新启动提示。</li><li>请确保在<strong>[Run]</strong>部分中没有任何<code>postinstall</code>条目。否则结束页面上也会显示提示信息。</li></ul><p><img src="/2019/08/10/inno-05-beautify-wizard-laben/inno-finish-part-full.png" alt="image-20200220171021313"></p><p>实现这部分的代码如下：</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[Setup]</span><br><span class="line">DisableWelcomePage=no</span><br><span class="line">WizardImageFile=Demo.bmp  <span class="comment">// 如果WizardImageFile2 没定义则结束页面也使用该图片</span></span><br><span class="line"></span><br><span class="line">[Code]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">InitializeWizard</span><span class="params">()</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="comment">// 欢迎页面</span></span><br><span class="line">  <span class="comment">// 隐藏 部分内容</span></span><br><span class="line">  WizardForm.WelcomeLabel1.Visible := False;</span><br><span class="line">  WizardForm.WelcomeLabel2.Visible := False;</span><br><span class="line">  <span class="comment">// 拉伸页面宽度</span></span><br><span class="line">  WizardForm.WizardBitmapImage.Width := WizardForm.WizardBitmapImage.Parent.Width;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 结束页面</span></span><br><span class="line">  <span class="comment">// 隐藏 部分内容</span></span><br><span class="line">  WizardForm.FinishedLabel.Visible := False;</span><br><span class="line">  WizardForm.FinishedHeadingLabel.Visible := False;</span><br><span class="line">  <span class="comment">// 拉伸页面宽度</span></span><br><span class="line">  WizardForm.WizardBitmapImage2.Width := WizardForm.WizardBitmapImage2.Parent.Width;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h3 id="6-扩展2，在向导页脚左侧显示版本号"><a href="#6-扩展2，在向导页脚左侧显示版本号" class="headerlink" title="6. 扩展2，在向导页脚左侧显示版本号"></a>6. 扩展2，在向导页脚左侧显示版本号</h3><p>需要的显示结果如下图所示：</p><p><img src="/2019/08/10/inno-05-beautify-wizard-laben/inno-bottom-left-part.png" alt="image-20200221093833941"></p><p>代码如下：</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[Code]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">InitializeWizard</span><span class="params">()</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  VersionLabel: TNewStaticText;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="comment">// 定义一个静态文本实例</span></span><br><span class="line">  VersionLabel := TNewStaticText.Create(WizardForm);</span><br><span class="line">  <span class="comment">// 从Setup部分的设定中获取版本号</span></span><br><span class="line">  VersionLabel.Caption := Format(<span class="string">'Version: %s'</span>, [<span class="string">'&#123;#SetupSetting("AppVersion")&#125;'</span>]);</span><br><span class="line">  <span class="comment">// 所有页面有效</span></span><br><span class="line">  VersionLabel.Parent := WizardForm;</span><br><span class="line">  <span class="comment">// 左侧位置</span></span><br><span class="line">  VersionLabel.Left := ScaleX(<span class="number">16</span>);</span><br><span class="line">  <span class="comment">// 保证 文本与按钮的 在水平方向 中心对齐</span></span><br><span class="line">  VersionLabel.Top :=</span><br><span class="line">    WizardForm.BackButton.Top +</span><br><span class="line">    (WizardForm.BackButton.Height <span class="keyword">div</span> <span class="number">2</span>) -</span><br><span class="line">    (VersionLabel.Height <span class="keyword">div</span> <span class="number">2</span>)</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>对齐的方式，以按钮的左上位置为基点，加上按钮高度与文本高度之差即可。</p><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">          版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，          转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。        </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者: Jim Wang 公众号: &lt;a class=&quot;main-button-link&quot; href=&quot;#wechat&quot; rel=&quot;noopener&quot;&gt;巴博萨船长&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;开发部领导新的要求，希望在产品安装包的向导页面做些美化。比如，显示公司的logo在向导页面的标题部分。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Inno Setup 相关 - 实战经验" scheme="https://zicowarn.github.io/categories/Inno-Setup-%E7%9B%B8%E5%85%B3-%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Inno Setup" scheme="https://zicowarn.github.io/tags/Inno-Setup/"/>
    
  </entry>
  
  <entry>
    <title>Inno Setup Windows 注册表关键字HKEY\_CLASSES\_ROOT相关内容</title>
    <link href="https://zicowarn.github.io/2019/07/10/inno-04-registry-hcr/"/>
    <id>https://zicowarn.github.io/2019/07/10/inno-04-registry-hcr/</id>
    <published>2019-07-10T00:11:08.000Z</published>
    <updated>2019-07-10T00:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>作者: Jim Wang 公众号: <a class="main-button-link" href="#wechat" rel="noopener">巴博萨船长</a></p><h2 id="Windows-注册表"><a href="#Windows-注册表" class="headerlink" title="Windows 注册表"></a>Windows 注册表</h2><p>HKEY_CLASSES_ROOT在此关键字之下，可以看见有一个CLSID关键字。在CLSID关键字之下列有系统中安装的所有组件的CLSID。注册表CLSID是一个具有如下格式的串：00000010-0000-0010-8000-00AA00D2EA4</p><a id="more"></a><p>HKEY_CLASSES_ROOT的开头，列出了将是各种应用程序所注册的文件扩展名。在扩展名之后，可以看到许多其它的名字。此类名字大多数被称作是ProgID，表示是程序员定义的标识符。某些名称表示的不是ProgID而实一些特殊的关键字。</p><p>如：</p><ul><li>CLSID</li><li>AppID，此关键字下的子关键字的作用是将某个APPID（应用程序的ID）映射成某个远程服务器名称。分式COM（DCOM）将用到此关键字。</li><li>组件类别，注册表的这一分支可以将CATID（组件类别ID）映射成某个特定的组件类别。</li><li>Interface，此关键字将用于将IID映射成某个接口相关的信息。这些信息主要用于在跨进程边界使用接口的情况。</li><li>Licenses，保存的是授权使用COM组件的一些认可信息。</li><li>TypeLib，类型库关键字保存的是关于接口成员函数所用的参数的信息。另外还有一些信息。此关键字可以将一个LIBID映射成存储类型库的文件名称。</li></ul><h3 id="ProgID"><a href="#ProgID" class="headerlink" title="ProgID"></a>ProgID</h3><p>所谓ProgID指的是程序员给某个CLSID指定的一个程序员易记的名称。ProgID命名规则为：..，如下图：</p><p>如WPDSp.WPDServiceProvider是版本无关ProgID，根据其值可在CLSID下找到相应键，进而找到相应信息，如组件最新版本信息。</p><p>WPDSp.WPDServiceProvider.1是版本相关ProgID，根据其CLSID值可以找到该版本组件的信息。</p><h3 id="ProgID注册表格式"><a href="#ProgID注册表格式" class="headerlink" title="ProgID注册表格式"></a>ProgID注册表格式</h3><p>ProgID及与版本无关的ProgID被列在组件CLSID下面。</p><p>ProgID的主要作用是获取相应的CLSID。在每一个CLSID项中查找查个ProgID将非常低效的。因此在其下面也将直接列出ProgID。由于ProgID不是针对最终用户而定义的，因此ProgID关键字的缺省值为用户易记的名称。在之下有一个名为CLSID的关键字，其缺省值为组件的CLSID。如下图所示：</p><p>与版本好无关的ProgID也直接被列在HKEY_CLASSES_ROOT下面。它们还有另外一个关键字CurVer，其缺省值为组件当前版本的ProgID，如下图：</p><h3 id="ProgID和CLSID的转换"><a href="#ProgID和CLSID的转换" class="headerlink" title="ProgID和CLSID的转换"></a>ProgID和CLSID的转换</h3><ul><li>CLSIDFromProgID</li><li>ProgIDFromCLSID</li></ul><h3 id="组件的自注册"><a href="#组件的自注册" class="headerlink" title="组件的自注册"></a>组件的自注册</h3><p>为把组件注册到注册表，在DLL中一定要输出如下两个函数：</p><p>STDAPI DllRegisterServer(); //注册</p><p>STDAPI DllUnregisterServer(); //反注册</p><p>我们使用Regsvr32.exe注册某个组件或者反注册某个组件时，其实就是调用这两个函数的过程。</p><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">          版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，          转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。        </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者: Jim Wang 公众号: &lt;a class=&quot;main-button-link&quot; href=&quot;#wechat&quot; rel=&quot;noopener&quot;&gt;巴博萨船长&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Windows-注册表&quot;&gt;&lt;a href=&quot;#Windows-注册表&quot; class=&quot;headerlink&quot; title=&quot;Windows 注册表&quot;&gt;&lt;/a&gt;Windows 注册表&lt;/h2&gt;&lt;p&gt;HKEY_CLASSES_ROOT在此关键字之下，可以看见有一个CLSID关键字。在CLSID关键字之下列有系统中安装的所有组件的CLSID。注册表CLSID是一个具有如下格式的串：00000010-0000-0010-8000-00AA00D2EA4&lt;/p&gt;
    
    </summary>
    
    
      <category term="Inno Setup 相关 - 实战经验" scheme="https://zicowarn.github.io/categories/Inno-Setup-%E7%9B%B8%E5%85%B3-%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Inno Setup" scheme="https://zicowarn.github.io/tags/Inno-Setup/"/>
    
      <category term="注册表" scheme="https://zicowarn.github.io/tags/%E6%B3%A8%E5%86%8C%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Inno Setup 检查网络连接的Pascal代码</title>
    <link href="https://zicowarn.github.io/2019/07/05/inno-03-check-network-state/"/>
    <id>https://zicowarn.github.io/2019/07/05/inno-03-check-network-state/</id>
    <published>2019-07-05T00:11:08.000Z</published>
    <updated>2019-07-05T00:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>作者: Jim Wang 公众号: <a class="main-button-link" href="#wechat" rel="noopener">巴博萨船长</a></p><h2 id="InnoSetup-检查网络连接"><a href="#InnoSetup-检查网络连接" class="headerlink" title="InnoSetup 检查网络连接"></a>InnoSetup 检查网络连接</h2><h3 id="1-循环检查网络连接直至连接成共，代码如下："><a href="#1-循环检查网络连接直至连接成共，代码如下：" class="headerlink" title="1. 循环检查网络连接直至连接成共，代码如下："></a>1. 循环检查网络连接直至连接成共，代码如下：</h3><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">function IsNetWorkActivatedRepeated: boolean;</span><br><span class="line">var</span><br><span class="line">  WinHttpReq: Variant;</span><br><span class="line">  Connected: Boolean;</span><br><span class="line">begin</span><br><span class="line">  Connected :&#x3D; False;</span><br><span class="line">  repeat</span><br><span class="line">    Log(&#39;Checking connection to the server&#39;);</span><br><span class="line">    try</span><br><span class="line">      WinHttpReq :&#x3D; CreateOleObject(&#39;WinHttp.WinHttpRequest.5.1&#39;);</span><br><span class="line">      &#123; Use your real server host name &#125;</span><br><span class="line">      WinHttpReq.Open(&#39;GET&#39;, &#39;https:&#x2F;&#x2F;www.camtek.de&#x2F;&#39;, False);</span><br><span class="line">      WinHttpReq.Send(&#39;&#39;);</span><br><span class="line">      Log(&#39;Connected to the server; status: &#39; + IntToStr(WinHttpReq.Status) + &#39; &#39; +</span><br><span class="line">          WinHttpReq.StatusText);</span><br><span class="line">      Connected :&#x3D; True;</span><br><span class="line">    except</span><br><span class="line">      Log(&#39;Error connecting to the server: &#39; + GetExceptionMessage);</span><br><span class="line">      if WizardSilent then</span><br><span class="line">      begin</span><br><span class="line">        Log(&#39;Connection to the server is not available, aborting silent installation&#39;);</span><br><span class="line">        Result :&#x3D; False;</span><br><span class="line">        Exit;</span><br><span class="line">      end</span><br><span class="line">        else</span><br><span class="line">      if MsgBox(&#39;Cannot reach server. Please check your Internet connection.&#39;,</span><br><span class="line">                mbError, MB_RETRYCANCEL) &#x3D; IDRETRY then</span><br><span class="line">      begin</span><br><span class="line">        Log(&#39;Retrying&#39;);</span><br><span class="line">      end</span><br><span class="line">        else</span><br><span class="line">      begin</span><br><span class="line">        Log(&#39;Aborting&#39;);</span><br><span class="line">        Result :&#x3D; False;</span><br><span class="line">        Exit;</span><br><span class="line">      end;</span><br><span class="line">    end;</span><br><span class="line">  until Connected;</span><br><span class="line"></span><br><span class="line">  Result :&#x3D; True;</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><h3 id="2-有限次数检测网络，代码如下："><a href="#2-有限次数检测网络，代码如下：" class="headerlink" title="2. 有限次数检测网络，代码如下："></a>2. 有限次数检测网络，代码如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">function IsNetWorkActivatedTried: boolean;</span><br><span class="line">var</span><br><span class="line">  WinHttpReq: Variant;</span><br><span class="line">  Connected: Boolean;</span><br><span class="line">  iTriedTime: Integer;</span><br><span class="line">begin</span><br><span class="line">  Connected :&#x3D; False;</span><br><span class="line">  iTriedTime :&#x3D; 0;</span><br><span class="line">  repeat</span><br><span class="line">    iTriedTime :&#x3D; iTriedTime + 1;</span><br><span class="line">    Log(&#39;Checking connection to the server, try &#39; +  + IntToStr(iTriedTime) + &#39; time.&#39;);</span><br><span class="line">    try</span><br><span class="line"></span><br><span class="line">      WinHttpReq :&#x3D; CreateOleObject(&#39;WinHttp.WinHttpRequest.5.1&#39;);</span><br><span class="line">      WinHttpReq.SetTimeouts(&#39;3000&#39;, &#39;3000&#39;, &#39;3000&#39;, &#39;3000&#39;);</span><br><span class="line">      &#x2F;&#x2F; Use your real server host name </span><br><span class="line">      WinHttpReq.Open(&#39;GET&#39;, &#39;https:&#x2F;&#x2F;www.goolge.de&#x2F;&#39;, False);</span><br><span class="line">      WinHttpReq.Send(&#39;&#39;);</span><br><span class="line">      Log(&#39;Connected to the server; status: &#39; + IntToStr(WinHttpReq.Status) + &#39; &#39; +</span><br><span class="line">          WinHttpReq.StatusText);</span><br><span class="line">      Connected :&#x3D; True;</span><br><span class="line">    except</span><br><span class="line">      Log(&#39;Error connecting to the server, msg: &#39; + GetExceptionMessage + &#39;try again! &#39;);</span><br><span class="line">    end;</span><br><span class="line">  until (iTriedTime &#x3D; 3) or (Connected &#x3D; True) ;</span><br><span class="line">  Result :&#x3D; Connected;</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">          版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，          转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。        </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者: Jim Wang 公众号: &lt;a class=&quot;main-button-link&quot; href=&quot;#wechat&quot; rel=&quot;noopener&quot;&gt;巴博萨船长&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;InnoSetup-检查网络连接&quot;&gt;&lt;a href=&quot;#InnoSetup-检查网络连接&quot; class=&quot;headerlink&quot; title=&quot;InnoSetup 检查网络连接&quot;&gt;&lt;/a&gt;InnoSetup 检查网络连接&lt;/h2&gt;&lt;h3 id=&quot;1-循环检查网络连接直至连接成共，代码如下：&quot;&gt;&lt;a href=&quot;#1-循环检查网络连接直至连接成共，代码如下：&quot; class=&quot;headerlink&quot; title=&quot;1. 循环检查网络连接直至连接成共，代码如下：&quot;&gt;&lt;/a&gt;1. 循环检查网络连接直至连接成共，代码如下：&lt;/h3&gt;
    
    </summary>
    
    
      <category term="Inno Setup 相关 - 实战经验" scheme="https://zicowarn.github.io/categories/Inno-Setup-%E7%9B%B8%E5%85%B3-%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Inno Setup" scheme="https://zicowarn.github.io/tags/Inno-Setup/"/>
    
      <category term="网络连接" scheme="https://zicowarn.github.io/tags/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/"/>
    
      <category term="Pascal" scheme="https://zicowarn.github.io/tags/Pascal/"/>
    
  </entry>
  
  <entry>
    <title>Inno Setup 在x86和x64环境下安装-NET安装包</title>
    <link href="https://zicowarn.github.io/2019/06/30/inno-02-installdotnet/"/>
    <id>https://zicowarn.github.io/2019/06/30/inno-02-installdotnet/</id>
    <published>2019-06-30T00:11:08.000Z</published>
    <updated>2019-06-30T00:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>作者: Jim Wang 公众号: <a class="main-button-link" href="#wechat" rel="noopener">巴博萨船长</a></p><h3 id="任务难点"><a href="#任务难点" class="headerlink" title="任务难点"></a>任务难点</h3><p>准备一个安装程序，以验证系统的体系结构并安装.NET。</p><h3 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h3><p>此安装脚本示例的目的是启动一个安装程序，该安装程序检查系统上当前安装的.NET版本，并仅在需要时安装一个。安装程序将在软件包中包括Microsoft提供的Web安装程序。 安装程序还将根据运行所在的体系结构安装一些库。</p><a id="more"></a><h3 id="2-背景"><a href="#2-背景" class="headerlink" title="2. 背景"></a>2. 背景</h3><p>出于我们的目的，我们需要可从Microsoft下载站点下载的InnoSetup编译器和.NET Framework Web安装程序文件。Microsoft维护一组注册表项，这些注册表项指示已安装的.NET Framework版本和Service Pack。C＃MVP Scott Dorman在此<a href="http://stackoverflow.com/questions/199080/how-to-detect-what-net-framework-versions-and-service-packs-are-installed" target="_blank" rel="noopener">Stack Overflow线程中</a>发布了一个列表，其中包含版本1.0到4.0（在撰写本文时）。除1.0以外，大多数.NET Framework版本所需的注册表项都非常相似。无论如何，我们将忽略该版本已被1.1淘汰的版本。</p><p>4.5版和更高版本有些棘手，因为它们可以作为4.0版的就地更新安装并重用完全相同的注册表项。MSDN官方页面“ <a href="https://docs.microsoft.com/en-us/dotnet/framework/migration-guide/how-to-determine-which-versions-are-installed" target="_blank" rel="noopener">如何：确定安装的.NET Framework版本”</a>建议检查<code>DWORD</code>value 的存在<code>Release</code>，所以我在下面做这件事。替代方法是检查.NET 4.0 的<code>REG_SZ</code>值<code>Version</code>4.0.30319，.NET 4.5的4.5.50709和.NET 4.6的4.6.00079。（可悲的是，在安装它们时，我不认为要记录4.5.1和4.5.2的版本字符串。）</p><p>4.5.1版引入了另一个复杂性：根据Windows版本，可能有_两个_<code>Release</code>值！该脚本通过将所有4.5版或更高版本的查询视为_最低_要求来处理此问题，即，如果该<code>Release</code>值等于或大于任何系统上指定版本的最小值，则这些查询将成功。.NET 4.5或更高版本也可以满足.NET 4.0的查询，因为后者是作为就地更新安装的。对较早版本的查询需要完全匹配，即，即使应用程序兼容，.NET 4.0或更高版本也_无法_满足它们。</p><h3 id="3-代码部分"><a href="#3-代码部分" class="headerlink" title="3. 代码部分"></a>3. 代码部分</h3><p>在[Code]部分，我们定义如下函数来检测以安装的.NET版本。该部分代码取自Jordan Russell的网站。 在下面的Inno Setup脚本代码块中，函数<code>IsDotNetDetected</code>检查是否安装了指定的.NET Framework版本和至少指定的Service Pack级别。所有列出的版本字符串均适用于最终发行版本；测试版和发行候选版通常具有不同的版本号。函数<code>InitializeSetup</code>演示了如何使用<code>IsDotNetDetected</code>不带Service Pack的.NET Framework 4.6进行检查。 原始代码如下：</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">[Code]</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">IsDotNetDetected</span><span class="params">(version: <span class="keyword">string</span>; service: cardinal)</span>:</span> boolean;</span><br><span class="line"><span class="comment">// Indicates whether the specified version and service pack of the .NET Framework is installed.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// version -- Specify one of these strings for the required .NET Framework version:</span></span><br><span class="line"><span class="comment">//    'v1.1'          .NET Framework 1.1</span></span><br><span class="line"><span class="comment">//    'v2.0'          .NET Framework 2.0</span></span><br><span class="line"><span class="comment">//    'v3.0'          .NET Framework 3.0</span></span><br><span class="line"><span class="comment">//    'v3.5'          .NET Framework 3.5</span></span><br><span class="line"><span class="comment">//    'v4\Client'     .NET Framework 4.0 Client Profile</span></span><br><span class="line"><span class="comment">//    'v4\Full'       .NET Framework 4.0 Full Installation</span></span><br><span class="line"><span class="comment">//    'v4.5'          .NET Framework 4.5</span></span><br><span class="line"><span class="comment">//    'v4.5.1'        .NET Framework 4.5.1</span></span><br><span class="line"><span class="comment">//    'v4.5.2'        .NET Framework 4.5.2</span></span><br><span class="line"><span class="comment">//    'v4.6'          .NET Framework 4.6</span></span><br><span class="line"><span class="comment">//    'v4.6.1'        .NET Framework 4.6.1</span></span><br><span class="line"><span class="comment">//    'v4.6.2'        .NET Framework 4.6.2</span></span><br><span class="line"><span class="comment">//    'v4.7'          .NET Framework 4.7</span></span><br><span class="line"><span class="comment">//    'v4.7.1'        .NET Framework 4.7.1</span></span><br><span class="line"><span class="comment">//    'v4.7.2'        .NET Framework 4.7.2</span></span><br><span class="line"><span class="comment">//    'v4.8'          .NET Framework 4.8</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// service -- Specify any non-negative integer for the required service pack level:</span></span><br><span class="line"><span class="comment">//    0               No service packs required</span></span><br><span class="line"><span class="comment">//    1, 2, etc.      Service pack 1, 2, etc. required</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">    key, versionKey: <span class="keyword">string</span>;</span><br><span class="line">    install, release, serviceCount, versionRelease: cardinal;</span><br><span class="line">    success: boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    versionKey := version;</span><br><span class="line">    versionRelease := <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// .NET 1.1 and 2.0 embed release number in version key</span></span><br><span class="line">    <span class="keyword">if</span> version = <span class="string">'v1.1'</span> <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        versionKey := <span class="string">'v1.1.4322'</span>;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> version = <span class="string">'v2.0'</span> <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        versionKey := <span class="string">'v2.0.50727'</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// .NET 4.5 and newer install as update to .NET 4.0 Full</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> Pos(<span class="string">'v4.'</span>, version) = <span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        versionKey := <span class="string">'v4\Full'</span>;</span><br><span class="line">        <span class="keyword">case</span> version <span class="keyword">of</span></span><br><span class="line">          <span class="string">'v4.5'</span>:   versionRelease := <span class="number">378389</span>;</span><br><span class="line">          <span class="string">'v4.5.1'</span>: versionRelease := <span class="number">378675</span>; <span class="comment">// 378758 on Windows 8 and older</span></span><br><span class="line">          <span class="string">'v4.5.2'</span>: versionRelease := <span class="number">379893</span>;</span><br><span class="line">          <span class="string">'v4.6'</span>:   versionRelease := <span class="number">393295</span>; <span class="comment">// 393297 on Windows 8.1 and older</span></span><br><span class="line">          <span class="string">'v4.6.1'</span>: versionRelease := <span class="number">394254</span>; <span class="comment">// 394271 before Win10 November Update</span></span><br><span class="line">          <span class="string">'v4.6.2'</span>: versionRelease := <span class="number">394802</span>; <span class="comment">// 394806 before Win10 Anniversary Update</span></span><br><span class="line">          <span class="string">'v4.7'</span>:   versionRelease := <span class="number">460798</span>; <span class="comment">// 460805 before Win10 Creators Update</span></span><br><span class="line">          <span class="string">'v4.7.1'</span>: versionRelease := <span class="number">461308</span>; <span class="comment">// 461310 before Win10 Fall Creators Update</span></span><br><span class="line">          <span class="string">'v4.7.2'</span>: versionRelease := <span class="number">461808</span>; <span class="comment">// 461814 before Win10 April 2018 Update</span></span><br><span class="line">          <span class="string">'v4.8'</span>:   versionRelease := <span class="number">528040</span>; <span class="comment">// 528049 before Win10 May 2019 Update</span></span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// installation key group for all .NET versions</span></span><br><span class="line">    key := <span class="string">'SOFTWARE\Microsoft\NET Framework Setup\NDP\'</span> + versionKey;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// .NET 3.0 uses value InstallSuccess in subkey Setup</span></span><br><span class="line">    <span class="keyword">if</span> Pos(<span class="string">'v3.0'</span>, version) = <span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        success := RegQueryDWordValue(HKLM, key + <span class="string">'\Setup'</span>, <span class="string">'InstallSuccess'</span>, install);</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">        success := RegQueryDWordValue(HKLM, key, <span class="string">'Install'</span>, install);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// .NET 4.0 and newer use value Servicing instead of SP</span></span><br><span class="line">    <span class="keyword">if</span> Pos(<span class="string">'v4'</span>, version) = <span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        success := success <span class="keyword">and</span> RegQueryDWordValue(HKLM, key, <span class="string">'Servicing'</span>, serviceCount);</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">        success := success <span class="keyword">and</span> RegQueryDWordValue(HKLM, key, <span class="string">'SP'</span>, serviceCount);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// .NET 4.5 and newer use additional value Release</span></span><br><span class="line">    <span class="keyword">if</span> versionRelease &gt; <span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        success := success <span class="keyword">and</span> RegQueryDWordValue(HKLM, key, <span class="string">'Release'</span>, release);</span><br><span class="line">        success := success <span class="keyword">and</span> (release &gt;= versionRelease);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">    result := success <span class="keyword">and</span> (install = <span class="number">1</span>) <span class="keyword">and</span> (serviceCount &gt;= service);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">InitializeSetup</span><span class="params">()</span>:</span> Boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> IsDotNetDetected(<span class="string">'v4.6'</span>, <span class="number">0</span>) <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        MsgBox(<span class="string">'MyApp requires Microsoft .NET Framework 4.6.'</span><span class="string">#13#13</span></span><br><span class="line">            <span class="string">'Please use Windows Update to install this version,'</span><span class="string">#13</span></span><br><span class="line">            <span class="string">'and then re-run the MyApp setup program.'</span>, mbInformation, MB_OK);</span><br><span class="line">        result := false;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">        result := true;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>针对此代码，我们修改为如下形式：</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">[Code]</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">IsDotNetDetected</span><span class="params">(version: <span class="keyword">string</span>; service: cardinal)</span>:</span> boolean;</span><br><span class="line"><span class="comment">// Indicates whether the specified version and service pack of the .NET Framework is installed.</span></span><br><span class="line"><span class="comment">// see the link: https://docs.microsoft.com/en-us/dotnet/framework/migration-guide/how-to-determine-which-versions-are-installed?redirectedfrom=MSDN#net_b</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// version -- Specify one of these strings for the required .NET Framework version:</span></span><br><span class="line"><span class="comment">//    'v1.1.4322'     .NET Framework 1.1</span></span><br><span class="line"><span class="comment">//    'v2.0.50727'    .NET Framework 2.0</span></span><br><span class="line"><span class="comment">//    'v3.0'          .NET Framework 3.0</span></span><br><span class="line"><span class="comment">//    'v3.5'          .NET Framework 3.5</span></span><br><span class="line"><span class="comment">//    'v4\Client'     .NET Framework 4.0 Client Profile</span></span><br><span class="line"><span class="comment">//    'v4\Full'       .NET Framework 4.0 Full Installation</span></span><br><span class="line"><span class="comment">//    'v4.5'          .NET Framework 4.5 378389</span></span><br><span class="line"><span class="comment">//    'v4.6'          .NET Framework 4.6 393295</span></span><br><span class="line"><span class="comment">//    'v4.6.1'        .NET Framework 4.6.1 394254</span></span><br><span class="line"><span class="comment">//    'v4.6.2'        .NET Framework 4.6.2 394802</span></span><br><span class="line"><span class="comment">//    'v4.7'          .NET Framework 4.7 393295</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// service -- Specify any non-negative integer for the required service pack level:</span></span><br><span class="line"><span class="comment">//    0               No service packs required</span></span><br><span class="line"><span class="comment">//    1, 2, etc.      Service pack 1, 2, etc. required</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">    key: <span class="keyword">string</span>;</span><br><span class="line">    install, release, serviceCount: cardinal;</span><br><span class="line">    check45, success: boolean;</span><br><span class="line"><span class="keyword">var</span> reqNetVer : <span class="keyword">string</span>;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="comment">// .NET 4.5 installs as update to .NET 4.0 Full</span></span><br><span class="line">    <span class="keyword">if</span> version = <span class="string">'v4.5'</span> <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        version := <span class="string">'v4\Full'</span>;</span><br><span class="line">        check45 := true;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">        check45 := false;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// installation key group for all .NET versions</span></span><br><span class="line">    key := <span class="string">'SOFTWARE\Microsoft\NET Framework Setup\NDP\'</span> + version;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// .NET 3.0 uses value InstallSuccess in subkey Setup</span></span><br><span class="line">    <span class="keyword">if</span> Pos(<span class="string">'v3.0'</span>, version) = <span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        success := RegQueryDWordValue(HKLM, key + <span class="string">'\Setup'</span>, <span class="string">'InstallSuccess'</span>, install);</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">        success := RegQueryDWordValue(HKLM, key, <span class="string">'Install'</span>, install);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// .NET 4.0/4.5 uses value Servicing instead of SP</span></span><br><span class="line">    <span class="keyword">if</span> Pos(<span class="string">'v4'</span>, version) = <span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        success := success <span class="keyword">and</span> RegQueryDWordValue(HKLM, key, <span class="string">'Servicing'</span>, serviceCount);</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">        success := success <span class="keyword">and</span> RegQueryDWordValue(HKLM, key, <span class="string">'SP'</span>, serviceCount);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// .NET 4.5 uses additional value Release</span></span><br><span class="line">    <span class="keyword">if</span> check45 <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        success := success <span class="keyword">and</span> RegQueryDWordValue(HKLM, key, <span class="string">'Release'</span>, release);</span><br><span class="line">        success := success <span class="keyword">and</span> (release &gt;= <span class="number">378389</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">    result := success <span class="keyword">and</span> (install = <span class="number">1</span>) <span class="keyword">and</span> (serviceCount &gt;= service);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>这是一个全局函数，用于验证是否正确安装了作为参数传递的.NET Framework版本。 现在，我们应该编写一个由安装程序在运行时调用的简单函数，以验证是否已安装所需的.NET版本。我们将以4.0为例。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function IsRequiredDotNetDetected(): Boolean;  </span><br><span class="line">begin</span><br><span class="line">    result :&#x3D; IsDotNetDetected(&#39;v4\Full&#39;, 0);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>如果需要，我们还可以在设置过程中发布一条消息：</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">InitializeSetup</span><span class="params">()</span>:</span> Boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> IsDotNetDetected(<span class="string">'v4\Full'</span>, <span class="number">0</span>) <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        MsgBox(<span class="string">'&#123;#MyAppName&#125; requires Microsoft .NET Framework 4.0 Client Profile.'</span><span class="string">#13#13</span></span><br><span class="line">          <span class="string">'The installer will attempt to install it'</span>, mbInformation, MB_OK);        </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    result := true;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>代码部分已经完成，现在我们可以关注<strong>[Files]</strong>部分。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Files]</span><br><span class="line">Source: &quot;&#123;#MyDistFolder&#125;\dotNetFx40_Full_setup.exe&quot;; DestDir: &#123;tmp&#125;; Flags: deleteafterinstall; Check: not IsRequiredDotNetDetected</span><br></pre></td></tr></table></figure><p>安装程序将复制.NET安装程序文件（这大约是850 KB的智能文件），<strong>只有</strong>在没有已经存在于系统中，到<strong>系统临时</strong>目录。安装完成后，该文件将被删除。现在已经复制了网络安装程序，如果需要，我们需要运行它。 在<strong>[run]</strong>部分中，输入以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Run]</span><br><span class="line">Filename: &#123;tmp&#125;\dotNetFx40_Full_setup.exe; Parameters: &quot;&#x2F;q:a &#x2F;c:&quot;&quot;install &#x2F;l </span><br><span class="line">  &#x2F;q&quot;&quot;&quot;; Check: not IsRequiredDotNetDetected; StatusMsg: Microsoft Framework 4.0 is beïng installed. Please wait...</span><br></pre></td></tr></table></figure><h3 id="4-x86-x64选项"><a href="#4-x86-x64选项" class="headerlink" title="4. x86 / x64选项"></a>4. x86 / x64选项</h3><p>此示例显示安装程序如何根据系统体系结构运行。它将安装系统所需的本机库，以进行更智能的安装。在 <strong>[setuo]</strong>部分中，定义以下指令：</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ArchitecturesInstallIn64BitMode=x64</span><br></pre></td></tr></table></figure><p>这两行将根据系统安装一个lib文件夹：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Source: &quot;&#123;#MyDistFolder&#125;\lib\x64\*&quot;; DestDir: &quot;&#123;app&#125;\lib\x64&quot;; Check: Is64BitInstallMode; Flags: ignoreversion recursesubdirs createallsubdirs</span><br><span class="line">Source: &quot;&#123;#MyDistFolder&#125;\lib\x86\*&quot;; DestDir: &quot;&#123;app&#125;\lib\x86&quot;; Check: not Is64BitInstallMode; Flags: ignoreversion recursesubdirs createallsubdirs</span><br></pre></td></tr></table></figure><h3 id="5-有关安装-NET过程代码的其它解决方案"><a href="#5-有关安装-NET过程代码的其它解决方案" class="headerlink" title="5. 有关安装.NET过程代码的其它解决方案"></a>5. 有关安装.NET过程代码的其它解决方案</h3><p>如果不行实现InnoSetup中的AfterInstall的标识，希望.NET的安装在文件<strong>[Files]</strong>执行的某一步骤时被执行，就需要主意.NET的执行顺序。请参看如下两部分代码。</p><p>使用安装的返回值</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Code]</span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">InstallFramework</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  ResultCode: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> Exec(ExpandConstant(<span class="string">'&#123;tmp&#125;\dotNetFx40_Full_x86_x64.exe'</span>), <span class="string">'/q /norestart'</span>, <span class="string">''</span>, SW_SHOW, ewWaitUntilTerminated, ResultCode) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="comment">&#123; you can interact with the user that the installation failed &#125;</span></span><br><span class="line">    MsgBox(<span class="string">'.NET installation failed with code: '</span> + IntToStr(ResultCode) + <span class="string">'.'</span>,</span><br><span class="line">      mbError, MB_OK);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>使用进度条显示安装进度，但是由于要获得.NET安装程序的安装进度并不容易，因此我将在安装执行过程中向用户简单显示无休止的选取框进度栏。 即，该进度条仅在此具用于显示，不能准确表示安装的进度。</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">InstallFramework</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  StatusText: <span class="keyword">string</span>;</span><br><span class="line">  ResultCode: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  StatusText := WizardForm.StatusLabel.Caption;</span><br><span class="line">  WizardForm.StatusLabel.Caption := <span class="string">'Installing .NET framework...'</span>;</span><br><span class="line">  WizardForm.ProgressGauge.Style := npbstMarquee;</span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">      <span class="keyword">if</span> <span class="keyword">not</span> Exec(ExpandConstant(<span class="string">'&#123;tmp&#125;\dotNetFx45_Full_asetup.exe'</span>), <span class="string">'/q /norestart'</span>, <span class="string">''</span>, SW_SHOW, ewWaitUntilTerminated, ResultCode) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="comment">// you can interact with the user that the installation failed</span></span><br><span class="line">    MsgBox(<span class="string">'.NET installation failed with code: '</span> + IntToStr(ResultCode) + <span class="string">'.'</span>,</span><br><span class="line">      mbError, MB_OK);</span><br><span class="line">    CancelWithoutPrompt := true;</span><br><span class="line">    WizardForm.Close;       </span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">finally</span></span><br><span class="line">    WizardForm.StatusLabel.Caption := StatusText;</span><br><span class="line">    WizardForm.ProgressGauge.Style := npbstNormal;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h3 id="6-提示"><a href="#6-提示" class="headerlink" title="6. 提示"></a>6. 提示</h3><p>Inno 是具有一个内置变量{dotnet40}的，ExpandConstant(‘{dotnet40}’)。其它有关的变量为：</p><p><strong>{dotnet11}</strong></p><p>32-bit .NET Framework version 1.1 root directory.</p><p>An exception will be raised if an attempt is made to expand this constant on a system with no .NET Framework version 1.1 present.</p><p>32位.NET Framework 1.1版根目录。</p><p>会将系统扩展到当前的.NET Framework版本1.1会发生例外。</p><p><strong>{dotnet20}</strong></p><p>.NET Framework version 2.0-3.5 root directory. <code>{dotnet20}</code> is equivalent to <code>{dotnet2032}</code> unless the install is running in [64-bit install mode], in which case it is equivalent to <code>{dotnet2064}</code>.</p><p>An exception will be raised if an attempt is made to expand this constant on a system with no .NET Framework version 2.0-3.5 present.</p><p>.NET Framework 2.0-3.5版根目录。除非安装以64位安装模式运行，否则{dotnet20}等效于{dotnet2032}，在这种情况下，等效于{dotnet2064}。</p><p>会将系统扩展到当前的.NET Framework版本2.0-3.5将会发生例外。</p><p><strong>{dotnet2032}</strong></p><p>32-bit .NET Framework version 2.0-3.5 root directory.</p><p>An exception will be raised if an attempt is made to expand this constant on a system with no .NET Framework version 2.0-3.5 present.</p><p>32位.NET Framework 2.0-3.5版根目录。</p><p>会将系统扩展到当前的.NET Framework版本2.0-3.5将会发生例外。</p><p><strong>{dotnet2064}</strong></p><p>64-bit Windows only: 64-bit .NET Framework version 2.0-3.5 root directory.</p><p>An exception will be raised if an attempt is made to expand this constant on a system with no .NET Framework version 2.0-3.5 present.</p><p>仅适用于64位Windows：64位.NET Framework 2.0-3.5版根目录。</p><p>会将系统扩展到当前的.NET Framework版本2.0-3.5将会发生例外。</p><p><strong>{dotnet40}</strong></p><p>.NET Framework version 4.0 and later root directory. <code>{dotnet40}</code> is equivalent to <code>{dotnet4032}</code> unless the install is running in [64-bit install mode], in which case it is equivalent to <code>{dotnet4064}</code>.</p><p>An exception will be raised if an attempt is made to expand this constant on a system with no .NET Framework version 4.0 or later present.</p><p>.NET Framework 4.0版和更高版本的根目录。除非安装以64位安装模式运行，否则{dotnet40}等效于{dotnet4032}，在这种情况下，等效于{dotnet4064}。</p><p>将系统扩展到.NET Framework 4.0或更高版本时，将发生例外。</p><p><strong>{dotnet4032}</strong></p><p>32-bit .NET Framework version 4.0 and later root directory.</p><p>An exception will be raised if an attempt is made to expand this constant on a system with no .NET Framework version 4.0 or later present.</p><p>32位.NET Framework 4.0版和更高版本的根目录。</p><p>将系统扩展到.NET Framework 4.0或更高版本时，将发生例外。</p><p><strong>{dotnet4064}</strong></p><p>64-bit Windows only: 64-bit .NET Framework version 4.0 and later root directory.</p><p>An exception will be raised if an attempt is made to expand this constant on a system with no .NET Framework version 4.0 or later present.</p><p>仅适用于64位Windows：64位.NET Framework 4.0版和更高版本的根目录。</p><p>将系统扩展到.NET Framework 4.0或更高版本时，将发生例外。</p><h3 id="7-使用RegAsm-exe-注册-NET-DLL-文件"><a href="#7-使用RegAsm-exe-注册-NET-DLL-文件" class="headerlink" title="7. 使用RegAsm.exe 注册 .NET DLL 文件"></a>7. 使用RegAsm.exe 注册 .NET DLL 文件</h3><p>其中<strong>[run]</strong>的代码如下， 主意其WorkingDir参数，其表示运行注册程序的时候，运行的目录：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Filename: "&#123;dotnet20&#125;\RegAsm.exe"; Parameters: /codebase YourDLL.dll; WorkingDir: &#123;app&#125;; StatusMsg: "Registering Controls..."; Flags: runminimized</span><br></pre></td></tr></table></figure><h3 id="8-其它完整解决方案"><a href="#8-其它完整解决方案" class="headerlink" title="8. 其它完整解决方案"></a>8. 其它完整解决方案</h3><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Other parts of installer file go here</span></span><br><span class="line">[CustomMessages]</span><br><span class="line">IDP_DownloadFailed=Download <span class="keyword">of</span> .NET Framework <span class="number">4.7</span>.<span class="number">2</span> failed. .NET Framework <span class="number">4.7</span> <span class="keyword">is</span> required <span class="keyword">to</span> run VidCoder.</span><br><span class="line">IDP_RetryCancel=Click <span class="string">'Retry'</span> <span class="keyword">to</span> <span class="keyword">try</span> downloading the files again, <span class="keyword">or</span> click <span class="string">'Cancel'</span> <span class="keyword">to</span> terminate setup.</span><br><span class="line">InstallingDotNetFramework=Installing .NET Framework <span class="number">4.7</span>.<span class="number">2</span>. This might take a few minutes...</span><br><span class="line">DotNetFrameworkFailedToLaunch=Failed to launch .NET Framework Installer with error "%1". Please fix the error then run this installer again.</span><br><span class="line">DotNetFrameworkFailed1602=.NET Framework installation was cancelled. This installation can <span class="keyword">continue</span>, but be aware that this application may <span class="keyword">not</span> run unless the .NET Framework installation <span class="keyword">is</span> completed successfully.</span><br><span class="line">DotNetFrameworkFailed1603=A fatal error occurred <span class="keyword">while</span> installing the .NET Framework. Please fix the error, <span class="keyword">then</span> run the installer again.</span><br><span class="line">DotNetFrameworkFailed5100=Your computer does <span class="keyword">not</span> meet the requirements <span class="keyword">of</span> the .NET Framework. Please consult the documentation.</span><br><span class="line">DotNetFrameworkFailedOther=The .NET Framework installer exited with an unexpected status code "%1". Please review any other messages shown by the installer to determine whether the installation completed successfully, and abort this installation and fix the problem if it did not.</span><br><span class="line"></span><br><span class="line">[Code]</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  requiresRestart: boolean;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NetFrameworkIsMissing</span><span class="params">()</span>:</span> Boolean;</span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  bSuccess: Boolean;</span><br><span class="line">  regVersion: Cardinal;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  Result := True;</span><br><span class="line"></span><br><span class="line">  bSuccess := RegQueryDWordValue(HKLM, <span class="string">'Software\Microsoft\NET Framework Setup\NDP\v4\Full'</span>, <span class="string">'Release'</span>, regVersion);</span><br><span class="line">  <span class="keyword">if</span> (True = bSuccess) <span class="keyword">and</span> (regVersion &gt;= <span class="number">461308</span>) <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">    Result := False;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">InitializeWizard</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> NetFrameworkIsMissing() <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    idpAddFile(<span class="string">'http://go.microsoft.com/fwlink/?LinkId=863262'</span>, ExpandConstant(<span class="string">'&#123;tmp&#125;\NetFrameworkInstaller.exe'</span>));</span><br><span class="line">    idpDownloadAfter(wpReady);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">InstallFramework</span><span class="params">()</span>:</span> <span class="keyword">String</span>;</span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  StatusText: <span class="keyword">string</span>;</span><br><span class="line">  ResultCode: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  StatusText := WizardForm.StatusLabel.Caption;</span><br><span class="line">  WizardForm.StatusLabel.Caption := CustomMessage(<span class="string">'InstallingDotNetFramework'</span>);</span><br><span class="line">  WizardForm.ProgressGauge.Style := npbstMarquee;</span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> Exec(ExpandConstant(<span class="string">'&#123;tmp&#125;\NetFrameworkInstaller.exe'</span>), <span class="string">'/passive /norestart /showrmui /showfinalerror'</span>, <span class="string">''</span>, SW_SHOW, ewWaitUntilTerminated, ResultCode) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      Result := FmtMessage(CustomMessage(<span class="string">'DotNetFrameworkFailedToLaunch'</span>), [SysErrorMessage(resultCode)]);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="comment">// See https://msdn.microsoft.com/en-us/library/ee942965(v=vs.110).aspx#return_codes</span></span><br><span class="line">      <span class="keyword">case</span> resultCode <span class="keyword">of</span></span><br><span class="line">        <span class="number">0</span>: <span class="keyword">begin</span></span><br><span class="line">          <span class="comment">// Successful</span></span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">        <span class="number">1602</span> : <span class="keyword">begin</span></span><br><span class="line">          MsgBox(CustomMessage(<span class="string">'DotNetFrameworkFailed1602'</span>), mbInformation, MB_OK);</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">        <span class="number">1603</span>: <span class="keyword">begin</span></span><br><span class="line">          Result := CustomMessage(<span class="string">'DotNetFrameworkFailed1603'</span>);</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">        <span class="number">1641</span>: <span class="keyword">begin</span></span><br><span class="line">          requiresRestart := True;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">        <span class="number">3010</span>: <span class="keyword">begin</span></span><br><span class="line">          requiresRestart := True;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">        <span class="number">5100</span>: <span class="keyword">begin</span></span><br><span class="line">          Result := CustomMessage(<span class="string">'DotNetFrameworkFailed5100'</span>);</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">          MsgBox(FmtMessage(CustomMessage(<span class="string">'DotNetFrameworkFailedOther'</span>), [IntToStr(resultCode)]), mbError, MB_OK);</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">finally</span></span><br><span class="line">    WizardForm.StatusLabel.Caption := StatusText;</span><br><span class="line">    WizardForm.ProgressGauge.Style := npbstNormal;</span><br><span class="line"></span><br><span class="line">    DeleteFile(ExpandConstant(<span class="string">'&#123;tmp&#125;\NetFrameworkInstaller.exe'</span>));</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">PrepareToInstall</span><span class="params">(<span class="keyword">var</span> NeedsRestart: Boolean)</span>:</span> <span class="keyword">String</span>;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="comment">// 'NeedsRestart' only has an effect if we return a non-empty string, thus aborting the installation.</span></span><br><span class="line">  <span class="comment">// If the installers indicate that they want a restart, this should be done at the end of installation.</span></span><br><span class="line">  <span class="comment">// Therefore we set the global 'restartRequired' if a restart is needed, and return this from NeedRestart()</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> NetFrameworkIsMissing() <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    Result := InstallFramework();</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NeedRestart</span><span class="params">()</span>:</span> Boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  Result := requiresRestart;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>根据此版本修改后适用于自己项目的.NET框架安装代码如下：</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">InstallFrameworkWebRuntime</span><span class="params">()</span>:</span> <span class="keyword">String</span>;</span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  WasVisible: Boolean;</span><br><span class="line">  ResultCode: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ExtractTemporaryFile(<span class="string">'&#123;#DotNetFrameWorkWebInstaller&#125;'</span>);</span><br><span class="line">  WasVisible := WizardForm.PreparingLabel.Visible;</span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">      WizardForm.PreparingLabel.Visible := True;</span><br><span class="line">      WizardForm.PreparingLabel.Caption := FmtMessage(CustomMessage(<span class="string">'DotNetFrameworkWebInstallerCaption'</span>), [TO_COMPARE_DOT_NET]);</span><br><span class="line">      ExtractTemporaryFile(<span class="string">'&#123;#DotNetFrameWorkWebInstaller&#125;'</span>);</span><br><span class="line">      <span class="comment">//if not Exec(ExpandConstant('&#123;tmp&#125;\&#123;#DotNetFrameWorkWebInstaller&#125;'), '/q /norestart', '', SW_SHOW, ewWaitUntilTerminated, ResultCode) then</span></span><br><span class="line">      <span class="keyword">if</span> <span class="keyword">not</span> Exec(ExpandConstant(<span class="string">'&#123;tmp&#125;\&#123;#DotNetFrameWorkWebInstaller&#125;'</span>), <span class="string">'/passive /norestart /showrmui /showfinalerror'</span>, <span class="string">''</span>, SW_SHOW, ewWaitUntilTerminated, ResultCode) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          <span class="comment">// https://docs.microsoft.com/de-de/windows/win32/debug/system-error-codes--0-499-</span></span><br><span class="line">          <span class="comment">// you can interact with the user that the installation failed, for example: error code 2: the system cannot find the file specified.</span></span><br><span class="line">          Result := FmtMessage(CustomMessage(<span class="string">'DotNetFrameworkFailedToLaunch'</span>), [SysErrorMessage(ResultCode)])     </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          <span class="keyword">case</span> ResultCode <span class="keyword">of</span></span><br><span class="line">            <span class="number">0</span>: <span class="keyword">begin</span></span><br><span class="line">              <span class="comment">// Successful</span></span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">            <span class="number">1602</span> : <span class="keyword">begin</span></span><br><span class="line">              MsgBox(CustomMessage(<span class="string">'DotNetFrameworkFailed1602'</span>), mbInformation, MB_OK);</span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">            <span class="number">1603</span>: <span class="keyword">begin</span></span><br><span class="line">              Result := CustomMessage(<span class="string">'DotNetFrameworkFailed1603'</span>);</span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">            <span class="number">1641</span>: <span class="keyword">begin</span></span><br><span class="line">              bRequiresRestart := True;</span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">            <span class="number">3010</span>: <span class="keyword">begin</span></span><br><span class="line">              bRequiresRestart := True;</span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">            <span class="number">5100</span>: <span class="keyword">begin</span></span><br><span class="line">              Result := CustomMessage(<span class="string">'DotNetFrameworkFailed5100'</span>);</span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">              <span class="comment">//MsgBox(FmtMessage(CustomMessage('DotNetFrameworkFailedOther'), [IntToStr(resultCode)]), mbError, MB_OK);</span></span><br><span class="line">              Result := FmtMessage(CustomMessage(<span class="string">'DotNetFrameworkFailedOther'</span>), IntToStr(ResultCode));     </span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">          <span class="keyword">end</span>;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">finally</span></span><br><span class="line">    WizardForm.PreparingLabel.Visible := WasVisible;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  DeleteFile(ExpandConstant(<span class="string">'&#123;tmp&#125;&#123;#DotNetFrameWorkWebInstaller&#125;'</span>));</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>上述代码中</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ExtractTemporaryFile(<span class="string">'&#123;#DotNetFrameWorkWebInstaller&#125;'</span>);</span><br></pre></td></tr></table></figure><p>强制解压安装文件。该动作早于[Files]的运行。在安装结束之后删除该文件，使用代码如：</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DeleteFile(ExpandConstant(<span class="string">'&#123;tmp&#125;&#123;#DotNetFrameWorkWebInstaller&#125;'</span>));</span><br></pre></td></tr></table></figure><p>有关.NET安装包运行时的错误代码可以参考连接：</p><p>// See <a href="https://msdn.microsoft.com/en-us/library/ee942965%28v=vs.110%29.aspx#return_codes" target="_blank" rel="noopener">https://msdn.microsoft.com/en-us/library/ee942965(v=vs.110).aspx#return_codes</a></p><p>有关Exec函数，其错误代码为Windows系统错误代码，运行时的错误文本，可以参考连接：</p><p>// See [<a href="https://docs.microsoft.com/de-de/windows/win32/debug/system-error-codes--0-499-]" target="_blank" rel="noopener">https://docs.microsoft.com/de-de/windows/win32/debug/system-error-codes--0-499-]</a>(</p><h3 id="9-Inno-Setup-对注册表的操作"><a href="#9-Inno-Setup-对注册表的操作" class="headerlink" title="9. Inno Setup 对注册表的操作"></a>9. Inno Setup 对注册表的操作</h3><p>由于安装.NET的框架的目的就是要使用一下依赖.NET框架的动态库文件。而这部分DLL文件能够顺利使用就需要对该DLL文件进行注册。</p><h4 id="9-1-Regasm-程序集注册工具"><a href="#9-1-Regasm-程序集注册工具" class="headerlink" title="9.1 Regasm  程序集注册工具"></a>9.1 Regasm  程序集注册工具</h4><p><strong>Regasm 简介 ：</strong></p><p>EXE files such as RegAsm.exe are categorized as Executable Application (Windows Executable) files. As a Windows Executable file, it was created for use in Windows 10 by [Microsoft].</p><p>像RegAsm.exe这样的EXE文件都被分类为可执行应用程序（Windows Executable）文件。 作为Windows可执行文件，它由Microsoft创建供Windows 10使用。</p><p>The first version of RegAsm.exe for Windows Vista was introduced on 11/08/2006 in Windows Vista. The most recent version [file version 10] was introduced on 07/29/2015 for Windows 10. RegAsm.exe is bundled with the software package in Windows 10, Windows 8.1, and Windows 8.</p><p>Windows Vista的RegAsm.exe的第一版于2006年11月8日在Windows Vista中引入。 Windows 10的最新版本（文件版本10）已于07/29/2015引入。RegAsm.exe与Windows 10，Windows 8.1和Windows 8中的软件包捆绑在一起。</p><p>Please see below for more detailed information, <a href="https://www.exefiles.com/en/extensions/exe/all-files/" target="_blank" rel="noopener">EXE</a> file troubleshooting instructions, and free downloads of different versions of RegAsm.exe.</p><p>请参阅下面的详细信息，EXE文件故障排除说明以及RegAsm.exe不同版本的免费下载。</p><p><strong>作用：</strong> 读取程序集中的元数据，并将所需的项添加到注册表中。注册表允许 COM 客户程序以透明方式创建 .NET Framework 类。类一经注册，任何 COM 客户程序都可以使用它，就好像该类是一个 COM 类。类仅在安装程序集时注册一次。程序集中的类实例直到被实际注册时，才能从 COM 中创建。</p><p><strong>使用方法：</strong></p><p>regasm assemblyFile [options]</p><p><strong>重要参数：</strong></p><p>/codebase 在注册表中创建一个 Codebase 项。Codebase 项指定未安装到全局程序集缓存中的程序集的文件路径。如果随后要安装正在注册到全局程序集缓存中的程序集，则不应指定此选项。用 /codebase 选项指定的 assemblyFile 参数必须是具有强名称的程序集。</p><h4 id="9-2-Regsvr32-程序集注册工具"><a href="#9-2-Regsvr32-程序集注册工具" class="headerlink" title="9.2 Regsvr32  程序集注册工具"></a>9.2 Regsvr32  程序集注册工具</h4><p><strong>作用：</strong> Regsvr32命令用于注册COM组件，是 Windows 系统提供的用来向系统注册控件或者卸载控件的命令，以命令行方式运行。WinXP及以上系统的regsvr32.exe在windows\system32文件夹下；2000系统的regsvr32.exe在winnt\system32文件夹下。</p><h4 id="9-3-两个DLL注册工具的差异"><a href="#9-3-两个DLL注册工具的差异" class="headerlink" title="9.3 两个DLL注册工具的差异"></a>9.3 两个DLL注册工具的差异</h4><p>使用regasm.exe来注册.NET 组件，regsvr32并不适用于.NET组件。 （或者您也可以将regasm.exe理解为.NET的regsvr32）。regsvr32不适用于.NET的组件的注册，感觉意思是对于非托管的代码使用regsvr32来注册，对于托管的代码使用regasm来注册。</p><p><code>regsvr32</code> will load the library and try to call the <code>DllRegisterServer()</code> from that library. It doesn’t care what <code>DllRegisterServer()</code> actually does - it just calls that function and checks the returned value. You use it to register COM servers in unmanaged DLLs. It can’t generate a .tlb file.</p><p>regsvr32将加载该库并尝试从该库中调用DllRegisterServer（）。 不管DllRegisterServer（）实际做什么，它只是调用该函数并检查返回的值。 您可以使用它在非托管DLL中注册COM服务器。 无法生成.tlb文件。</p><p><code>regasm</code> will register a COM-exposed .NET assembly as a COM server. You use it for .NET assemblies. It can generate a .tlb file given the assembly only - it inspects the type infromation stored in the assembly and includes the COM-exposed entities into the type library.</p><p>regasm将把暴露于COM的.NET程序集注册为COM服务器。 您将其用于.NET程序集。 仅在给定程序集的情况下，它可以生成.tlb文件-它检查存储在程序集中的类型信息，并将COM公开的实体包括到类型库中。</p><h4 id="9-4-NET中“托管代码”和“非托管代码”的区别"><a href="#9-4-NET中“托管代码”和“非托管代码”的区别" class="headerlink" title="9.4  .NET中“托管代码”和“非托管代码”的区别"></a>9.4  .NET中“托管代码”和“非托管代码”的区别</h4><p><strong>托管代码</strong> <strong>(managed code)</strong></p><p>托管代码是Visual Basic .NET和C#编译器创建的代码。它运行在CLR(公共语言运行时)，除其他外，它提供像垃圾收集，运行时类型检查和引用检查的服务。所以，认为它是，“我的代码是由CLR管理。</p><p>Visual Basic和C#只能生成托管代码，所以，如果你正在用这些语言编写一个应用程序，你正在写一个由CLR管理的应用程序。如果您在Visual C .NET中编写应用程序，您可以根据需要生成托管代码，但它是可选的。</p><p><strong>非托管代码</strong> <strong>(unmanaged code)</strong></p><p>非托管代码直接编译为机器代码。因此，通过该定义，所有由传统C/C++编译器编译的代码是“非托管代码”。此外，由于它编译为机器代码而不是中间语言，所以它是不可移植的。</p><p>没有可用的内存管理或任何其他CLR提供。</p><p>由于您不能使用Visual Basic或C#创建非托管代码，在Visual Studio中，所有非托管代码都用C/C++编写。</p><p><strong>混合两者</strong></p><p>由于Visual C可以编译为托管代码或非托管代码，因此可以在同一个应用程序中混合这两个代码。这模糊了两者之间的界限，并使定义复杂化，但值得一提的是，你知道，如果你使用的第三方库有一些严重的非托管代码，你仍然可能有内存泄漏。</p><p><strong>区别：</strong></p><p>1、托管代码是一种中间语言，运行在CLR上；</p><p> 非托管代码被编译为机器码，运行在机器上。</p><p>2、托管代码独立于平台和语言，能更好的实现不同语言平台之间的兼容；</p><p> 非托管代码依赖于平台和语言。</p><p>3、托管代码可享受CLR提供的服务（如安全检测、垃圾回收等），不需要自己完成这些操作；</p><p> 非托管代码需要自己提供安全检测、垃圾回收等操作。</p><p>托管代码就意味着托管数据？答案是否定的。</p><p>对于Visual Basic和C#来说，生活是简单的，因为你没有其它选择。当你在那些语言里面声明一个类，那么这个类的实例会在托管堆中被创建，垃圾收集器(GC)会帮我们管理这些对象的回收。但是在Visual C++中，你有另一个选择。即使你正创建一个托管程序，你可以决定哪些类是托管类型，哪些类是非托管类型的。</p><p>这就是非托管类型：</p><p>class Foo { private: int x; public: Foo(): x(0){} Foo(int xx): x(xx) {} };</p><p>这就是托管类型</p><p>__gc class Bar { private: int x; public: Bar(): x(0){} Bar(int xx): x(xx) {} };</p><p>他们唯一的区别就是类Bar的定义中有__gc关键字。这个关键字会给代码带来巨大的区别。</p><h4 id="9-5-使用Inno-Setup的-Registry-段注册-NET相关DLL文件"><a href="#9-5-使用Inno-Setup的-Registry-段注册-NET相关DLL文件" class="headerlink" title="9.5 使用Inno Setup的 [Registry] 段注册.NET相关DLL文件"></a>9.5 使用Inno Setup的 [Registry] 段注册.NET相关DLL文件</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[Registry]</span><br><span class="line">; ProgID part, TechTemp</span><br><span class="line">Root: HKCR; Subkey: "XXXXXXXXXXXX.MMMMMMMMMMMMMMM"; Flags: uninsdeletekeyifempty</span><br><span class="line">Root: HKCR; Subkey: "XXXXXXXXXXXX.MMMMMMMMMMMMMMM\CLSID"; Flags: uninsdeletekey</span><br><span class="line">Root: HKCR; Subkey: "XXXXXXXXXXXX.MMMMMMMMMMMMMMM\CLSID"; ValueType: string; ValueName: ""; ValueData: "&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;"; Flags: uninsdeletevalue</span><br><span class="line">; CLSID Part, TechTemp </span><br><span class="line">Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;"; Flags: uninsdeletekeyifempty</span><br><span class="line">Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;"; ValueType: string; ValueName: ""; ValueData: "XXXXXXXXXXXX.MMMMMMMMMMMMMMM"; Flags: uninsdeletevalue</span><br><span class="line">; CLSID Part\InprocServer32, TechTemp</span><br><span class="line">Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32"; Flags: uninsdeletekey</span><br><span class="line">Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32"; ValueType: string; ValueName: ""; ValueData: "mscoree.dll"; Flags: uninsdeletevalue</span><br><span class="line">Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32"; ValueType: string; ValueName: "ThreadingModel"; ValueData: "Both"; Flags: uninsdeletevalue</span><br><span class="line">Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32"; ValueType: string; ValueName: "Class"; ValueData: "XXXXXXXXXXXX.MMMMMMMMMMMMMMM"; Flags: uninsdeletevalue</span><br><span class="line">Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32"; ValueType: string; ValueName: "Assembly"; ValueData: "xxxxxxxxxxxxxxxxxxx, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"; Flags: uninsdeletevalue</span><br><span class="line">Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32"; ValueType: string; ValueName: "RuntimeVersion"; ValueData: "v4.0.30319"; Flags: uninsdeletevalue</span><br><span class="line">Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32"; ValueType: string; ValueName: "CodeBase"; ValueData: "file:///&#123;#CommonappdataPathBackSlash&#125;/&#123;#AppPathBackSlash&#125;/bin/NET/xxxxxxxxxxxxxxxxxxx.dll"; Flags: uninsdeletevalue</span><br><span class="line">; CLSID Part\InprocServer32\<span class="number">1.0</span>.<span class="number">0.0</span>, TechTemp</span><br><span class="line">Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32\1.0.0.0"; Flags: uninsdeletekey</span><br><span class="line">Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32\1.0.0.0"; ValueType: string; ValueName: "Class"; ValueData: "XXXXXXXXXXXX.MMMMMMMMMMMMMMM"; Flags: uninsdeletevalue</span><br><span class="line">Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32\1.0.0.0"; ValueType: string; ValueName: "Assembly"; ValueData: "xxxxxxxxxxxxxxxxxxx, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"; Flags: uninsdeletevalue</span><br><span class="line">Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32\1.0.0.0"; ValueType: string; ValueName: "RuntimeVersion"; ValueData: "v4.0.30319"; Flags: uninsdeletevalue</span><br><span class="line">Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32\1.0.0.0"; ValueType: string; ValueName: "CodeBase"; ValueData: "file:///&#123;#CommonappdataPathBackSlash&#125;/&#123;#AppPathBackSlash&#125;/bin/NET/xxxxxxxxxxxxxxxxxxx.dll"; Flags: uninsdeletevalue</span><br><span class="line">; CLSID Part\Implemented Categories, TechTemp</span><br><span class="line">Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\Implemented Categories"; Flags: uninsdeletekey</span><br><span class="line">Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\Implemented Categories\&#123;&#123;&#123;#DotNetDllCLSIDImplementedCategories&#125;&#125;"; Flags: uninsdeletekey</span><br><span class="line">; CLSID Part\ProgId, TechTemp</span><br><span class="line">Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\ProgId"; Flags: uninsdeletekey</span><br><span class="line">Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\ProgId"; ValueType: string; ValueName: ""; ValueData: "XXXXXXXXXXXX.MMMMMMMMMMMMMMM"; Flags: uninsdeletevalue</span><br></pre></td></tr></table></figure><h3 id="10-项目完整代码，最小测试版"><a href="#10-项目完整代码，最小测试版" class="headerlink" title="10. 项目完整代码，最小测试版"></a>10. 项目完整代码，最小测试版</h3><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br></pre></td><td class="code"><pre><span class="line">; -- Example1.iss --</span><br><span class="line">; Demonstrates copying <span class="number">3</span> files <span class="keyword">and</span> creating an icon.</span><br><span class="line"></span><br><span class="line">; SEE THE DOCUMENTATION <span class="keyword">FOR</span> DETAILS <span class="keyword">ON</span> CREATING .ISS SCRIPT FILES!</span><br><span class="line"></span><br><span class="line">#define ********AppPath</span><br><span class="line">#expr ********AppPath = "\********\trunk\hcnt\wire\"</span><br><span class="line"></span><br><span class="line">#define DotNetRegistToolPath</span><br><span class="line">#expr DotNetRegistToolPath = ""</span><br><span class="line"></span><br><span class="line">#define DotNetFrameWorkInstallerPath</span><br><span class="line">#expr DotNetFrameWorkInstallerPath = "..\NET\NET_Framework_Runtime\462\"</span><br><span class="line"></span><br><span class="line">#define DotNet4OCTechTemplDllPath</span><br><span class="line">#expr DotNet4OCTechTemplDllPath = "..\helper\xxxxxxxxxxxxxxxxxxx"</span><br><span class="line"></span><br><span class="line">#define DotNetFrameWorkOfflineInstaller</span><br><span class="line">#expr DotNetFrameWorkOfflineInstaller = "ndp48-x86-x64-allos-enu.exe"</span><br><span class="line"></span><br><span class="line">#define DotNetFrameWorkWebInstaller</span><br><span class="line">#expr DotNetFrameWorkWebInstaller = "ndp48-web.exe"</span><br><span class="line"></span><br><span class="line">;#define DotNetDllCLSID</span><br><span class="line">;#expr DotNetDllCLSID = "62519924-26A8-3770-9F82-0A0BC26EE7D4"</span><br><span class="line"></span><br><span class="line">;#define DotNetDllCLSIDImplementedCategories</span><br><span class="line">;#expr DotNetDllCLSIDImplementedCategories = "62C8FE65-4EBB-45E7-B440-6E39B2CDBF29"</span><br><span class="line"></span><br><span class="line">;#define AppPathBackSlash</span><br><span class="line">;#expr AppPathBackSlash = "********/trunk/hcnt/wire"</span><br><span class="line"></span><br><span class="line">;#define CommonappdataPathBackSlash</span><br><span class="line">;#expr CommonappdataPathBackSlash = "C:/ProgramData"</span><br><span class="line"></span><br><span class="line">[Setup]</span><br><span class="line">;SignTool=MyCustom sign /a /tr http:<span class="comment">//sha256timestamp.ws.symantec.com/sha256/timestamp /d $q******** for SolidWorks 2020 Beta3$q $f</span></span><br><span class="line">PrivilegesRequired=admin </span><br><span class="line">AppName=My <span class="keyword">Program</span></span><br><span class="line">AppVersion=<span class="number">1.5</span></span><br><span class="line">WizardStyle=modern</span><br><span class="line">DefaultDirName=<span class="comment">&#123;autopf&#125;</span>\My <span class="keyword">Program</span></span><br><span class="line">DefaultGroupName=My <span class="keyword">Program</span></span><br><span class="line">UninstallDisplayIcon=<span class="comment">&#123;app&#125;</span>\MyProg.exe</span><br><span class="line">Compression=lzma2</span><br><span class="line">SolidCompression=yes</span><br><span class="line">OutputDir=userdocs:Inno Setup Examples Output</span><br><span class="line">ArchitecturesInstallIn64BitMode = x64</span><br><span class="line">ArchitecturesAllowed = x64</span><br><span class="line">SetupLogging=yes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[Languages]</span><br><span class="line"><span class="keyword">Name</span>: ENGLISH; MessagesFile: compiler:<span class="keyword">Default</span>.isl</span><br><span class="line"><span class="keyword">Name</span>: DEUTSCH; MessagesFile: compiler:Languages\German.isl; </span><br><span class="line"></span><br><span class="line">[Files]</span><br><span class="line">; .NET Part</span><br><span class="line">; .NET Framework Runtime, offline installer english all os runtime </span><br><span class="line">Source: "&#123;#DotNetFrameWorkInstallerPath&#125;&#123;#DotNetFrameWorkOfflineInstaller&#125;"; DestDir: "&#123;tmp&#125;"; Flags: dontcopy noencryption;</span><br><span class="line">; .NET Framework Runtime, web installer <span class="keyword">for</span> other languages</span><br><span class="line">Source: "&#123;#DotNetFrameWorkInstallerPath&#125;&#123;#DotNetFrameWorkWebInstaller&#125;"; DestDir: "&#123;tmp&#125;"; Flags: dontcopy noencryption;</span><br><span class="line">; xxxxxxxxxxxxxxxxxxx.dll + Hilfsdlls</span><br><span class="line">Source: "&#123;#DotNet4OCTechTemplDllPath&#125;\*.*"; DestDir: "&#123;commonappdata&#125;\&#123;#********AppPath&#125;\bin\NET\"; Flags: ignoreversion recursesubdirs; Permissions: everyone-full;</span><br><span class="line"></span><br><span class="line">Source: "MyProg.exe"; DestDir: "&#123;app&#125;"</span><br><span class="line">Source: "MyProg.chm"; DestDir: "&#123;app&#125;"</span><br><span class="line">Source: "Readme.txt"; DestDir: "&#123;app&#125;"; Flags: isreadme</span><br><span class="line"></span><br><span class="line">[Run]</span><br><span class="line">; Regist the .NET DLL <span class="keyword">file</span> by using the tool regasm.exe, return <span class="number">0</span>: ERROR_SUCCESS; <span class="number">1</span>:ERROR_INVALID_FUNCTION; <span class="number">2</span>:ERROR_FILE_NOT_FOUND; <span class="number">3</span>: ERROR_PATH_NOT_FOUND  </span><br><span class="line">Filename:  &#123;code:GetCurrentRegAsmPath|&#123;#DotNetRegistToolPath&#125;&#125;\regasm.exe; Parameters: " ""&#123;commonappdata&#125;\&#123;#********AppPath&#125;\bin\NET\xxxxxxxxxxxxxxxxxxx.dll"" /codebase /verbose"; WorkingDir: "&#123;commonappdata&#125;\&#123;#********AppPath&#125;\bin\NET\"; StatusMsg: Registering DLLs; Flags: 64bit runhidden waituntilterminated;</span><br><span class="line"></span><br><span class="line">[UninstallRun]</span><br><span class="line">; Regist the .NET DLL <span class="keyword">file</span> by using the tool regasm.exe, return <span class="number">0</span>: ERROR_SUCCESS; <span class="number">1</span>:ERROR_INVALID_FUNCTION; <span class="number">2</span>:ERROR_FILE_NOT_FOUND; <span class="number">3</span>: ERROR_PATH_NOT_FOUND  </span><br><span class="line">Filename:  &#123;code:GetCurrentRegAsmPath|&#123;#DotNetRegistToolPath&#125;&#125;\regasm.exe; Parameters: "/unregister ""&#123;commonappdata&#125;\&#123;#********AppPath&#125;\bin\NET\xxxxxxxxxxxxxxxxxxx.dll"" /codebase /verbose"; WorkingDir: "&#123;commonappdata&#125;\&#123;#********AppPath&#125;\bin\NET\"; StatusMsg: Unregistering DLLs; Flags: 64bit runhidden waituntilterminated;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[CustomMessages]</span><br><span class="line">; .NET Framwork installation processing </span><br><span class="line">ENGLISH.DotNetFrameworkOfflineInstallerCaption = Installing Microsoft .NET framework %<span class="number">1</span> offline installer <span class="keyword">for</span> Windows...</span><br><span class="line">ENGLISH.DotNetFrameworkWebInstallerCaption = Installing Microsoft .NET framework %<span class="number">1</span> Web installer <span class="keyword">for</span> Windows...</span><br><span class="line">ENGLISH.DotNetFrameworkFailedToLaunch = .NET installation failed <span class="keyword">with</span> code: %<span class="number">1</span>. Please fix the error <span class="keyword">then</span> run this installer again.</span><br><span class="line">ENGLISH.DotNetFrameworkFailed1602 = .NET Framework installation was cancelled. This installation can <span class="keyword">continue</span>, but be aware that this application may <span class="keyword">not</span> run unless the .NET Framework installation <span class="keyword">is</span> completed successfully.</span><br><span class="line">ENGLISH.DotNetFrameworkFailed1603 = A fatal error occurred <span class="keyword">while</span> installing the .NET Framework. Please fix the error, <span class="keyword">then</span> run the installer again.</span><br><span class="line">ENGLISH.DotNetFrameworkFailed5100 = Your computer does <span class="keyword">not</span> meet the requirements <span class="keyword">of</span> the .NET Framework. Please consult the documentation.</span><br><span class="line">ENGLISH.DotNetFrameworkFailedOther = The .NET Framework installer exited with an unexpected status code "%1". Please review any other messages shown by the installer to determine whether the installation completed successfully, and abort this installation and fix the problem if it did not.</span><br><span class="line"></span><br><span class="line">; .NET Framwork installation processing </span><br><span class="line">DEUTSCH.DotNetFrameworkOfflineInstallerCaption = Installation von Microsoft .NET Framework %<span class="number">1</span> offline Installationsprogramm für Windows ...</span><br><span class="line">DEUTSCH.DotNetFrameworkWebInstallerCaption = Installation von Microsoft .NET Framework %<span class="number">1</span> Web Installationsprogramm für Windows ...</span><br><span class="line">DEUTSCH.DotNetFrameworkFailedToLaunch = .NET Installation fehlgeschlagen mit Code: %<span class="number">1</span>. Bitte beheben Sie den Fehler und führen Sie das Installationsprogramm erneut aus.</span><br><span class="line">DEUTSCH.DotNetFrameworkFailed1602 = .NET Framework-Installation wurde abgebrochen. Diese Installation kann fortgesetzt werden. Beachten Sie jedoch, dass diese Anwendung möglicherweise erst ausgeführt wird, wenn die .NET Framework-Installation erfolgreich abgeschlossen wurde.</span><br><span class="line">DEUTSCH.DotNetFrameworkFailed1603 = Bei der Installation von .NET Framework ist ein schwerwiegender Fehler aufgetreten. Bitte beheben Sie den Fehler und führen Sie das Installationsprogramm erneut aus.</span><br><span class="line">DEUTSCH.DotNetFrameworkFailed5100 = Ihr Computer entspricht nicht den Anforderungen von .NET Framework. Bitte konsultieren Sie die Dokumentation.</span><br><span class="line">DEUTSCH.DotNetFrameworkFailedOther = Das .NET Framework-Installationsprogramm wurde mit dem unerwarteten Statuscode "%1" beendet. Überprüfen Sie alle anderen vom Installationsprogramm angezeigten Meldungen, um festzustellen, ob die Installation erfolgreich abgeschlossen wurde, und brechen Sie diese Installation ab, und beheben Sie das Problem, wenn dies nicht der Fall ist.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;; Please <span class="keyword">do</span> <span class="keyword">not</span> delete the following, you can use it <span class="keyword">to</span> check the resgition <span class="keyword">of</span> the .NET DLL xxxxxxxxxxxxxxxxxxx.dll </span><br><span class="line">;; ProgID part, TechTemp</span><br><span class="line">;Root: HKCR; Subkey: "XXXXXXXXXXXX.MMMMMMMMMMMMMMM"; Flags: uninsdeletekeyifempty</span><br><span class="line">;Root: HKCR; Subkey: "XXXXXXXXXXXX.MMMMMMMMMMMMMMM\CLSID"; Flags: uninsdeletekey</span><br><span class="line">;Root: HKCR; Subkey: "XXXXXXXXXXXX.MMMMMMMMMMMMMMM\CLSID"; ValueType: string; ValueName: ""; ValueData: "&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;"; Flags: uninsdeletevalue</span><br><span class="line">;; CLSID Part, TechTemp </span><br><span class="line">;Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;"; Flags: uninsdeletekeyifempty</span><br><span class="line">;Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;"; ValueType: string; ValueName: ""; ValueData: "XXXXXXXXXXXX.MMMMMMMMMMMMMMM"; Flags: uninsdeletevalue</span><br><span class="line">;; CLSID Part\InprocServer32, TechTemp</span><br><span class="line">;Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32"; Flags: uninsdeletekey</span><br><span class="line">;Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32"; ValueType: string; ValueName: ""; ValueData: "mscoree.dll"; Flags: uninsdeletevalue</span><br><span class="line">;Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32"; ValueType: string; ValueName: "ThreadingModel"; ValueData: "Both"; Flags: uninsdeletevalue</span><br><span class="line">;Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32"; ValueType: string; ValueName: "Class"; ValueData: "XXXXXXXXXXXX.MMMMMMMMMMMMMMM"; Flags: uninsdeletevalue</span><br><span class="line">;Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32"; ValueType: string; ValueName: "Assembly"; ValueData: "xxxxxxxxxxxxxxxxxxx, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"; Flags: uninsdeletevalue</span><br><span class="line">;Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32"; ValueType: string; ValueName: "RuntimeVersion"; ValueData: "v4.0.30319"; Flags: uninsdeletevalue</span><br><span class="line">;Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32"; ValueType: string; ValueName: "CodeBase"; ValueData: "file:///&#123;#CommonappdataPathBackSlash&#125;/&#123;#AppPathBackSlash&#125;/bin/NET/xxxxxxxxxxxxxxxxxxx.dll"; Flags: uninsdeletevalue</span><br><span class="line">;; CLSID Part\InprocServer32\<span class="number">1.0</span>.<span class="number">0.0</span>, TechTemp</span><br><span class="line">;Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32\1.0.0.0"; Flags: uninsdeletekey</span><br><span class="line">;Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32\1.0.0.0"; ValueType: string; ValueName: "Class"; ValueData: "XXXXXXXXXXXX.MMMMMMMMMMMMMMM"; Flags: uninsdeletevalue</span><br><span class="line">;Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32\1.0.0.0"; ValueType: string; ValueName: "Assembly"; ValueData: "xxxxxxxxxxxxxxxxxxx, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"; Flags: uninsdeletevalue</span><br><span class="line">;Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32\1.0.0.0"; ValueType: string; ValueName: "RuntimeVersion"; ValueData: "v4.0.30319"; Flags: uninsdeletevalue</span><br><span class="line">;Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\InprocServer32\1.0.0.0"; ValueType: string; ValueName: "CodeBase"; ValueData: "file:///&#123;#CommonappdataPathBackSlash&#125;/&#123;#AppPathBackSlash&#125;/bin/NET/xxxxxxxxxxxxxxxxxxx.dll"; Flags: uninsdeletevalue</span><br><span class="line">;; CLSID Part\Implemented Categories, TechTemp</span><br><span class="line">;Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\Implemented Categories"; Flags: uninsdeletekey</span><br><span class="line">;Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\Implemented Categories\&#123;&#123;&#123;#DotNetDllCLSIDImplementedCategories&#125;&#125;"; Flags: uninsdeletekey</span><br><span class="line">;; CLSID Part\ProgId, TechTemp</span><br><span class="line">;Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\ProgId"; Flags: uninsdeletekey</span><br><span class="line">;Root: HKCR; Subkey: "CLSID\&#123;&#123;&#123;#DotNetDllCLSID&#125;&#125;\ProgId"; ValueType: string; ValueName: ""; ValueData: "XXXXXXXXXXXX.MMMMMMMMMMMMMMM"; Flags: uninsdeletevalue</span><br><span class="line"></span><br><span class="line">[Icons]</span><br><span class="line">Name: "&#123;group&#125;\My Program"; Filename: "&#123;app&#125;\MyProg.exe"</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[Code]</span><br><span class="line"><span class="keyword">const</span> TO_COMPARE_DOT_NET = <span class="string">'v4.6.2'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> bCancelWithoutPrompt: boolean;</span><br><span class="line">    bConnectWithNetwork: boolean;</span><br><span class="line">    bRequiresRestart: boolean;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetCurrentRegAsmPath</span><span class="params">(S: <span class="keyword">String</span>)</span>:</span> <span class="keyword">String</span>;</span><br><span class="line"><span class="keyword">var</span> version: <span class="keyword">String</span>;</span><br><span class="line">    key: <span class="keyword">String</span>;</span><br><span class="line">    installPath: <span class="keyword">String</span>;</span><br><span class="line">    success: boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    Result := S;</span><br><span class="line">    <span class="comment">// .NET 4.6.2 installs also as update to .NET 4.0 Full, you can also be on the safe side, check the windows 10 anniversary update</span></span><br><span class="line">    <span class="comment">// if the build was newer than (build 10.0.14393) with the code GetWindowsVersion &gt;= $A003839</span></span><br><span class="line">    <span class="keyword">if</span> TO_COMPARE_DOT_NET = <span class="string">'v4.6.2'</span> <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        version := <span class="string">'v4\Full'</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="comment">// .NET 4.5 installs as update to .NET 4.0 Full</span></span><br><span class="line">    <span class="keyword">if</span> TO_COMPARE_DOT_NET = <span class="string">'v4.5'</span> <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        version := <span class="string">'v4\Full'</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">    <span class="comment">// installation key group for all .NET versions</span></span><br><span class="line">    key := <span class="string">'SOFTWARE\Microsoft\NET Framework Setup\NDP\'</span> + version;</span><br><span class="line">    success := RegQueryStringValue(HKLM, key, <span class="string">'InstallPath'</span>, installPath);</span><br><span class="line">    <span class="keyword">if</span> (success = True) <span class="keyword">and</span> (S = <span class="string">''</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      Result := installPath;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">InstallFrameworkWebRuntime</span><span class="params">()</span>:</span> <span class="keyword">String</span>;</span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  WasVisible: Boolean;</span><br><span class="line">  ResultCode: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ExtractTemporaryFile(<span class="string">'&#123;#DotNetFrameWorkWebInstaller&#125;'</span>);</span><br><span class="line">  WasVisible := WizardForm.PreparingLabel.Visible;</span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">      WizardForm.PreparingLabel.Visible := True;</span><br><span class="line">      WizardForm.PreparingLabel.Caption := FmtMessage(CustomMessage(<span class="string">'DotNetFrameworkWebInstallerCaption'</span>), [TO_COMPARE_DOT_NET]);</span><br><span class="line">      ExtractTemporaryFile(<span class="string">'&#123;#DotNetFrameWorkWebInstaller&#125;'</span>);</span><br><span class="line">      <span class="comment">//if not Exec(ExpandConstant('&#123;tmp&#125;\&#123;#DotNetFrameWorkWebInstaller&#125;'), '/q /norestart', '', SW_SHOW, ewWaitUntilTerminated, ResultCode) then</span></span><br><span class="line">      <span class="keyword">if</span> <span class="keyword">not</span> Exec(ExpandConstant(<span class="string">'&#123;tmp&#125;\&#123;#DotNetFrameWorkWebInstaller&#125;'</span>), <span class="string">'/passive /norestart /showrmui /showfinalerror'</span>, <span class="string">''</span>, SW_SHOW, ewWaitUntilTerminated, ResultCode) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          <span class="comment">// https://docs.microsoft.com/de-de/windows/win32/debug/system-error-codes--0-499-</span></span><br><span class="line">          <span class="comment">// you can interact with the user that the installation failed, for example: error code 2: the system cannot find the file specified.</span></span><br><span class="line">          Result := FmtMessage(CustomMessage(<span class="string">'DotNetFrameworkFailedToLaunch'</span>), [SysErrorMessage(ResultCode)])     </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          <span class="keyword">case</span> ResultCode <span class="keyword">of</span></span><br><span class="line">            <span class="number">0</span>: <span class="keyword">begin</span></span><br><span class="line">              <span class="comment">// Successful</span></span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">            <span class="number">1602</span> : <span class="keyword">begin</span></span><br><span class="line">              MsgBox(CustomMessage(<span class="string">'DotNetFrameworkFailed1602'</span>), mbInformation, MB_OK);</span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">            <span class="number">1603</span>: <span class="keyword">begin</span></span><br><span class="line">              Result := CustomMessage(<span class="string">'DotNetFrameworkFailed1603'</span>);</span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">            <span class="number">1641</span>: <span class="keyword">begin</span></span><br><span class="line">              bRequiresRestart := True;</span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">            <span class="number">3010</span>: <span class="keyword">begin</span></span><br><span class="line">              bRequiresRestart := True;</span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">            <span class="number">5100</span>: <span class="keyword">begin</span></span><br><span class="line">              Result := CustomMessage(<span class="string">'DotNetFrameworkFailed5100'</span>);</span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">              <span class="comment">//MsgBox(FmtMessage(CustomMessage('DotNetFrameworkFailedOther'), [IntToStr(resultCode)]), mbError, MB_OK);</span></span><br><span class="line">              Result := FmtMessage(CustomMessage(<span class="string">'DotNetFrameworkFailedOther'</span>), IntToStr(ResultCode));     </span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">          <span class="keyword">end</span>;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">finally</span></span><br><span class="line">    WizardForm.PreparingLabel.Visible := WasVisible;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  DeleteFile(ExpandConstant(<span class="string">'&#123;tmp&#125;\&#123;#DotNetFrameWorkWebInstaller&#125;'</span>));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">InstallFrameworkOfflineRuntime</span><span class="params">()</span>:</span> <span class="keyword">String</span>;</span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  WasVisible: Boolean;</span><br><span class="line">  ResultCode: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  WasVisible := WizardForm.PreparingLabel.Visible;</span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">      WizardForm.PreparingLabel.Visible := True;</span><br><span class="line">      WizardForm.PreparingLabel.Caption := FmtMessage(CustomMessage(<span class="string">'DotNetFrameworkOfflineInstallerCaption'</span>), [TO_COMPARE_DOT_NET]);</span><br><span class="line">      ExtractTemporaryFile(<span class="string">'&#123;#DotNetFrameWorkOfflineInstaller&#125;'</span>);</span><br><span class="line">      <span class="comment">//if not Exec(ExpandConstant('&#123;tmp&#125;\&#123;#DotNetFrameWorkOfflineInstaller&#125;'), '/q /norestart', '', SW_SHOW, ewWaitUntilTerminated, ResultCode) then</span></span><br><span class="line">      <span class="keyword">if</span> <span class="keyword">not</span> Exec(ExpandConstant(<span class="string">'&#123;tmp&#125;\&#123;#DotNetFrameWorkOfflineInstaller&#125;'</span>), <span class="string">'/passive /norestart /showrmui /showfinalerror'</span>, <span class="string">''</span>, SW_SHOW, ewWaitUntilTerminated, ResultCode) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          <span class="comment">// https://docs.microsoft.com/de-de/windows/win32/debug/system-error-codes--0-499-</span></span><br><span class="line">          <span class="comment">// you can interact with the user that the installation failed, for example: error code 2: the system cannot find the file specified.</span></span><br><span class="line">          Result := FmtMessage(CustomMessage(<span class="string">'DotNetFrameworkFailedToLaunch'</span>), [SysErrorMessage(ResultCode)])     </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          <span class="keyword">case</span> ResultCode <span class="keyword">of</span></span><br><span class="line">            <span class="number">0</span>: <span class="keyword">begin</span></span><br><span class="line">              <span class="comment">// Successful</span></span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">            <span class="number">1602</span> : <span class="keyword">begin</span></span><br><span class="line">              MsgBox(CustomMessage(<span class="string">'DotNetFrameworkFailed1602'</span>), mbInformation, MB_OK);</span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">            <span class="number">1603</span>: <span class="keyword">begin</span></span><br><span class="line">              Result := CustomMessage(<span class="string">'DotNetFrameworkFailed1603'</span>);</span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">            <span class="number">1641</span>: <span class="keyword">begin</span></span><br><span class="line">              bRequiresRestart := True;</span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">            <span class="number">3010</span>: <span class="keyword">begin</span></span><br><span class="line">              bRequiresRestart := True;</span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">            <span class="number">5100</span>: <span class="keyword">begin</span></span><br><span class="line">              Result := CustomMessage(<span class="string">'DotNetFrameworkFailed5100'</span>);</span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">              <span class="comment">//MsgBox(FmtMessage(CustomMessage('DotNetFrameworkFailedOther'), [IntToStr(resultCode)]), mbError, MB_OK);</span></span><br><span class="line">              Result := FmtMessage(CustomMessage(<span class="string">'DotNetFrameworkFailedOther'</span>), IntToStr(ResultCode));</span><br><span class="line">            <span class="keyword">end</span>;</span><br><span class="line">          <span class="keyword">end</span>;</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">finally</span></span><br><span class="line">    WizardForm.PreparingLabel.Visible := WasVisible;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  DeleteFile(ExpandConstant(<span class="string">'&#123;tmp&#125;\&#123;#DotNetFrameWorkOfflineInstaller&#125;'</span>));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">IsNetWorkActivatedTried</span>:</span> boolean;</span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  WinHttpReq: Variant;</span><br><span class="line">  Connected: Boolean;</span><br><span class="line">  iTriedTime: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  Connected := False;</span><br><span class="line">  iTriedTime := <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    iTriedTime := iTriedTime + <span class="number">1</span>;</span><br><span class="line">    Log(<span class="string">'Checking connection to the server, try '</span> +  + IntToStr(iTriedTime) + <span class="string">' time.'</span>);</span><br><span class="line">    <span class="keyword">try</span> </span><br><span class="line">      WinHttpReq := CreateOleObject(<span class="string">'WinHttp.WinHttpRequest.5.1'</span>);</span><br><span class="line">      WinHttpReq.SetTimeouts(<span class="string">'3000'</span>, <span class="string">'3000'</span>, <span class="string">'3000'</span>, <span class="string">'3000'</span>);</span><br><span class="line">      <span class="comment">// Use your real server host name </span></span><br><span class="line">      WinHttpReq.Open(<span class="string">'GET'</span>, <span class="string">'https://www.camtek.de/'</span>, False);</span><br><span class="line">      WinHttpReq.Send(<span class="string">''</span>);</span><br><span class="line">      Log(<span class="string">'Connected to the server; status: '</span> + IntToStr(WinHttpReq.Status) + <span class="string">' '</span> +</span><br><span class="line">          WinHttpReq.StatusText);</span><br><span class="line">      Connected := True;</span><br><span class="line">    <span class="keyword">except</span></span><br><span class="line">      Log(<span class="string">'Error connecting to the server, msg: '</span> + GetExceptionMessage + <span class="string">'try again! '</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">until</span> (iTriedTime = <span class="number">3</span>) <span class="keyword">or</span> (Connected = True) ;</span><br><span class="line">  Result := Connected;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">IsDotNetDetected</span><span class="params">(version: <span class="keyword">string</span>; service: cardinal)</span>:</span> boolean;</span><br><span class="line"><span class="comment">// Indicates whether the specified version and service pack of the .NET Framework is installed.</span></span><br><span class="line"><span class="comment">// see the link: https://docs.microsoft.com/en-us/dotnet/framework/migration-guide/how-to-determine-which-versions-are-installed?redirectedfrom=MSDN#net_b</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// version -- Specify one of these strings for the required .NET Framework version:</span></span><br><span class="line"><span class="comment">//    'v1.1.4322'     .NET Framework 1.1</span></span><br><span class="line"><span class="comment">//    'v2.0.50727'    .NET Framework 2.0</span></span><br><span class="line"><span class="comment">//    'v3.0'          .NET Framework 3.0</span></span><br><span class="line"><span class="comment">//    'v3.5'          .NET Framework 3.5</span></span><br><span class="line"><span class="comment">//    'v4\Client'     .NET Framework 4.0 Client Profile</span></span><br><span class="line"><span class="comment">//    'v4\Full'       .NET Framework 4.0 Full Installation</span></span><br><span class="line"><span class="comment">//    'v4.5'          .NET Framework 4.5 378389</span></span><br><span class="line"><span class="comment">//    'v4.6'          .NET Framework 4.6 393295</span></span><br><span class="line"><span class="comment">//    'v4.6.1'        .NET Framework 4.6.1 394254</span></span><br><span class="line"><span class="comment">//    'v4.6.2'        .NET Framework 4.6.2 394802</span></span><br><span class="line"><span class="comment">//    'v4.7'          .NET Framework 4.7 393295</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// service -- Specify any non-negative integer for the required service pack level:</span></span><br><span class="line"><span class="comment">//    0               No service packs required</span></span><br><span class="line"><span class="comment">//    1, 2, etc.      Service pack 1, 2, etc. required</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">    key: <span class="keyword">string</span>;</span><br><span class="line">    install, release, serviceCount: cardinal;</span><br><span class="line">    check45, check462, success: boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// .NET 4.6.2 installs also as update to .NET 4.0 Full, you can also be on the safe side, check the windows 10 anniversary update</span></span><br><span class="line">    <span class="comment">// if the build was newer than (build 10.0.14393) with the code GetWindowsVersion &gt;= $A003839</span></span><br><span class="line">    <span class="keyword">if</span> version = <span class="string">'v4.6.2'</span> <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        version := <span class="string">'v4\Full'</span>;</span><br><span class="line">        check462 := true;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">        check462 := false;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// .NET 4.5 installs as update to .NET 4.0 Full</span></span><br><span class="line">    <span class="keyword">if</span> version = <span class="string">'v4.5'</span> <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        version := <span class="string">'v4\Full'</span>;</span><br><span class="line">        check45 := true;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span></span><br><span class="line">        check45 := false;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// installation key group for all .NET versions</span></span><br><span class="line">    key := <span class="string">'SOFTWARE\Microsoft\NET Framework Setup\NDP\'</span> + version;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// .NET 3.0 uses value InstallSuccess in subkey Setup</span></span><br><span class="line">    <span class="keyword">if</span> Pos(<span class="string">'v3.0'</span>, version) = <span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        success := RegQueryDWordValue(HKLM, key + <span class="string">'\Setup'</span>, <span class="string">'InstallSuccess'</span>, install);</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">        success := RegQueryDWordValue(HKLM, key, <span class="string">'Install'</span>, install);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// .NET 4.0/4.5 uses value Servicing instead of SP</span></span><br><span class="line">    <span class="keyword">if</span> Pos(<span class="string">'v4'</span>, version) = <span class="number">1</span> <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        success := success <span class="keyword">and</span> RegQueryDWordValue(HKLM, key, <span class="string">'Servicing'</span>, serviceCount);</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">        success := success <span class="keyword">and</span> RegQueryDWordValue(HKLM, key, <span class="string">'SP'</span>, serviceCount);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// .NET 4.5 uses additional value Release</span></span><br><span class="line">    <span class="keyword">if</span> check45 <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        success := success <span class="keyword">and</span> RegQueryDWordValue(HKLM, key, <span class="string">'Release'</span>, release);</span><br><span class="line">        success := success <span class="keyword">and</span> (release &gt;= <span class="number">378389</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// .NET 4.6.2 uses additional value Release</span></span><br><span class="line">    <span class="keyword">if</span> check462 <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">        success := success <span class="keyword">and</span> RegQueryDWordValue(HKLM, key, <span class="string">'Release'</span>, release);</span><br><span class="line">        success := success <span class="keyword">and</span> (release &gt;= <span class="number">394802</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">    Result := success <span class="keyword">and</span> (install = <span class="number">1</span>) <span class="keyword">and</span> (serviceCount &gt;= service);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">IsRequiredDotNetDetected</span>:</span> Boolean;  </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    Result := IsDotNetDetected(TO_COMPARE_DOT_NET, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">InstallDotNetOfflineRuntime</span>:</span> Boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> bConnectWithNetwork <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        Result := True;</span><br><span class="line">      <span class="keyword">end</span> </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span> ActiveLanguage = <span class="string">'ENGLISH'</span> <span class="keyword">then</span></span><br><span class="line">          <span class="keyword">begin</span></span><br><span class="line">             Result := True;</span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">          <span class="keyword">begin</span></span><br><span class="line">            Result := False;</span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">InstallDotNetWebRuntime</span>:</span> Boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">not</span> bConnectWithNetwork) <span class="keyword">and</span> ( <span class="keyword">not</span> ActiveLanguage = <span class="string">'ENGLISH'</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        Result := True;</span><br><span class="line">      <span class="keyword">end</span> </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        Result := False;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">InitializeSetup</span><span class="params">()</span>:</span> Boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    bConnectWithNetwork := IsNetWorkActivatedTried;</span><br><span class="line">    Result := True;</span><br><span class="line"><span class="keyword">end</span>; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">PrepareToInstall</span><span class="params">(<span class="keyword">var</span> NeedsRestart: Boolean)</span>:</span> <span class="keyword">String</span>;</span><br><span class="line"><span class="keyword">var</span> bInstallWeb: boolean;</span><br><span class="line">    bInstallStd: boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="comment">// 'NeedsRestart' only has an effect if we return a non-empty string, thus aborting the installation.</span></span><br><span class="line">  <span class="comment">// If the installers indicate that they want a restart, this should be done at the end of installation.</span></span><br><span class="line">  <span class="comment">// Therefore we set the global 'restartRequired' if a restart is needed, and return this from NeedRestart()</span></span><br><span class="line">  bCancelWithoutPrompt := false;</span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> IsRequiredDotNetDetected <span class="keyword">then</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      bInstallWeb := InstallDotNetWebRuntime;</span><br><span class="line">      bInstallStd := InstallDotNetOfflineRuntime;</span><br><span class="line">      <span class="keyword">if</span> ( bInstallWeb = True) <span class="keyword">then</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          Result := InstallFrameworkWebRuntime</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> ( bInstallStd = True) <span class="keyword">then</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          Result := InstallFrameworkOfflineRuntime</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          Result := InstallFrameworkWebRuntime</span><br><span class="line">        <span class="keyword">end</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;          </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NeedRestart</span><span class="params">()</span>:</span> Boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  Result := bRequiresRestart;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>欢迎订阅我的个人微信公众号，一起讨论学习。</p><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">          版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，          转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。        </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者: Jim Wang 公众号: &lt;a class=&quot;main-button-link&quot; href=&quot;#wechat&quot; rel=&quot;noopener&quot;&gt;巴博萨船长&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;任务难点&quot;&gt;&lt;a href=&quot;#任务难点&quot; class=&quot;headerlink&quot; title=&quot;任务难点&quot;&gt;&lt;/a&gt;任务难点&lt;/h3&gt;&lt;p&gt;准备一个安装程序，以验证系统的体系结构并安装.NET。&lt;/p&gt;
&lt;h3 id=&quot;1-介绍&quot;&gt;&lt;a href=&quot;#1-介绍&quot; class=&quot;headerlink&quot; title=&quot;1. 介绍&quot;&gt;&lt;/a&gt;1. 介绍&lt;/h3&gt;&lt;p&gt;此安装脚本示例的目的是启动一个安装程序，该安装程序检查系统上当前安装的.NET版本，并仅在需要时安装一个。安装程序将在软件包中包括Microsoft提供的Web安装程序。 安装程序还将根据运行所在的体系结构安装一些库。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Inno Setup 相关 - 实战经验" scheme="https://zicowarn.github.io/categories/Inno-Setup-%E7%9B%B8%E5%85%B3-%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Inno Setup" scheme="https://zicowarn.github.io/tags/Inno-Setup/"/>
    
      <category term=".NET" scheme="https://zicowarn.github.io/tags/NET/"/>
    
  </entry>
  
  <entry>
    <title>Inno Setup 如何以管理员的身份运行</title>
    <link href="https://zicowarn.github.io/2019/06/25/inno-01-run-as-admin/"/>
    <id>https://zicowarn.github.io/2019/06/25/inno-01-run-as-admin/</id>
    <published>2019-06-25T00:11:08.000Z</published>
    <updated>2019-06-25T00:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>作者: Jim Wang 公众号: <a class="main-button-link" href="#wechat" rel="noopener">巴博萨船长</a></p><h2 id="Inno-Setup-如何以管理员的身份相关"><a href="#Inno-Setup-如何以管理员的身份相关" class="headerlink" title="Inno Setup 如何以管理员的身份相关"></a>Inno Setup 如何以管理员的身份相关</h2><h3 id="1-如何以管理员身份运行一个Batch脚本文件"><a href="#1-如何以管理员身份运行一个Batch脚本文件" class="headerlink" title="1. 如何以管理员身份运行一个Batch脚本文件"></a>1. 如何以管理员身份运行一个Batch脚本文件</h3><p>If you are using <code>[Run]</code> section then make sure you use <code>runascurrentuser</code> flag (If this flag is specified, the spawned process will inherit Setup/Uninstall’s user credentials (typically, full administrative privileges))</p><a id="more"></a><p>Else there are three ways how to run applications programatically (recommended way):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function Exec(const Filename, Params, WorkingDir: String; const ShowCmd: Integer; const Wait: TExecWait; var ResultCode: Integer): Boolean;</span><br><span class="line"></span><br><span class="line">function ShellExec(const Verb, Filename, Params, WorkingDir: String; const ShowCmd: Integer; const Wait: TExecWait; var ErrorCode: Integer): Boolean;</span><br><span class="line"></span><br><span class="line">function ShellExecAsOriginalUser(const Verb, Filename, Params, WorkingDir: String; const ShowCmd: Integer; const Wait: TExecWait; var ErrorCode: Integer): Boolean;</span><br></pre></td></tr></table></figure><p>You should use <code>Exec()</code> or <code>ShellExec()</code> because they open the specified file or performs another action specified by Verb, using the same credentials as Setup/Uninstall.</p><p>But none of mentioned ways will work if your installer is not running in elevated mode. So make sure the UAC window will appear before installer starts:</p><p>In section <code>[Setup]</code> use directive <code>PrivilegesRequired</code></p><p>Valid values:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">none&#96;, &#96;poweruser&#96;, &#96;admin&#96;, or &#96;lowest</span><br></pre></td></tr></table></figure><p>Use admin to ensure appropriate credentials.</p><h3 id="2-各个合法值在不同版本中的表现"><a href="#2-各个合法值在不同版本中的表现" class="headerlink" title="2. 各个合法值在不同版本中的表现"></a>2. 各个合法值在不同版本中的表现</h3><h4 id="合法值为："><a href="#合法值为：" class="headerlink" title="合法值为："></a>合法值为：</h4><ul><li>none, poweruser, admin, or lowest</li></ul><h4 id="默认值为：Default-value"><a href="#默认值为：Default-value" class="headerlink" title="默认值为：Default value:"></a>默认值为：Default value:</h4><ul><li>admin</li></ul><h4 id="描述Description"><a href="#描述Description" class="headerlink" title="描述Description:"></a>描述Description:</h4><p>The effect of this directive depends on which version of Windows the user is running:</p><p>此参数的效果取决于用户运行的Windows版本：</p><p><strong>On Windows Vista and later:</strong></p><p>This directive affects whether elevated rights are requested (via a User Account Control dialog) when the installation is started.</p><p>该指令影响安装开始时是否要求提升权限（通过“用户帐户控制”对话框）。</p><p>When set to admin (the default) or poweruser, Setup will always run with administrative privileges. If Setup was started by an unprivileged user, Windows will ask for the password to an account that has administrative privileges, and Setup will then run under that account.</p><p>当设置为admin（默认）或超级用户时，安装程序将始终以管理特权运行。 如果安装程序是由非特权用户启动的，则Windows将要求输入具有管理特权的帐户的密码，然后安装程序将在该帐户下运行。</p><p>When set to none, Setup will only run with administrative privileges if it was started by a member of the Administrators group. Do not use this setting unless you are sure your installation will run successfully on unprivileged accounts.</p><p>如果设置为none，则安装程序仅由Administrators组的成员启动时才具有管理特权。 除非您确定安装将在非特权帐户上成功运行，否则不要使用此设置。</p><p>When set to lowest, Setup will not request to be run administrative privileges even if it was started by a member of the Administrators group. Additionally, the uninstall info root key will always be HKEY_CURRENT_USER, and the “common” forms of the Shell Folder constants are mapped to the “user” forms, even if administrative privileges are available. Do not use this setting unless you are sure your installation will run successfully on unprivileged accounts.</p><p>设置为最低时，即使安装程序是由Administrators组的成员启动的，它也不会请求运行管理权限。 此外，卸载信息的根密钥将始终为HKEY_CURRENT_USER，并且即使具有管理特权，Shell文件夹常量的“公共”形式也将映射到“用户”形式。 除非您确定安装将在非特权帐户上成功运行，否则不要使用此设置。</p><p><strong>On Windows NT/2000/XP/2003</strong></p><p>This directive specifies the minimum user privileges required to run the installation.</p><p>该指令指定运行安装所需的最低用户特权。</p><p>When set to admin (the default), Setup will only run if the user is a member of the Administrators group. Otherwise, it will display the following message and exit: “You must be logged in as an administrator when installing this program.”</p><p>当设置为admin（默认值）时，仅当用户是Administrators组的成员时，安装程序才会运行。 否则，它将显示以下消息并退出：“安装此程序时，您必须以管理员身份登录。”</p><p>When set to poweruser, Setup will only run if the user is a member of the Administrators or Power Users groups. Otherwise, it will display the following message and exit: “You must be logged in as an administrator or as a member of the Power Users group when installing this program.”</p><p>设置为poweruser时，仅当用户是Administrators或Power Users组的成员时，安装程序才会运行。 否则，它将显示以下消息并退出：“安装此程序时，您必须以管理员或Power Users组成员的身份登录。”</p><p>When set to none Setup will not check the user’s group membership. Do not use this setting unless you are sure your installation will run successfully on unprivileged accounts.</p><p>设置为none时，安装程序将不检查用户的组成员身份。 除非您确定安装将在非特权帐户上成功运行，否则不要使用此设置。</p><p>When set to lowest Setup will not check the user’s group membership. Additionally, the uninstall info root key will always be HKEY_CURRENT_USER, and the “common” forms of the Shell Folder constants are mapped to the “user” forms, even if administrative privileges are available. Do not use this setting unless you are sure your installation will run successfully on unprivileged accounts.</p><p>设置为最低时，安装程序将不检查用户的组成员身份。 此外，卸载信息的根密钥将始终为HKEY_CURRENT_USER，并且即使具有管理特权，Shell文件夹常量的“公共”形式也将映射到“用户”形式。 除非您确定安装将在非特权帐户上成功运行，否则不要使用此设置。</p><p><strong>On Windows 95/98/Me</strong></p><p>This directive has no effect on these versions of Windows.</p><p>该指令对这些版本的Windows无效。</p><h3 id="以管理员身份安装和非管理员身份安装的区别"><a href="#以管理员身份安装和非管理员身份安装的区别" class="headerlink" title="以管理员身份安装和非管理员身份安装的区别"></a>以管理员身份安装和非管理员身份安装的区别</h3><p>An installation can run in one of two modes: administrative or non administrative. Which mode is selected is specified by the <a href="http://www.jrsoftware.org/ishelp/topic_setup_privilegesrequired.htm" target="_blank" rel="noopener">PrivilegesRequired</a> and <a href="http://www.jrsoftware.org/ishelp/topic_setup_privilegesrequiredoverridesallowed.htm" target="_blank" rel="noopener">PrivilegesRequiredOverridesAllowed</a> [Setup] section directives.</p><p>In administrative install mode:</p><ul><li>The <code>{group}</code> folder is created in the <em>All Users</em> profile.</li><li>The “auto” form of the directory and Shell Folder constants is mapped to the “common” form.</li><li>The <a href="http://www.jrsoftware.org/ishelp/topic_registrysection.htm" target="_blank" rel="noopener">HKA</a> and uninstall info root keys will be HKEY_LOCAL_MACHINE.</li></ul><p>In non administrative install mode:</p><ul><li>The <code>{group}</code> folder is created in the current user’s profile.</li><li>The “auto” form of the directory and Shell Folder constants is mapped to the “user” form.</li><li>The <a href="http://www.jrsoftware.org/ishelp/topic_registrysection.htm" target="_blank" rel="noopener">HKA</a> and uninstall info root keys will be HKEY_CURRENT_USER.</li></ul><p><strong>Notes:</strong></p><p>Regardless of the version of Windows, if the installation is running in administrative install mode then you should be careful about making any per-user area changes: such changes may not achieve what you are intending. The compiler will warn you about this, which can be disabled using <a href="http://www.jrsoftware.org/ishelp/topic_setup_useduserareaswarning.htm" target="_blank" rel="noopener">UsedUserAreasWarning</a>.</p><p>无论Windows的版本如何，如果安装均以管理安装模式运行，则应谨慎进行每个用户区域的更改：此类更改可能无法实现您的预期。 编译器将对此警告，可以使用<a href="http://www.jrsoftware.org/ishelp/topic_setup_useduserareaswarning.htm" target="_blank" rel="noopener">UsedUserAreasWarning</a>禁用。</p><p>If the installation is running in non administrative install mode, but administrative privileges are available anyway then Setup or the [Code] section might still make use of these privileges. For this reason the uninstaller will always be marked as requiring administrative privileges in this case, just as if the installation was running in administrative install mode.</p><p>如果安装程序在非管理安装模式下运行，但是仍然具有管理特权，则安装程序或[Code]部分可能仍会使用这些特权。 因此，在这种情况下，卸载程序将始终被标记为需要管理特权，就像安装在管理安装模式下运行一样。</p><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">          版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，          转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。        </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者: Jim Wang 公众号: &lt;a class=&quot;main-button-link&quot; href=&quot;#wechat&quot; rel=&quot;noopener&quot;&gt;巴博萨船长&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Inno-Setup-如何以管理员的身份相关&quot;&gt;&lt;a href=&quot;#Inno-Setup-如何以管理员的身份相关&quot; class=&quot;headerlink&quot; title=&quot;Inno Setup 如何以管理员的身份相关&quot;&gt;&lt;/a&gt;Inno Setup 如何以管理员的身份相关&lt;/h2&gt;&lt;h3 id=&quot;1-如何以管理员身份运行一个Batch脚本文件&quot;&gt;&lt;a href=&quot;#1-如何以管理员身份运行一个Batch脚本文件&quot; class=&quot;headerlink&quot; title=&quot;1. 如何以管理员身份运行一个Batch脚本文件&quot;&gt;&lt;/a&gt;1. 如何以管理员身份运行一个Batch脚本文件&lt;/h3&gt;&lt;p&gt;If you are using &lt;code&gt;[Run]&lt;/code&gt; section then make sure you use &lt;code&gt;runascurrentuser&lt;/code&gt; flag (If this flag is specified, the spawned process will inherit Setup/Uninstall’s user credentials (typically, full administrative privileges))&lt;/p&gt;
    
    </summary>
    
    
      <category term="Inno Setup 相关 - 实战经验" scheme="https://zicowarn.github.io/categories/Inno-Setup-%E7%9B%B8%E5%85%B3-%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Inno Setup" scheme="https://zicowarn.github.io/tags/Inno-Setup/"/>
    
  </entry>
  
  <entry>
    <title>Python 杂记之 根据版本号自动调用泛函数</title>
    <link href="https://zicowarn.github.io/2019/04/25/0807-ma-auto-generic-function/"/>
    <id>https://zicowarn.github.io/2019/04/25/0807-ma-auto-generic-function/</id>
    <published>2019-04-25T00:11:08.000Z</published>
    <updated>2019-04-25T00:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>作者: Jim Wang 公众号: <a class="main-button-link" href="#wechat" rel="noopener">巴博萨船长</a></p><p>在未来使用中，窗口的表现形式可能根据版本的不同而不同，但又需要同时要保证代码的向下兼容，也就说可以不断地添加了新的窗口，那老用户的老版本也应该能够继续使用。所以要根据版本信息进行代码（至少是窗体生成部分的代码）的调度。</p><a id="more"></a><ol><li><p>调度方式1， 传统设计理念中，也就是预定义一部分类方法，在根据实际需求，用字典索引的方式查找类方法或者函数。如下，</p><ul><li><p>可以如下方式进行调度:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">p1</span><span class="params">(args)</span>:</span></span><br><span class="line">    whatever</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">p2</span><span class="params">(more args)</span>:</span></span><br><span class="line">    whatever</span><br><span class="line"></span><br><span class="line">myDict = &#123;</span><br><span class="line">    <span class="string">"P1"</span>: p1,</span><br><span class="line">    <span class="string">"P2"</span>: p2,</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">"Pn"</span>: pn</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myMain</span><span class="params">(name)</span>:</span></span><br><span class="line">    myDict[name]()</span><br></pre></td></tr></table></figure></li><li><p>或者以下列方式进行调度：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myMain</span><span class="params">(key)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ExecP1</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ExecP2</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ExecP3</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ExecPn</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">pass</span> </span><br><span class="line">    locals()[<span class="string">'Exec'</span> + key]()</span><br></pre></td></tr></table></figure><p>两种的调度思路是一致的。</p></li></ul></li><li><p>调度方式2， Python标准库种有一个functools模块，该模块可以为可调用对象定义高阶函数和操作。即，依据现有函数定义新的函数。我们实现的方式运用了partial函数和singledispatch函数，parital由于定义偏函数，也就是为了固定函数或者方法的一个参数，在该实现方式种用于向Event的Handler传递第二个参数。singledispatch是用于函数调度，即将函数装饰为泛函数。其根据参数的数据类型实现函数的自主调度。因为我们要实现类方法根据不同的版本进行自主调度，就意味着需要将版本作为一种新的数据类型。</p><ul><li><p>基本代码如下：</p><p>```python import wx import wx.adv from sys import modules from functools import singledispatch, update_wrapper, partial</p><p>def methdispatch(func): dispatcher = singledispatch(func) def wrapper(_args, **kw): return dispatcher.dispatch(args[1].<strong>class</strong>)(_args, **kw) wrapper.register = dispatcher.register update_wrapper(wrapper, func) return wrapper</p><p>thisModule = modules[<strong>name</strong>]</p><p><strong>assign the new types inodule level m</strong></p><p>setattr(thisModule, ‘v1_20’, type(‘v1_20’, (object,), {})) setattr(thisModule, ‘v1_30’, type(‘v1_30’, (object,), {})) setattr(thisModule, ‘v1_40’, type(‘v1_40’, (object,), {})) setattr(thisModule, ‘v1_50’, type(‘v1_50’, (object,), {})) setattr(thisModule, ‘v1_60’, type(‘v1_60’, (object,), {}))</p></li></ul></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">class ClassDialog(wx.Dialog):</span><br><span class="line"></span><br><span class="line">    def __init__(self, parent, title&#x3D;&quot;Test Demo&quot;, size&#x3D;wx.DefaultSize, pos&#x3D;wx.DefaultPosition, style&#x3D;wx.DEFAULT_DIALOG_STYLE, strVersion&#x3D;&quot;v1_20&quot;, name&#x3D;&quot;TestDemo&quot;):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        strVersion, format v1_20</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        wx.Dialog.__init__(self, parent, wx.ID_ANY, title,</span><br><span class="line">                               size&#x3D;size,</span><br><span class="line">                               pos&#x3D;pos,</span><br><span class="line">                               style&#x3D;style,</span><br><span class="line">                               name&#x3D;name)</span><br><span class="line">        try:</span><br><span class="line">            self.objVersion &#x3D; eval(strVersion)()</span><br><span class="line">        except:</span><br><span class="line">            self.objVersion &#x3D; None</span><br><span class="line">        self.CreateWidgets(self.objVersion)</span><br><span class="line"></span><br><span class="line">    @methdispatch</span><br><span class="line">    def CreateWidgets(self, objVersion):  # @UnusedVariable</span><br><span class="line">        self.panel &#x3D; wx.Panel(self)</span><br><span class="line">        vBoxSizer &#x3D; wx.BoxSizer(wx.VERTICAL)</span><br><span class="line">        self.quote &#x3D; wx.StaticText(self.panel, label&#x3D;&quot;Your quote: Default &quot;, pos&#x3D;(20, 30))</span><br><span class="line">        vBoxSizer.Add(self.quote, 5)</span><br><span class="line">        self.btn &#x3D; wx.Button(self.panel, wx.ID_ANY, size&#x3D;wx.DefaultSize, label&#x3D;&quot;Test&quot;)</span><br><span class="line">        vBoxSizer.Add(self.btn, 1)</span><br><span class="line">        self.panel.SetSizer(vBoxSizer)</span><br><span class="line">        self.btn.Bind(wx.EVT_BUTTON, partial(self.OnButtonClicked, self.objVersion))</span><br><span class="line"></span><br><span class="line">    @CreateWidgets.register(v1_20)  # @UndefinedVariable</span><br><span class="line">    def _(self, objVersion):  # @UnusedVariable</span><br><span class="line">        self.panel &#x3D; wx.Panel(self)</span><br><span class="line">        vBoxSizer &#x3D; wx.BoxSizer(wx.VERTICAL)</span><br><span class="line">        self.quote &#x3D; wx.StaticText(self.panel, label&#x3D;&quot;Your quote: 1.20 &quot;, pos&#x3D;(20, 30))</span><br><span class="line">        vBoxSizer.Add(self.quote, 5)</span><br><span class="line">        self.btn &#x3D; wx.Button(self.panel, wx.ID_ANY, size&#x3D;wx.DefaultSize, label&#x3D;&quot;Test&quot;)</span><br><span class="line">        vBoxSizer.Add(self.btn, 1)</span><br><span class="line">        self.panel.SetSizer(vBoxSizer)</span><br><span class="line">        self.btn.Bind(wx.EVT_BUTTON, partial(self.OnButtonClicked, self.objVersion))</span><br><span class="line"></span><br><span class="line">    @CreateWidgets.register(v1_30)  # @UndefinedVariable</span><br><span class="line">    def _(self, objVersion):  # @UnusedVariable @DuplicatedSignature</span><br><span class="line">        self.panel &#x3D; wx.Panel(self)</span><br><span class="line">        vBoxSizer &#x3D; wx.BoxSizer(wx.VERTICAL)</span><br><span class="line">        self.quote &#x3D; wx.StaticText(self.panel, label&#x3D;&quot;Your quote: 1.30 &quot;, pos&#x3D;(20, 30))</span><br><span class="line">        vBoxSizer.Add(self.quote, 5)</span><br><span class="line">        self.btn &#x3D; wx.Button(self.panel, wx.ID_ANY, size&#x3D;wx.DefaultSize, label&#x3D;&quot;Test&quot;)</span><br><span class="line">        vBoxSizer.Add(self.btn, 1)</span><br><span class="line">        self.panel.SetSizer(vBoxSizer)</span><br><span class="line">        self.btn.Bind(wx.EVT_BUTTON, partial(self.OnButtonClicked, self.objVersion))</span><br><span class="line"></span><br><span class="line">    @methdispatch </span><br><span class="line">    def OnButtonClicked(self, objVersion, event):  # @UnusedVariable</span><br><span class="line">        print(&quot;aaaaa&quot;)</span><br><span class="line"></span><br><span class="line">    @OnButtonClicked.register(v1_20)  # @UndefinedVariable</span><br><span class="line">    def _(self, objVersion, event):  # @UndefinedVariable @DuplicatedSignature @UnusedVariable</span><br><span class="line">        print(event.EventObject.Name)</span><br><span class="line">        print(&quot;bbbbb&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class SubClassDialog(ClassDialog):</span><br><span class="line">    def __init__(self, parent, title&#x3D;&quot;Test Demo&quot;, size&#x3D;wx.DefaultSize, pos&#x3D;wx.DefaultPosition, style&#x3D;wx.DEFAULT_DIALOG_STYLE, strVersion&#x3D;&quot;v1_20&quot;, name&#x3D;&quot;TestDemo&quot;):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        strVersion, format v1_20</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        ClassDialog.__init__(self, parent, title&#x3D;title, size&#x3D;size, pos&#x3D;pos, style&#x3D;style, strVersion&#x3D;strVersion, name&#x3D;name)  # @UndefinedVariable</span><br><span class="line"></span><br><span class="line">    @ClassDialog.CreateWidgets.register(v1_40)  # @UndefinedVariable</span><br><span class="line">    def _(self, objVersion):  # @DuplicatedSignature @UnusedVariable</span><br><span class="line">        print(&quot;1.40&quot;)</span><br><span class="line"></span><br><span class="line">    @ClassDialog.CreateWidgets.register(v1_50)  # @UndefinedVariable</span><br><span class="line">    def _(self, objVersion):  # @DuplicatedSignature @UnusedVariable</span><br><span class="line">        print(&quot;1.50&quot;)</span><br><span class="line"></span><br><span class="line">class MyFrame(wx.Frame):</span><br><span class="line">    &quot;&quot;&quot; We simply derive a new class of Frame. &quot;&quot;&quot;</span><br><span class="line">    def __init__(self, parent, title):  # @DuplicatedSignature</span><br><span class="line">        wx.Frame.__init__(self, parent, title&#x3D;title, size&#x3D;(200,100))</span><br><span class="line">        dlg&#x3D;SubClassDialog(self, strVersion&#x3D;&quot;v1_x0&quot;)</span><br><span class="line">        res &#x3D; dlg.ShowModal()</span><br><span class="line">        #self.Show(True)</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    app &#x3D; wx.App(False)</span><br><span class="line">    frame &#x3D; MyFrame(None, &#39;Small editor&#39;)  # @UnusedVariable</span><br><span class="line">    app.MainLoop()</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p> 在日常实践种singledispatch都是用来调度函数的，如果直接用在类方法上，会出现输入参数异常的问题。在这里我们就需要重新定义singledispatch进而得到一个methdispatch的函数。因为类方法的第一个参数为self即实例，所以我们要在函数种dispatch()第二个个参数。检查其数据类型然后调度注册的函数。</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">methdispatch</span><span class="params">(func)</span>:</span></span><br><span class="line">    dispatcher = singledispatch(func)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kw)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> dispatcher.dispatch(args[<span class="number">1</span>].__class__)(*args, **kw)</span><br><span class="line">    wrapper.register = dispatcher.register</span><br><span class="line">    update_wrapper(wrapper, func)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br></pre></td></tr></table></figure><p> 为了实现类方法依照版本类型自主调度，上文中说到，我们要将版本注册成新的数据类型，或者类。在未来任何需要新的版本，都要将该版本好吧注册成新的类，代码如下：</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">thisModule = modules[__name__]</span><br><span class="line"><span class="comment"># assign the new types inodule level m</span></span><br><span class="line">setattr(thisModule, <span class="string">'v1_20'</span>, type(<span class="string">'v1_20'</span>, (object,), &#123;&#125;))</span><br><span class="line">setattr(thisModule, <span class="string">'v1_30'</span>, type(<span class="string">'v1_30'</span>, (object,), &#123;&#125;))</span><br><span class="line">setattr(thisModule, <span class="string">'v1_40'</span>, type(<span class="string">'v1_40'</span>, (object,), &#123;&#125;))</span><br><span class="line">setattr(thisModule, <span class="string">'v1_50'</span>, type(<span class="string">'v1_50'</span>, (object,), &#123;&#125;))</span><br><span class="line">setattr(thisModule, <span class="string">'v1_60'</span>, type(<span class="string">'v1_60'</span>, (object,), &#123;&#125;))</span><br></pre></td></tr></table></figure><p> 普通的类方法可以用如下的代码实现调度，如果采用上述的方式进行版本数据类型的声明，一些IDE并不能够自动找到新注册的数据类型，就会出现该类型未找到的错，如果使用Eclipse就需要添加特别注释@UndefinedVariable：</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CreateWidgets.register(v1_30)  # @UndefinedVariable</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_</span><span class="params">(self, objVersion)</span>:</span>  <span class="comment"># @UnusedVariable @DuplicatedSignature</span></span><br><span class="line">    self.panel = wx.Panel(self)</span><br><span class="line">    vBoxSizer = wx.BoxSizer(wx.VERTICAL)</span><br><span class="line">    self.quote = wx.StaticText(self.panel, label=<span class="string">"Your quote: 1.30 "</span>, pos=(<span class="number">20</span>, <span class="number">30</span>))</span><br><span class="line">    vBoxSizer.Add(self.quote, <span class="number">5</span>)</span><br><span class="line">    self.btn = wx.Button(self.panel, wx.ID_ANY, size=wx.DefaultSize, label=<span class="string">"Test"</span>)</span><br><span class="line">    vBoxSizer.Add(self.btn, <span class="number">1</span>)</span><br><span class="line">    self.panel.SetSizer(vBoxSizer)</span><br><span class="line">    self.btn.Bind(wx.EVT_BUTTON, partial(self.OnButtonClicked, self.objVersion))</span><br></pre></td></tr></table></figure><p> 针对一些特别的类方法如，事件处理函数，就要用到partial函数，代码如下。需要注意的是在这里partial固定的是类方法OnButtonClicked的第一个参数，第二个参数是Event。 理解了这些，我们就可以根据版本的不同调度同一事件的不同时间的处理方法了。</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.btn.Bind(wx.EVT_BUTTON, partial(self.OnButtonClicked, self.objVersion))</span><br></pre></td></tr></table></figure><p> 注册同一事件处理函数的泛函数方法如下，泛函数的名称可以自由定义，但是_在这里确实是一个很好的选择，如果某一版本的泛函数没被注册，就会使用函数的本体:</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@methdispatch </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">OnButtonClicked</span><span class="params">(self, objVersion, event)</span>:</span>  <span class="comment"># @UnusedVariable</span></span><br><span class="line">    print(<span class="string">"aaaaa"</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@OnButtonClicked.register(v1_20)  # @UndefinedVariable</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_</span><span class="params">(self, objVersion, event)</span>:</span>  <span class="comment"># @DuplicatedSignature @UnusedVariable</span></span><br><span class="line">    print(event.EventObject.Name)</span><br><span class="line">    print(<span class="string">"bbbbb"</span>)</span><br></pre></td></tr></table></figure><p> 上述的内容都是在一个Python种的使用情况，下面我们介绍一下如何跨模块实现上述内容，在跨模块使用该调度方式的时候，需要注意要从基本模块加载版本的数据类型，在注册泛函数的时候写法也于在同一模块种的不同，本例种：@ClassDialog.CreateWidgets.register(v1_60)，从类名，类方法名再进而注册版本类型。</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wx</span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> partial</span><br><span class="line"><span class="keyword">from</span> test <span class="keyword">import</span> ClassDialog, v1_60 <span class="comment"># @UnusedImport @UnresolvedImport</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubClassDialogInExtraModule</span><span class="params">(ClassDialog)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent, title=<span class="string">"Test Demo"</span>, size=wx.DefaultSize, pos=wx.DefaultPosition, style=wx.DEFAULT_DIALOG_STYLE, strVersion=<span class="string">"v1_20"</span>, name=<span class="string">"TestDemo"</span>)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        strVersion, format v1_20</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        ClassDialog.__init__(self, parent, title=title, size=size, pos=pos, style=style, strVersion=strVersion, name=name)  <span class="comment"># @UndefinedVariable</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">    @ClassDialog.CreateWidgets.register(v1_60)  # @UndefinedVariable</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_</span><span class="params">(self, objVersion)</span>:</span>  <span class="comment"># @UnusedVariable @DuplicatedSignature</span></span><br><span class="line">        self.panel = wx.Panel(self)</span><br><span class="line">        vBoxSizer = wx.BoxSizer(wx.VERTICAL)</span><br><span class="line">        self.quote = wx.StaticText(self.panel, label=<span class="string">"Your quote: 1.60 "</span>, pos=(<span class="number">20</span>, <span class="number">30</span>))</span><br><span class="line">        vBoxSizer.Add(self.quote, <span class="number">5</span>)</span><br><span class="line">        self.btn = wx.Button(self.panel, wx.ID_ANY, size=wx.DefaultSize, label=<span class="string">"Test"</span>)</span><br><span class="line">        vBoxSizer.Add(self.btn, <span class="number">1</span>)</span><br><span class="line">        self.panel.SetSizer(vBoxSizer)</span><br><span class="line">        self.btn.Bind(wx.EVT_BUTTON, partial(self.OnButtonClicked, self.objVersion))</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyFrame</span><span class="params">(wx.Frame)</span>:</span></span><br><span class="line">    <span class="string">""" We simply derive a new class of Frame. """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent, title)</span>:</span>  <span class="comment"># @DuplicatedSignature</span></span><br><span class="line">        wx.Frame.__init__(self, parent, title=title, size=(<span class="number">200</span>,<span class="number">100</span>))</span><br><span class="line">        dlg=SubClassDialogInExtraModule(self, strVersion=<span class="string">"v1_60"</span>)</span><br><span class="line">        res = dlg.ShowModal()  <span class="comment"># @UnusedVariable</span></span><br><span class="line">        <span class="comment">#self.Show(True)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    app = wx.App(<span class="literal">False</span>)</span><br><span class="line">    frame = MyFrame(<span class="literal">None</span>, <span class="string">'Small editor'</span>)  <span class="comment"># @UnusedVariable</span></span><br><span class="line">    app.MainLoop()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p> 上述就是使用functools种的两个函数实现依据不同版本调度不同的泛函数的全部内容</p><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">          版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，          转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。        </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者: Jim Wang 公众号: &lt;a class=&quot;main-button-link&quot; href=&quot;#wechat&quot; rel=&quot;noopener&quot;&gt;巴博萨船长&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在未来使用中，窗口的表现形式可能根据版本的不同而不同，但又需要同时要保证代码的向下兼容，也就说可以不断地添加了新的窗口，那老用户的老版本也应该能够继续使用。所以要根据版本信息进行代码（至少是窗体生成部分的代码）的调度。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python 相关 - 8. Python 杂记" scheme="https://zicowarn.github.io/categories/Python-%E7%9B%B8%E5%85%B3-8-Python-%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="https://zicowarn.github.io/tags/Python/"/>
    
      <category term="杂记" scheme="https://zicowarn.github.io/tags/%E6%9D%82%E8%AE%B0/"/>
    
      <category term="自动调用" scheme="https://zicowarn.github.io/tags/%E8%87%AA%E5%8A%A8%E8%B0%83%E7%94%A8/"/>
    
      <category term="泛函数" scheme="https://zicowarn.github.io/tags/%E6%B3%9B%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Python 杂记之 如何确定两个字符串的相似度</title>
    <link href="https://zicowarn.github.io/2018/12/25/0806-ma-string-similarity/"/>
    <id>https://zicowarn.github.io/2018/12/25/0806-ma-string-similarity/</id>
    <published>2018-12-25T00:11:08.000Z</published>
    <updated>2018-12-25T00:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">          版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，          转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。        </div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;div style=&quot;color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22
      
    
    </summary>
    
    
      <category term="Python 相关 - 8. Python 杂记" scheme="https://zicowarn.github.io/categories/Python-%E7%9B%B8%E5%85%B3-8-Python-%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="https://zicowarn.github.io/tags/Python/"/>
    
      <category term="杂记" scheme="https://zicowarn.github.io/tags/%E6%9D%82%E8%AE%B0/"/>
    
      <category term="相似度" scheme="https://zicowarn.github.io/tags/%E7%9B%B8%E4%BC%BC%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>Python 杂记之 不同版本间剪切板代码兼容性问题</title>
    <link href="https://zicowarn.github.io/2018/12/20/0805-ma-compability-issue/"/>
    <id>https://zicowarn.github.io/2018/12/20/0805-ma-compability-issue/</id>
    <published>2018-12-20T00:11:08.000Z</published>
    <updated>2018-12-20T00:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>作者: Jim Wang 公众号: <a class="main-button-link" href="#wechat" rel="noopener">巴博萨船长</a></p><h2 id="剪切板的基本操作"><a href="#剪切板的基本操作" class="headerlink" title="剪切板的基本操作"></a>剪切板的基本操作</h2><p>在Python的实际应用中有时候会遇到对剪切板进行操作的问题。剪切板的基本操作需求如下：</p><ul><li>获取剪切板中的内容。</li><li>向剪切板中注入内容。</li><li>清除剪切板的内容。</li></ul><a id="more"></a><p>使用Python对剪切板进行操作，可以使用tkinter和ctypes这两个标准库。或者使用Qt或者wxpython这些第三方模块（库）来实现。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/LNbO7CDlxmad3eibCibvYHAE43LAlxR0KtSSXwcJAlficsqnvlLNnicHfJPN2C4VYBICeeVI71H81mkWvViaMdQ4KDw/640?wx_fmt=png" alt="img"></p><h2 id="使用ctypes标准库操作剪切板"><a href="#使用ctypes标准库操作剪切板" class="headerlink" title="使用ctypes标准库操作剪切板"></a>使用ctypes标准库操作剪切板</h2><p>使用tkinter标准库或者第三方的Qt或者wxpython，这些实现方式常常是用在在<strong>图形界面化</strong>的项目中的，比如结合按钮事件等。使用ctypes就可以直接在<strong>非图形化界面</strong>项目中实现对剪切板的操作。或者使用pyperclip第三方模块也可实现跨平台的普通项目中对剪切板的操作，基本实现代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">import</span> ctypes</span><br><span class="line"></span><br><span class="line">CF_TEXT = <span class="number">1</span></span><br><span class="line">kernel32 = ctypes.windll.kernel32</span><br><span class="line">user32 = ctypes.windll.user32</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">()</span>:</span></span><br><span class="line">    rts = <span class="string">""</span></span><br><span class="line">    user32.OpenClipboard(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> user32.IsClipboardFormatAvailable(CF_TEXT):</span><br><span class="line">        data = user32.GetClipboardData(CF_TEXT)</span><br><span class="line">        data_locked = kernel32.GlobalLock(data)</span><br><span class="line">        text = ctypes.c_char_p(data_locked)</span><br><span class="line">        print(text.value)</span><br><span class="line">        rts = text.value</span><br><span class="line">        kernel32.GlobalUnlock(data_locked)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'no text in clipboard'</span>)</span><br><span class="line">    user32.CloseClipboard()</span><br><span class="line">    <span class="keyword">return</span> rts</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set</span><span class="params">(text)</span>:</span></span><br><span class="line">    GMEM_DDESHARE = <span class="number">0x2000</span></span><br><span class="line">    user32.OpenClipboard(<span class="number">0</span>)</span><br><span class="line">    user32.EmptyClipboard()</span><br><span class="line">    hCd = ctypes.windll.kernel32.GlobalAlloc(GMEM_DDESHARE, len(bytes(text))+<span class="number">1</span>)</span><br><span class="line">    pchData = ctypes.windll.kernel32.GlobalLock(hCd)</span><br><span class="line">    ctypes.cdll.msvcrt.strcpy(ctypes.c_char_p(pchData), bytes(text))</span><br><span class="line">    kernel32.GlobalUnlock(hCd)</span><br><span class="line">    user32.SetClipboardData(CF_TEXT, hCd)</span><br><span class="line">    user32.CloseClipboard()</span><br></pre></td></tr></table></figure><p>上述代码中，比较难以理解的应该是GlobalLock和GlobalUnlock，如果有C++的开发背景应该很容易理解这两个函数。简单解释：</p><blockquote><p>GlobalLock()函数 说明：锁定内存中指定的内存块，并返回一个地址值，令其指向内存块的起始处。除非用 GlobalUnlock 函数将内存块解锁，否则地址会一直保持有效。Windows 为每个内存对象都维持着一个锁定计数。对这个函数的每次调用都应有一个对应的 GlobalUnlock 调用 返回值 Long，如成功，返回内存块的地址；如出错，或者这是一个已被丢弃的“可丢弃”内存块，则返回零。通常我们在编程的时候，给应用程序分配的内存都是可以移动的或者是可以丢弃的，这样能使有限的内存资源充分利用，所以，在某一个时候我们分配 的那块内存的地址是不确定的，因为他是可以移动的，所以得先锁定那块内存块，这儿应用程序需要调用API函数GlobalLock函数来锁定句柄。如下：lpMem=GlobalLock(hMem)（数据类型应该是指针类型）; 这样应用程序才能存取这块内存。</p></blockquote><h2 id="剪切板操作的兼容性问题"><a href="#剪切板操作的兼容性问题" class="headerlink" title="剪切板操作的兼容性问题"></a>剪切板操作的兼容性问题</h2><p>上述代码我在公司的项目中也有使用。但是自从公司决定将软件中内嵌的Python2.7升级到Python3.7之后，类似上述的代码就不能在继续运行了。经过调试之后，发现了问题所在，请看下面代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_clipboard_text</span><span class="params">()</span>:</span></span><br><span class="line">    user32.OpenClipboard(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> user32.IsClipboardFormatAvailable(CF_TEXT):</span><br><span class="line">        data = user32.GetClipboardData(CF_TEXT)</span><br><span class="line">        data_locked = kernel32.GlobalLock(data)</span><br><span class="line">        text = ctypes.c_char_p(data_locked)</span><br><span class="line">        value = text.value <span class="comment"># 问题所在位置。</span></span><br><span class="line">        kernel32.GlobalUnlock(data_locked)</span><br><span class="line">        <span class="keyword">return</span> value</span><br><span class="line">    user32.CloseClipboard()</span><br></pre></td></tr></table></figure><p>在上述代码中，在调试代码时，代码可以运行至带有注释的这一行的前一行。当试图尝试使用便利text时，程序就会出错，从而引发崩溃。可以肯定的是text变量并不为None，在一开始一直以为是锁定内存带来的问题。但是最后发现整个代码都有问题的。</p><p>在不断尝试之后，项目背景是，剪切板的中不会存在特殊字符或者宽字符。本着最少代码修改量就能解决问题的原则，以及“简单胜过复杂”的设计哲学。我们用下列代码解决了这部分代码对Python3的兼容。</p><p><strong>“Simple is better than complicated”</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">kernel32.GlobalLock.argtypes = [ctypes.c_void_p]</span><br><span class="line">kernel32.GlobalLock.restype = ctypes.c_void_p</span><br><span class="line">kernel32.GlobalUnlock.argtypes = [ctypes.c_void_p]</span><br><span class="line">user32.GetClipboardData.restype = ctypes.c_void_p</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_clipboard_text</span><span class="params">()</span>:</span></span><br><span class="line">    user32.OpenClipboard(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> user32.IsClipboardFormatAvailable(CF_TEXT):</span><br><span class="line">            data = user32.GetClipboardData(CF_TEXT)</span><br><span class="line">            data_locked = kernel32.GlobalLock(data)</span><br><span class="line">            text = ctypes.c_char_p(data_locked)</span><br><span class="line">            value = text.value</span><br><span class="line">            kernel32.GlobalUnlock(data_locked)</span><br><span class="line">            <span class="keyword">return</span> value</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        user32.CloseClipboard()</span><br></pre></td></tr></table></figure><p>在使用函数的时候，只要提前申明了函数参数的数据类型，和函数返回值的数据类型。就解决了兼容性问题。虽然解决了问题，但是总觉得有种知其然不知所以然的感觉。为什么Python2中不需要声明，而Python3中却需要。经过不断地查找，找到了下面的解决方案。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ctypes</span><br><span class="line"><span class="keyword">import</span> ctypes.wintypes <span class="keyword">as</span> w</span><br><span class="line"></span><br><span class="line">CF_UNICODETEXT = <span class="number">13</span></span><br><span class="line"></span><br><span class="line">u32 = ctypes.WinDLL(<span class="string">'user32'</span>)</span><br><span class="line">k32 = ctypes.WinDLL(<span class="string">'kernel32'</span>)</span><br><span class="line"></span><br><span class="line">OpenClipboard = u32.OpenClipboard</span><br><span class="line">OpenClipboard.argtypes = w.HWND,</span><br><span class="line">OpenClipboard.restype = w.BOOL</span><br><span class="line">GetClipboardData = u32.GetClipboardData</span><br><span class="line">GetClipboardData.argtypes = w.UINT,</span><br><span class="line">GetClipboardData.restype = w.HANDLE</span><br><span class="line">GlobalLock = k32.GlobalLock</span><br><span class="line">GlobalLock.argtypes = w.HGLOBAL,</span><br><span class="line">GlobalLock.restype = w.LPVOID</span><br><span class="line">GlobalUnlock = k32.GlobalUnlock</span><br><span class="line">GlobalUnlock.argtypes = w.HGLOBAL,</span><br><span class="line">GlobalUnlock.restype = w.BOOL</span><br><span class="line">CloseClipboard = u32.CloseClipboard</span><br><span class="line">CloseClipboard.argtypes = <span class="literal">None</span></span><br><span class="line">CloseClipboard.restype = w.BOOL</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_clipboard_text</span><span class="params">()</span>:</span></span><br><span class="line">    text = <span class="string">""</span></span><br><span class="line">    <span class="keyword">if</span> OpenClipboard(<span class="literal">None</span>):</span><br><span class="line">        h_clip_mem = GetClipboardData(CF_UNICODETEXT)</span><br><span class="line">        text = ctypes.wstring_at(GlobalLock(h_clip_mem))</span><br><span class="line">        GlobalUnlock(h_clip_mem)</span><br><span class="line">        CloseClipboard()</span><br><span class="line">    <span class="keyword">return</span> text</span><br><span class="line"></span><br><span class="line">print(get_clipboard_text())</span><br></pre></td></tr></table></figure><p>乍一看，很复杂，其实其实现过程和第一个解决方案相似，而且上述的代码够同时在Python2.x和Python3.x中完美运行，也同时支持ascii与unicode字符，算是一个完美的解决方案。</p><p>这个解决方案的提供者Mark Tolonen也解释道，由于Python3是64位的，如果我们在Python3.x的环境下使用原来在Python2.x中的代码。默认情况下，我们传递是句柄就是c_int(32bit)的，存储长度不够。超出会存在负值，导致代码不兼容的主要问题就在这儿。</p><p>kernel内核和windows的句柄都是32位的。如果在64位环境中使用这些句柄就会存在负值，为了避免这种情况发生，就应该将这些句柄扩展至64位。而且一些句柄实际上是内存的地址，例如HMODULE和HGLOBAL，以及GlobalLock的返回结果也应该得到扩展。总的来讲，在处理句柄和指针的时候总是声明参数argtypes和返回值restype，就可以避免硬编码实现细节和假设。</p><p>学无止境，总有高手，在这些高手的解释中也学习到了很多，了解一些问题出现的根本原因，和这些高手在面对这些问题时所思考的内容。然后学以致用，来提高自己。</p><p>参考目录：</p><p><strong>Stackflow：</strong><a href="https://stackoverflow.com/questions/46132401/read-text-from-clipboard-in-windows-using-ctypes" target="_blank" rel="noopener">https://stackoverflow.com/questions/46132401/read-text-from-clipboard-in-windows-using-ctypes</a></p><p><strong>CSDN：</strong><a href="https://blog.csdn.net/longxin5/article/details/83394388" target="_blank" rel="noopener">https://blog.csdn.net/longxin5/article/details/83394388</a></p><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">          版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，          转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。        </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者: Jim Wang 公众号: &lt;a class=&quot;main-button-link&quot; href=&quot;#wechat&quot; rel=&quot;noopener&quot;&gt;巴博萨船长&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;剪切板的基本操作&quot;&gt;&lt;a href=&quot;#剪切板的基本操作&quot; class=&quot;headerlink&quot; title=&quot;剪切板的基本操作&quot;&gt;&lt;/a&gt;剪切板的基本操作&lt;/h2&gt;&lt;p&gt;在Python的实际应用中有时候会遇到对剪切板进行操作的问题。剪切板的基本操作需求如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;获取剪切板中的内容。&lt;/li&gt;
&lt;li&gt;向剪切板中注入内容。&lt;/li&gt;
&lt;li&gt;清除剪切板的内容。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Python 相关 - 8. Python 杂记" scheme="https://zicowarn.github.io/categories/Python-%E7%9B%B8%E5%85%B3-8-Python-%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="https://zicowarn.github.io/tags/Python/"/>
    
      <category term="杂记" scheme="https://zicowarn.github.io/tags/%E6%9D%82%E8%AE%B0/"/>
    
      <category term="剪切板" scheme="https://zicowarn.github.io/tags/%E5%89%AA%E5%88%87%E6%9D%BF/"/>
    
      <category term="代码兼容" scheme="https://zicowarn.github.io/tags/%E4%BB%A3%E7%A0%81%E5%85%BC%E5%AE%B9/"/>
    
  </entry>
  
  <entry>
    <title>Python 杂记之 实现列表的自加和左移等操作</title>
    <link href="https://zicowarn.github.io/2018/12/15/0804-ma-list-leftadd-selfadd-op/"/>
    <id>https://zicowarn.github.io/2018/12/15/0804-ma-list-leftadd-selfadd-op/</id>
    <published>2018-12-15T00:11:08.000Z</published>
    <updated>2018-12-15T00:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>作者: Jim Wang 公众号: <a class="main-button-link" href="#wechat" rel="noopener">巴博萨船长</a></p><h2 id="列表与操作方法"><a href="#列表与操作方法" class="headerlink" title="列表与操作方法"></a>列表与操作方法</h2><p>列表<strong>list</strong>是Python语言中的标准数据类型，进一步讲list是一种可变的序列类型，不可变的有tuple和range（注：Python 3.x中xrange已经不存在了）。<strong>可变序列类型</strong>，<strong>可变</strong>就是长度可以改变，所含元素数值可以改变，元素数据类型可以改变；<strong>序列</strong>意指成员有序排列，可以通过索引访问元素。既然是序列类型，就一定可以迭代（for 循环），所以列表是<strong>可迭代</strong>的对象，请注意<strong>可迭代</strong>和<strong>迭代器</strong>的差异。</p><a id="more"></a><p>列表的常用操作包括，索引，切片，改变与排序。而这几种操作要属<strong>改变</strong>最多样。改变包括，一、<strong>长度改变</strong>，成员的<strong>添加</strong>（常用方法append，insert和extend）与<strong>删除</strong>（常用方法pop与remove）。二、<strong>数值改变</strong>，通过索引访问与重新赋值来实现。</p><h2 id="列表操作的延伸思考"><a href="#列表操作的延伸思考" class="headerlink" title="列表操作的延伸思考"></a>列表操作的延伸思考</h2><p>由于上一篇文章是与运算符相关，所以在准备文字的时候就思索，作为标准数据类型的列表，能和它组合使用的运算符都有什么呢？今天我就和大家一起总结，共同学习一下。</p><p>一般情况下，Python中列表只能与➕操作符组合使用，前提是➕号左右都是序列类型。可能别的教程里面规定➕左右都应该是一样的列表类型。我们今天扩展一下，定义：➕号左右都是序列类型。</p><ul><li>当加号➕右侧为列表，或者range()时，代码表现符合正常预期，请参看下面例子：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>m2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m3 = [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m2 + m3</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m2 + range(<span class="number">5</span>, <span class="number">9</span>)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ss = range(<span class="number">5</span>, <span class="number">9</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(ss)</span><br><span class="line">&lt;type <span class="string">'list'</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m2 + (<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: can only concatenate list (<span class="keyword">not</span> <span class="string">"tuple"</span>) to list</span><br></pre></td></tr></table></figure><p>List作为唯一的可变序列类型，而且与加号左侧数据类型一直，它的加法运算正常且容易理解。range， str与tuple是不可变的数据类型，理论上与列表相加时肯定会出错的，但是在Python 2.x 中却没有问题，结果如上。其原因为: Python 2.x 中range返回的是一个列表。而在Python 3.x 中这样写就会引发异常，参考如下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>m2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m2 + range(<span class="number">5</span>, <span class="number">9</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: can only concatenate list (<span class="keyword">not</span> <span class="string">"range"</span>) to list</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ss = range(<span class="number">5</span>, <span class="number">9</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(ss)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">range</span>'&gt;</span></span><br></pre></td></tr></table></figure><p>因为Python 3.x 中返回的是一个真正的range类实例，是一个不可变的序列类型。</p><ul><li>当加号➕右侧为其它序列类型，即不可变序列类型，如 tuple 或 str 时，请参看下面例子：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>m2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m2 += <span class="string">"hello"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m2</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="string">'h'</span>, <span class="string">'e'</span>, <span class="string">'l'</span>, <span class="string">'l'</span>, <span class="string">'o'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m2 = m2 + <span class="string">"hello"</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: can only concatenate list (<span class="keyword">not</span> <span class="string">"str"</span>) to list</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m2 += (<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m2</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m2 = m2 + (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: can only concatenate list (<span class="keyword">not</span> <span class="string">"tuple"</span>) to list</span><br></pre></td></tr></table></figure><p>理论上肯定不行的，毕竟左右两侧的数据类型不同。但是总会有些意外，有些惊喜。虽然在<strong>运算符</strong>的章节中，我们了解到自加操作符与加法和赋值的组合等效，即 a += 1 等效于 a = a + 1。但是参照上方的例子，我们发现应该在解析运行的时候。两种数据操作方式还是有些不一样的，比如在参与的数据有列表是，<strong>自加</strong>时，因为列表（等号左侧）为可变对象，原则上仅需要本地对象（这里指m2）进行修改，不需要产生新的对象。那么在修改的时候解释器会讲右侧的对象尝试数据类型转换，上述的例子中讲字符穿转换为字符列表，将tuple转换为列表，进而对本地m2对象进行修改，所以我们就实现了所有<strong>序列类型</strong>的加法操作，注意非序列的数据类型不行，是不是有点神奇。</p><h2 id="进一步延伸思考"><a href="#进一步延伸思考" class="headerlink" title="进一步延伸思考"></a>进一步延伸思考</h2><p>上一节，我们通过总结可知：1. 列表的加法操作，并不是全效的加法，因为对数据只能对序列操作，那么如果仅需要添加一个成员的时候，加法操作就不再适用。2. 列表没有减法操作。那么有解决方法吗？了解到Python<strong>万物皆对象</strong>（必定不单身）。那么如果继承列表基本类，创建自有字类，通过重写方法就是实现Python的全效加法于减法。有想法之后就实现一下，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyList</span><span class="params">(list)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__add__</span><span class="params">(self, obj)</span>:</span></span><br><span class="line">        <span class="comment">#Function is called by + command</span></span><br><span class="line">        self.addObj(obj)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__sub__</span><span class="params">(self, obj)</span>:</span></span><br><span class="line">        <span class="comment">#Function is called by - command</span></span><br><span class="line">        <span class="keyword">if</span> isinstance(obj, list) <span class="keyword">or</span> isinstance(obj, tuple):</span><br><span class="line">        <span class="comment">#if isinstance(obj, list) or isinstance(obj, tuple) or isinstance(obj, range): # Python 3.x</span></span><br><span class="line">            <span class="keyword">for</span> o <span class="keyword">in</span> obj: </span><br><span class="line">                <span class="keyword">return</span> self.__class__([item <span class="keyword">for</span> item <span class="keyword">in</span> self <span class="keyword">if</span> item <span class="keyword">not</span> <span class="keyword">in</span> obj])</span><br><span class="line">        <span class="keyword">else</span>: </span><br><span class="line">            <span class="keyword">return</span> self.__class__([item <span class="keyword">for</span> item <span class="keyword">in</span> self <span class="keyword">if</span> item != obj])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__lshift__</span><span class="params">(self, obj)</span>:</span></span><br><span class="line">        <span class="comment">#Function is called by &lt;&lt; command</span></span><br><span class="line">        self += obj</span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iadd__</span><span class="params">(self, obj)</span>:</span></span><br><span class="line">        <span class="comment">#Function is called by += command</span></span><br><span class="line">        <span class="keyword">if</span> isinstance(obj, list) <span class="keyword">or</span> isinstance(obj, tuple):</span><br><span class="line">        <span class="comment">#if isinstance(obj, list) or isinstance(obj, tuple) or isinstance(obj, range): # Python 3.x</span></span><br><span class="line">            <span class="keyword">for</span> o <span class="keyword">in</span> obj: </span><br><span class="line">                self.addObj(o)</span><br><span class="line">        <span class="keyword">else</span>: </span><br><span class="line">            self.addObj(obj)</span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addObj</span><span class="params">(self, obj)</span>:</span></span><br><span class="line">        self.append(obj)</span><br></pre></td></tr></table></figure><p>在使用需要注意，由于Python默认的列表类为list，传统的列表赋值方式只能产生list的实例对象，那么如果初始化玩MyList类的实例后，再为实例变量使用传统方式赋值时，那么就会产生新的对象，而且新类的<strong>属性</strong>与<strong>方法</strong>将丢失。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> test <span class="keyword">import</span> MyList</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml = MyList([<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(ml)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">test</span>.<span class="title">MyList</span>'&gt;</span></span><br><span class="line">&gt;&gt;&gt; ml = MyList()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(ml)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">test</span>.<span class="title">MyList</span>'&gt;</span></span><br><span class="line">&gt;&gt;&gt; ml = ["a", "b", "c"]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(ml)</span><br><span class="line">&lt;type <span class="string">'list'</span>&gt;</span><br></pre></td></tr></table></figure><p>实际使用结果如下，因为在加法运算时，我们返回类实例本身，所以列表的值在做加法是会发生变化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml = MyList([<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml + [<span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, [<span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml = MyList([<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml + [<span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, [<span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml = MyList([<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml += [<span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml = MyList([<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml + <span class="string">"e"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'e'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml + <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'e'</span>, <span class="number">1</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml - <span class="number">1</span></span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'e'</span>]  <span class="comment"># 新的列表对象</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'e'</span>, <span class="number">1</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml - [<span class="string">'c'</span>, <span class="number">1</span>]</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'e'</span>] <span class="comment"># 新的列表对象</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'e'</span>, <span class="number">1</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml &lt;&lt; <span class="string">"e"</span></span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'e'</span>, <span class="number">1</span>, <span class="string">'e'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ml &lt;&lt; [<span class="string">'d'</span>, <span class="string">'f'</span>]</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'e'</span>, <span class="number">1</span>, <span class="string">'e'</span>, <span class="string">'d'</span>, <span class="string">'f'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tt = ml - [<span class="string">'c'</span>, <span class="number">1</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(tt)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">test</span>.<span class="title">MyList</span>'&gt;</span></span><br></pre></td></tr></table></figure><p>而在做减法运算时，我们创建并返回一个新的类实例，所以减数，即原始列表值不发生改变，请参见上述代码中带注释的内容。有心的同学可能也发现了，我们重写__iadd__()， 实现了我们预期的自加，重写__add__()， 实现了我们预期的加法，重写__sub__()， 实现了我们预期的列表减法运算和重写__lshift__()， 实现了我们预期的列表的左移运算，怎么样是不是也有一点成就感。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>在之前的文章中我们介绍了如何动态重写类方法，那么我们的上述的方法能不能也动态地写入基类list中，使其所有实例都有新的方法呢？感兴趣的童鞋可以自己可以试一下。我把结果写出来, 就不再举例分析。<strong>是不行的</strong>，由于基类是由别的语言实现的属于built-in类型，虽然也是动态的类，但是却因为别的语言限制了访问，所以其<em>\</em>iadd__()方法，在实例中是<strong>仅可读的</strong>。所以就没办法实现list基类，这些方法的动态绑定和重写。</p><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">          版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，          转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。        </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者: Jim Wang 公众号: &lt;a class=&quot;main-button-link&quot; href=&quot;#wechat&quot; rel=&quot;noopener&quot;&gt;巴博萨船长&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;列表与操作方法&quot;&gt;&lt;a href=&quot;#列表与操作方法&quot; class=&quot;headerlink&quot; title=&quot;列表与操作方法&quot;&gt;&lt;/a&gt;列表与操作方法&lt;/h2&gt;&lt;p&gt;列表&lt;strong&gt;list&lt;/strong&gt;是Python语言中的标准数据类型，进一步讲list是一种可变的序列类型，不可变的有tuple和range（注：Python 3.x中xrange已经不存在了）。&lt;strong&gt;可变序列类型&lt;/strong&gt;，&lt;strong&gt;可变&lt;/strong&gt;就是长度可以改变，所含元素数值可以改变，元素数据类型可以改变；&lt;strong&gt;序列&lt;/strong&gt;意指成员有序排列，可以通过索引访问元素。既然是序列类型，就一定可以迭代（for 循环），所以列表是&lt;strong&gt;可迭代&lt;/strong&gt;的对象，请注意&lt;strong&gt;可迭代&lt;/strong&gt;和&lt;strong&gt;迭代器&lt;/strong&gt;的差异。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python 相关 - 8. Python 杂记" scheme="https://zicowarn.github.io/categories/Python-%E7%9B%B8%E5%85%B3-8-Python-%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="https://zicowarn.github.io/tags/Python/"/>
    
      <category term="杂记" scheme="https://zicowarn.github.io/tags/%E6%9D%82%E8%AE%B0/"/>
    
      <category term="自加" scheme="https://zicowarn.github.io/tags/%E8%87%AA%E5%8A%A0/"/>
    
  </entry>
  
  <entry>
    <title>Python 杂记之 如何动态重写类方法</title>
    <link href="https://zicowarn.github.io/2018/12/10/0803-ma-dynamic-classmethod-override/"/>
    <id>https://zicowarn.github.io/2018/12/10/0803-ma-dynamic-classmethod-override/</id>
    <published>2018-12-10T00:11:08.000Z</published>
    <updated>2018-12-10T00:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>作者: Jim Wang 公众号: <a class="main-button-link" href="#wechat" rel="noopener">巴博萨船长</a></p><h2 id="Python-是动态的编程语言"><a href="#Python-是动态的编程语言" class="headerlink" title="Python 是动态的编程语言"></a>Python 是动态的编程语言</h2><p> 在自己有关Python的第一篇文章中就介绍了Python的特性与优势，在文章中也介绍了其是一种动态的编程语言。在这里我再简单在当前文章中介绍一下，如下：</p> <a id="more"></a><blockquote><p>能够在运行时修改自身程序结构的语言，就属于动态语言。那怎样才算是“运行时修改自身程序结构”捏？比如下面这几个例子都 算：在运行时给某个类增加成员函数及成员变量；在运行时改变某个类的父类；在运行时创建出某个函数.。 Python是可以实现动态类的创建类（在任意代码位置，符合正确的书写格式），或者给类增加删除属性。因为类也是对象，你可以在运行时动态的创建它们，就像其他任何对象一样。比如，你可以在函数中创建类，使用class关键字即可。” 既然是一种动态的高级语言，那么就意味着，其是在运行时就能改变其结构的编程语言。这在调试代码时，可以动态实时地改变变量，重写函数等，比起传统的C++与广泛运用的Java具有很强的优势。所叙述的结构包括：函数、变量与对象。已有的函数或方法可以被删除或是其他结构上的变化。</p></blockquote><h2 id="任务描述"><a href="#任务描述" class="headerlink" title="任务描述"></a>任务描述</h2><p> 最近在工作中遇到了一个问题：现有一Wxpython的Widget类，即继承TextCtrl的自定义类，该类有一个实例方法，在这暂且就称作method_x吧，整个项目都在使用该实例方法，虽然其内在调用关系十分复杂，这也是我一直诟病我们项目代码的地方，但其一直表现良好。我的需求是：在不改变这个类的，也不影响其他代码的的情况下，重写或者重新定义这个方法。这些只并且仅对特定实例有效。</p><p> 首先我能想到的就是继承该类，进而得到一个子类，在子类里面仅Override覆盖该实例方法。这应该是最正常的方法，或者大部分人能想到的方法。可是我又不希望这样做，这样在后期维护的该类的时候还要为子类针对一下改变做出调整。而且在文章中还要import一下。那么有没有别的方法呢？考虑到Python是动态语言，动态调整函数和变量都是自己应用过的，那么这样的动态语言，能不能动态地修改（重写）一个类的实例方法呢？抱着这样的想法，我查阅了一些网页，成功实现了这样的想法，也在完成该任务，解决该问题的过程中更深层的理解了Python这种语言的动态特性。</p><p> 最终我归纳出三种方法，可以实现类的实例方法的动态重写，在此我针对每种方法列出范例代码，并给出运行结果，并对这三种方法进行比较说明，本人并非专家，有见解不足之处，也希望各位高手留言赐教。</p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p> 使用函数的_<em>get()__内置方法，也是一个描述符，其本质是一个新式类, 在这个新式类中, 至少实现了<em>\</em>_get()_\</em>, __set()__, <em>\</em>delete()__中的一个, 这也被称为描述符协议，其中__get()<em>\</em>:在调用一个属性时被触发。 __get__(self, instance, owner) 定义当描述器的值被取得的时候的行为， instance 是拥有者对象的一个实例。 owner 是拥有者类本身。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*- coding: utf-8 -*-</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>:</span>    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">func1</span><span class="params">(self)</span>:</span>        </span><br><span class="line">        <span class="keyword">print</span> <span class="string">"I am old func1"</span>        </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_func1</span><span class="params">(self)</span>:</span>        </span><br><span class="line">    <span class="keyword">print</span> <span class="string">"I am new func1"</span></span><br><span class="line"></span><br><span class="line">objTest1 = Test()</span><br><span class="line"><span class="keyword">print</span> id(new_func1)</span><br><span class="line">objTest2 = Test()</span><br><span class="line">objTest1.func1()</span><br><span class="line">objTest2.func1() </span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅对该实例重写这个方法</span></span><br><span class="line"><span class="keyword">print</span> new_func1.__get__(objTest1, Test)</span><br><span class="line">objTest1.func1 = new_func1.__get__(objTest1, Test)</span><br><span class="line">objTest1.func1()</span><br><span class="line">objTest2.func1()</span><br></pre></td></tr></table></figure><p>代码输出如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">C:\\&gt;python test.py</span><br><span class="line">55131384</span><br><span class="line">I am old func1</span><br><span class="line">Iam old func1</span><br><span class="line">&lt;bound method Test.new_func1 of &lt;__main__.Test instance at 0x0000000002F60C88&gt;&gt;</span><br><span class="line">I am new func1</span><br><span class="line">I am old func1</span><br></pre></td></tr></table></figure><p>那么现在我们来尝试来理解一下这个方法的原理，上文说到__get()__是一个描述符，或称描述器，描述器分为两种，一共是资料描述器（data-descriptor), 一种是非资料描述器(non-data descriptor)。我们在这里使用的是非资料描述器， __get__(self, instance, owner) ，该方法的第二个参数是可选的（非必需）。 上面代码在使用该描述器的时候，就是将函数new_func1()绑定在类Test的实例objTest1上，而等号前面的是objTest1.func1 意味这，要将新绑定的实例方法覆盖到func1上，进而在再次调用实例方法func1()的时候，其实是在调用new_func1()。 该方法很有好处，可以理解为”几乎”是实现了一个方法的覆盖，你可以在新定义的方法中使用关键字self。 但是不能使用关键字super，即不能访问类的父类。</p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>使用Python的偏函数，Python的偏函数，与数学意义上的偏函数不同。其偏函数的思想可以理解为绑定了一部分参数的函数，其作用就是减少传入函数，使函数更短，更简洁。在这儿使用偏函数重写实例方法，目的就在与保证第一个参数self的传入。也就是partial()的第二个参数。把new_func1()的第一个参数固定了下来。保证重写的实例方法能访问self关键字。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> partial</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.m = <span class="string">"message"</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">func1</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">"I am old func1"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_func1</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> self.m</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"I am new func1"</span></span><br><span class="line"></span><br><span class="line">objTest1 = Test()</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> id(new_func1)</span><br><span class="line"></span><br><span class="line">objTest2 = Test()</span><br><span class="line"></span><br><span class="line">objTest1.func1()</span><br><span class="line"></span><br><span class="line">objTest2.func1() </span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅对该实例重写这个方法</span></span><br><span class="line"><span class="comment">#print new_func1.__get__(objTest1, Test)</span></span><br><span class="line"><span class="comment">#objTest1.func1 = new_func1.__get__(objTest1, Test)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> id(objTest1.func1)</span><br><span class="line">objTest1.func1 = partial(new_func1, objTest1)</span><br><span class="line"><span class="keyword">print</span> id(objTest1.func1)</span><br><span class="line"></span><br><span class="line">objTest1.func1()</span><br><span class="line"></span><br><span class="line">objTest2.func1()</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">C:\\&gt;python test.py</span><br><span class="line">52313336</span><br><span class="line">I am old func1</span><br><span class="line">I am old func1</span><br><span class="line">47500528</span><br><span class="line">47692840</span><br><span class="line">message</span><br><span class="line">I am new func1</span><br><span class="line">I am old func1</span><br></pre></td></tr></table></figure><p>该种方法也简单有效，但是也要从functool中引入partial。也算是一种有效的解决方案。但是其也不能访问关键字super。输出的结果也显示，这样的改变只对特定实例有效。我个人觉得这也是一个简单容易理解的方法，相比较方法一而言，其原理理解起来也并不困难。也不需要更深层次的Python理论知识。</p><h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><p>使用types包中的MethodType 函数。这个方法理解起来就相对更为简单。MethodType可以将一个函数绑定在特定的实例，或者类上。而且该类或者实例，可以没有方法，如果有相同名字的方法，就视为重写。如果绑定在实例上，则完全覆盖其实例的方法。如果绑定在类上，则对所有实例有效。两个绑定方法的区别就在与函数的第二个参数上。 MethodType把方法绑定在类实例上时，每个实例有自己单独的指向区域，互不干扰。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> types</span><br><span class="line"><span class="comment">#from functools import partial</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.m = <span class="string">"message"</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">func1</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">"I am old func1"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_func1</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> self.m</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"I am new func1"</span></span><br><span class="line"></span><br><span class="line">objTest1 = Test()</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> id(new_func1)</span><br><span class="line"></span><br><span class="line">objTest2 = Test()</span><br><span class="line"></span><br><span class="line">objTest1.func1()</span><br><span class="line"></span><br><span class="line">objTest2.func1() </span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> id(objTest1.func1)</span><br><span class="line"><span class="comment"># 仅对该实例重写这个方法</span></span><br><span class="line"><span class="comment">#print new_func1.__get__(objTest1, Test)</span></span><br><span class="line"><span class="comment">#objTest1.func1 = new_func1.__get__(objTest1, Test)</span></span><br><span class="line"><span class="comment">#objTest1.func1 = partial(new_func1, objTest1)</span></span><br><span class="line"></span><br><span class="line">objTest1.func1 = types.MethodType(new_func1, objTest1)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> id(objTest1.func1)</span><br><span class="line"></span><br><span class="line">objTest1.func1()</span><br><span class="line"></span><br><span class="line">objTest2.func1()</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">C:\\&gt;python test.py</span><br><span class="line">60046584</span><br><span class="line">I am old func1</span><br><span class="line">I am old func1</span><br><span class="line">55233776</span><br><span class="line">55233776</span><br><span class="line">message</span><br><span class="line">I am new func1</span><br><span class="line">I am old func1</span><br></pre></td></tr></table></figure><p>从上面的输出结果来看，时候该方法重写实例方法的时候，实例方法的id也没有改变，这是完全意义上方法重写，使用该方法重写类的实例方法，可以访问类的所有关键字。该方法绑定类方法时有一个很有趣区别，因为并不是当前任务需要，这些内容，我们以后在别的文章中进行讨论。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>三种方法以三个不同方向，三种不同的Python背景知识诠释了如何动态的重写（或绑定）一个实例的方法。在分析利弊与结合自己的使用需求，我个人最终选择了方法三, 每种方法都有自己的优缺点，比如方法一就不需要引入别的Python模块。但是至于那个方法是最优的解决方法，那应该是仁者见仁智者见智。这样的经历也是在自己在解决问题的过程中常常经历的。不断地思考探究，也能扎实自己的理论知识，向大拿高手学习的过程中，也为自己在以后遇见问题是，扩展了思考方向。让自己不断拷问自己，同样的需求是不是还有别的解决方案。然后探究，学习，尝试，掌握。 上述内容实自己总结归纳的，总有不足之处，望见谅并指正。</p><p>参考目录：</p><p><strong>Stackoverflow：</strong> <a href="https://stackoverflow.com/questions/394770/override-a-method-at-instance-level" target="_blank" rel="noopener">https://stackoverflow.com/questions/394770/override-a-method-at-instance-level</a></p><p><strong>CSDN Blog:</strong> [<a href="https://blog.csdn.net/yuanyangsdo/article/details/60776612]" target="_blank" rel="noopener">https://blog.csdn.net/yuanyangsdo/article/details/60776612]</a>(</p><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">          版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，          转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。        </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者: Jim Wang 公众号: &lt;a class=&quot;main-button-link&quot; href=&quot;#wechat&quot; rel=&quot;noopener&quot;&gt;巴博萨船长&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Python-是动态的编程语言&quot;&gt;&lt;a href=&quot;#Python-是动态的编程语言&quot; class=&quot;headerlink&quot; title=&quot;Python 是动态的编程语言&quot;&gt;&lt;/a&gt;Python 是动态的编程语言&lt;/h2&gt;&lt;p&gt; 在自己有关Python的第一篇文章中就介绍了Python的特性与优势，在文章中也介绍了其是一种动态的编程语言。在这里我再简单在当前文章中介绍一下，如下：&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python 相关 - 8. Python 杂记" scheme="https://zicowarn.github.io/categories/Python-%E7%9B%B8%E5%85%B3-8-Python-%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="https://zicowarn.github.io/tags/Python/"/>
    
      <category term="杂记" scheme="https://zicowarn.github.io/tags/%E6%9D%82%E8%AE%B0/"/>
    
      <category term="类方法" scheme="https://zicowarn.github.io/tags/%E7%B1%BB%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Python 杂记之 文件扩展名的区别</title>
    <link href="https://zicowarn.github.io/2018/12/05/0802-ma-file-extension/"/>
    <id>https://zicowarn.github.io/2018/12/05/0802-ma-file-extension/</id>
    <published>2018-12-05T00:11:08.000Z</published>
    <updated>2018-12-05T00:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>作者: Jim Wang 公众号: <a class="main-button-link" href="#wechat" rel="noopener">巴博萨船长</a></p><p>虽然Python简单并且容易部署，平时开发时，除了常见的py和pyc文件后缀以外，其实python还有一些别的文件扩展名。我们这篇文章就归纳总结一下所有的与python相关的文件扩展名filename extension（又称后缀名）与各种文件扩展名的文件是如何产生，每种文件文件扩展名的作用。</p><a id="more"></a><h2 id="与Python有关扩展名"><a href="#与Python有关扩展名" class="headerlink" title="与Python有关扩展名"></a><strong>与Python有关扩展名</strong></h2><ul><li><strong>.py</strong> - 最基本的文件扩展名</li><li><strong>.py3</strong> - (极其少见) Python3 源码文件扩展名. Python3 的正式源码后缀名也为”.py” 不是 “.py3”, 但py3也曾在一些地方出现。</li><li><strong>.pyc</strong> - 源码编译过的文件的扩展名 (字节码)。</li><li><strong>.pyo</strong> - 与pyc一样也是编译过的文件的文件扩展名。优化编译后的程序（相比于.pyc文件更小），也可以提高加载速度。对于嵌入式系统，它可将所需模块编译成.pyo文件以减少容量需求。</li><li><strong>.pyw</strong> - 和py相似，是源码扩展名，跟py扩展名的区别是在windows下双击pyw扩展名的源码会调用pythonw.exe执行源码，这种执行方式不会有命令行窗口，用于GUI程序发布时不需要看到控制台信息的情况。linux环境中，pyw和pyc没有区别。</li><li><strong>.pyx</strong> - Cython 源码，与C/C++源码.c/.cpp相似，不像 Python 语言可直接解释使用的 .py 文件，.pyx 文件必须先被编译成 .c 文件，再编译成 .pyd (Windows 平台) 或 .so (Linux 平台) 文件，才可作为模块 import 导入使用。</li><li><strong>.pyd</strong> - pyd并非从python程序生成，而是其他语言写成的可以被python调用的扩展，例如C++写的（Windows平台dll，Linux 平台.so）动态连接库供python调用。</li><li><strong>.pxd</strong> - Cython 源码头文件，与C/C++源码.h相似。pxd 文件中有 Cython 模块要包含的 Cython 声明 (或代码段)。.pxd 文件可共享外部 C 语言声明，也能包含 C 编译器内联函数。.pxd 文件还可为 .pyx 文件模块提供 Cython 接口，以便其它 Cython 模块可使用比 Python 更高效的协议与之进行通信。可用 cimport 关键字将 .pxd 文件导入 .pyx 模块文件中。</li><li><strong>.pxi</strong> - MyPy存根。</li><li><strong>.pyi</strong> - 存根文件，替代.pxi。 (参考：PEP 484)，如果想在Python编译时实现类型检查，需要用MyPy。 MyPy包含生成.pyi文件的stubgen.py工具。</li><li><strong>.pyz</strong> - Python脚本归档<strong>（参考：PEP 441)</strong>（这是一个包含标准Python脚本头之后的二进制形式的压缩Python脚本（ZIP）的脚本）</li><li><strong>.pywz</strong> - 用于MS-Windows的Python脚本归档<strong>（**</strong>参考：PEP 441)**，如上.pyz。</li><li><strong>.py[cod]</strong> - 版本管理工具Git的忽略文件.gitignore中的通配符，表示需要忽略的文件可能是.pyc，.pyo或.pyd。</li><li><strong>.rpy</strong>- 包含应用程序或框架特定功能的RPython脚本或Python脚本</li><li><strong>.pyde</strong> - 处理使用的Python脚本</li><li><strong>.pyp</strong> - Py4D Python插件</li><li><strong>.pyt</strong> - Python 工具箱 (.pyt) 只是一个基于 ASCII 的文件，该文件定义了工具箱和一个或多个工具。<strong>（参**</strong>考：ArcGIS)**</li></ul><h2 id="扩展名相互关系"><a href="#扩展名相互关系" class="headerlink" title="扩展名相互关系"></a><strong>扩展名相互关系</strong></h2><p>大部分情况下，我们创建的Python脚本都是以.py为文件扩展名。py文件可以通过python命令或者自己写的py脚本进行编译成pyc。使用命令的方法如下，在cmd输入以下内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python -m py_compile &#x2F;path&#x2F;to&#x2F;mycode.py #若批量处理.py文件</span><br><span class="line">                                        #则替换为&#x2F;path&#x2F;to&#x2F;&#123;需要生成.pyc的文件1,文件2,...&#125;.py</span><br><span class="line">                                        #或者&#x2F;path&#x2F;to&#x2F;</span><br></pre></td></tr></table></figure><p>也可以在python文件中实现上述过程。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对于文件                                                      </span></span><br><span class="line"><span class="keyword">import</span> py_compile  </span><br><span class="line">py_compile.compile(<span class="string">r'/path/to/mycode.py'</span>) <span class="comment">#.py文件             </span></span><br><span class="line"><span class="comment">#此处尽可能使用raw字符串，从而避免转义的麻烦。                        </span></span><br><span class="line"><span class="comment">#比如，这里不加“r”的话，你就得对斜杠进行转义  #对于文件夹                                                     </span></span><br><span class="line"><span class="keyword">import</span> compileall                                            </span><br><span class="line">compileall.compile_dir(<span class="string">"mylib"</span>, force=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>当然如果希望生成.pyo，则可以使用如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -O -m py_compile &#x2F;path&#x2F;to&#x2F;mycode.py #文件或者目录</span><br></pre></td></tr></table></figure><blockquote><p>-O选项，将.pyc文件优化为.pyo文件，而不是将.py 文件优化编译为.pyo文件。优化编译后的文件略微小于.pyc文件， 减少储存的需求。</p></blockquote><p>编译过后的字节码文件.pyc可以反编译成.py文件。反编译软件叫Easy Python Decompiler，可以从网上自己下载，该工具很容易上手，可以反编译一个文件也可以是文件夹。</p><p>虽然编译过后的二进制的字节码可以被反编译。但是如果你不希望自己的代码被别人直接读取，那么可以将字节码.pyc文件打包并公布。虽然与Python的开源精神不相符，但是也算是折中的安全机制。但是值得注意的是：.pyc文件与Python的版本有依赖。即，如果你用Python X编译的pyc文件不能再Python Y中使用，这里的X，Y为代指某些版本，无特定意义。如果强制加载将会引发ImportError异常，异常关键字为Bad magic Number。</p><p>下列是部分版本的Magic Number，全部列表请（参考：<strong>Magic_Nr</strong>)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">2.5b3: 62111</span><br><span class="line">2.5c1: 62121</span><br><span class="line">2.5c2: 62131</span><br><span class="line">2.6a0: 62151</span><br><span class="line">2.6a1: 62161</span><br><span class="line">2.7a0: 62171</span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a><strong>小结</strong></h2><p>Python 3.x 的编译过程是与Python2.x 有区别的，Python 3.x 编译的pyc的时候，会在当前目录里生成一个名为<strong>pycache</strong>的文件夹，为什么会存在该文件夹？Python解释器会将 <em>.py 脚本文件进行编译，并将编译结果保存到<strong>pycache</strong>目录中。下次再执行时，如果解释器发现某个</em> .py 脚本没有修改过，就会跳过编译这一步，直接运行以前生成的保存在 <strong>pycache</strong>文件夹里的 *.pyc 文件。这样就可以大大缩短项目运行前的准备时间；如果你只需执行一个小工程，没关系 忽略这个文件夹就行。而此时你打包pyc的时候就会发现该文件不能正常地被加载，会提示一些错误，常见的错误是解释器和文件路径不匹配。</p><p>为了避免上述的问题，我们可以在编译的时候输入特定的参数，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m compileall -b test3</span><br></pre></td></tr></table></figure><p>选项-b，指定编译pyc文件的输出到它们的原始位置。（即与Python2中相同）。</p><p>这篇文章我们不过多讨论如何生成Pyd文件，和使用这样的文件，该部分内容，我将在以后的关于在python中使用C/C++代码的文章中详细解释。上述内容是自己在Python应用中遇到过的问题，总有不足之处，望见谅并指正。</p><p>参考目录：</p><p><strong>PEP：441：</strong><a href="https://www.python.org/dev/peps/pep-0484/#stub-files" target="_blank" rel="noopener">https://www.python.org/dev/peps/pep-0484/#stub-files</a></p><p><strong>PEP：441：</strong><a href="https://www.python.org/dev/peps/pep-0441/" target="_blank" rel="noopener">https://www.python.org/dev/peps/pep-0441/</a></p><p><strong>ERSI ArcGIS：</strong><a href="http://desktop.arcgis.com/zh-cn/arcmap/10.3/analyze/creating-tools/a-quick-tour-of-python-toolboxes.htm" target="_blank" rel="noopener">http://desktop.arcgis.com/zh-cn/arcmap/10.3/analyze/creating-tools/a-quick-tour-of-python-toolboxes.htm</a></p><p><strong>Magic_Nr:</strong> <a href="https://github.com/google/pytype/blob/master/pytype/pyc/" target="_blank" rel="noopener">https://github.com/google/pytype/blob/master/pytype/pyc/</a> magic.py</p><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">          版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，          转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。        </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者: Jim Wang 公众号: &lt;a class=&quot;main-button-link&quot; href=&quot;#wechat&quot; rel=&quot;noopener&quot;&gt;巴博萨船长&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;虽然Python简单并且容易部署，平时开发时，除了常见的py和pyc文件后缀以外，其实python还有一些别的文件扩展名。我们这篇文章就归纳总结一下所有的与python相关的文件扩展名filename extension（又称后缀名）与各种文件扩展名的文件是如何产生，每种文件文件扩展名的作用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python 相关 - 8. Python 杂记" scheme="https://zicowarn.github.io/categories/Python-%E7%9B%B8%E5%85%B3-8-Python-%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="https://zicowarn.github.io/tags/Python/"/>
    
      <category term="杂记" scheme="https://zicowarn.github.io/tags/%E6%9D%82%E8%AE%B0/"/>
    
      <category term="文件扩展名" scheme="https://zicowarn.github.io/tags/%E6%96%87%E4%BB%B6%E6%89%A9%E5%B1%95%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>Python 杂记之 Python不认识0.1</title>
    <link href="https://zicowarn.github.io/2018/12/01/0801-ma-zeropointone/"/>
    <id>https://zicowarn.github.io/2018/12/01/0801-ma-zeropointone/</id>
    <published>2018-12-01T00:11:08.000Z</published>
    <updated>2018-12-01T00:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>作者: Jim Wang 公众号: <a class="main-button-link" href="#wechat" rel="noopener">巴博萨船长</a></p><p>在计算机编程的过程中，常常会涉及到浮点数（小数）的算术运算。稍加留意就会发现，算术运算的结果时常是不正确的。如果程序中有条件语句if加逻辑判断来控制程序执行，由于判断结果也不符合预期，程序就会流向错误的节点。经典例子就是0.1的10次求和与1进行逻辑判断得出的结果为False，遇见相似的问题会把自己急出一身汗，却也弄不个所以然来。</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span></span><br><span class="line"><span class="number">0.9999999999999999</span></span><br></pre></td></tr></table></figure><h2 id="为什么Pyhon不认识0-1"><a href="#为什么Pyhon不认识0-1" class="headerlink" title="为什么Pyhon不认识0.1"></a><strong>为什么Pyhon不认识0.1</strong></h2><p>通过上面的结果，可以大胆假设：<strong>其实Python不能正确理解0.1，因为若可以，结果就不会出问题</strong>。那么Python是不是不认识0.1呢？这是不是Python 这种编程语言的Bug（错误）？若不注意，在编程时会出现什么样的问题？出现这类问题的根本原因在哪？如何才能避免此类问题的出现呢？ 希望下面的内容能不能解决上述的疑问。</p><p>首先，咱们看看浮点数在计算机里如何表示。先举个栗子，例如，小数(0.125)10，在十进制中其值等于1/10 + 2/100 + 5/1000 的值，这都很容易理解。如果将其转化为二进制小数则为(0.001)2， 是0/2 + 0/4 + 1/8.。的值，有点难懂是吧，可以参考下面的运算过程。 注意，两者在数值上相等，区别为：前者为十进制小数，后者为二进制小数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">a. 十进制小数 to 二进制小数的方法：<span class="string">"乘2取正, 顺序输出"</span>，即乘<span class="number">2</span>取整，余数继续</span><br><span class="line">乘<span class="number">2</span>取整重复至小数部分为零或达到指定精度，第一次为最高位，最后一次为最低位。</span><br><span class="line">例： 十进制小数(<span class="number">0.125</span>)<span class="number">10</span>的二进制小数算法如下: </span><br><span class="line">    <span class="number">0.125</span> * <span class="number">2</span> = <span class="number">0.25</span>   取整 <span class="number">0</span> 余 <span class="number">0.25</span></span><br><span class="line">    <span class="number">0.25</span> * <span class="number">2</span> = <span class="number">0.5</span>     取整 <span class="number">0</span> 余 <span class="number">0.5</span></span><br><span class="line">    <span class="number">0.5</span> * <span class="number">2</span> = <span class="number">1.0</span>      取整 <span class="number">1</span> 余 <span class="number">0</span></span><br><span class="line">则 (<span class="number">0.001</span>)<span class="number">2</span> 为小数(<span class="number">0.125</span>)<span class="number">10</span>的表达。</span><br><span class="line"></span><br><span class="line">b. 二进制小数 to 十进制小数，小数点后的权位表达方法为 <span class="number">2</span>^(<span class="number">-1</span>), <span class="number">2</span>^(<span class="number">-2</span>),</span><br><span class="line"> <span class="number">2</span>^(<span class="number">-3</span>), ... , <span class="number">2</span>^(-n)。则如果将二进制小数(<span class="number">0.001</span>)<span class="number">2</span>转换为十进制方法如下:</span><br><span class="line">     <span class="number">0</span>/<span class="number">2</span> + <span class="number">0</span>/<span class="number">4</span> + <span class="number">1</span>/<span class="number">8</span> = (<span class="number">0.125</span>)<span class="number">10</span></span><br><span class="line">感兴趣的朋友可以使用下面代码进行尝试。</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> __future__ <span class="keyword">import</span> division</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0.125</span></span><br><span class="line"><span class="number">0.125</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">1</span>/<span class="number">10</span> + <span class="number">2</span>/<span class="number">100</span> + <span class="number">5</span>/<span class="number">1000</span></span><br><span class="line"><span class="number">0.125</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0</span>/<span class="number">2</span> + <span class="number">0</span>/<span class="number">4</span> + <span class="number">1</span>/<span class="number">8.</span></span><br><span class="line"><span class="number">0.125</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>因为计算机内部的所有运算都是基于二进制的，在计算机内部，大部分的十进制的分数（大部的分数可以通过小数表达）却不能使用二进制完美地表达。这和十进分数1/3十分相似，可以取为0.3，或者精确一些取为0.33，或者再精确点取0.333，进而以此类推，在十进制下，可以无限接近，但是却不能绝对精确。相同的原因，十进制数(0.1)10不能通过一个二进制的小数准确地表达，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">小数(0.1)10 转换为二进制小数，步骤如下：</span><br><span class="line">        0.1 * 2 &#x3D; 0.2 取整 0 余 0.2</span><br><span class="line">        0.2 * 2 &#x3D; 0.4 取整 0 余 0.4</span><br><span class="line">        0.4 * 2 &#x3D; 0.8 取整 0 余 0.8</span><br><span class="line">        0.8 * 2 &#x3D; 1.6 取整 1 余 0.6</span><br><span class="line">        0.6 * 2 &#x3D; 1.2 取整 1 余 0.2 </span><br><span class="line">        ... </span><br><span class="line">然后就开始无限循环了 -_- 。</span><br></pre></td></tr></table></figure><p>所以，在计算机内部，如果用一个二进制小数表达1/10 即 0.1 的时候，二进制的小数大概为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">0.00011001100110011001100110011001100110011001100110011010</span>)<span class="number">2</span></span><br></pre></td></tr></table></figure><p>其值非常接近余1/10 但却不相等。一般情况下，我们会需要一个同一的标准，在IEEE 754 双精度浮点标准下，Python会用53位的精度来表达1/10。而此时如果我们将上面的二进制转换为小数应该会得到下面的值:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">0.1000000000000000055511151231257827021181583404541015625</span>)<span class="number">10</span></span><br></pre></td></tr></table></figure><p>其值非常接近于0.1却不等于0.1。这时候可能就有人会问，我在Python的交互界面下输入0.1时，交互界面打印出来的就是0.1啊，如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0.1</span></span><br><span class="line"><span class="number">0.1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Decimal(<span class="number">0.1</span>)</span><br><span class="line">Decimal(<span class="string">'0.1000000000000000055511151231257827021181583404541015625'</span>)</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>其实这时候，Python的交互命令行只打印了这个值的一小部分，真实值（注意这里的真实值也与实际值1/10不相等）的近似值。如果想查看完整的小数表达，可以使用decimal模块下的Decimal()函数，如上。</p><p>小结一下，<strong>Python确实不认识0.1。</strong>其实应该说，计算机不能准确地用二进制地方法表达0.1。如果能明白这些，就应该知道，<strong>这并不是Python这种语言的Bug</strong>，也不是自己代码的Bug，这是二进制浮点数的常见情况（不能称之为问题）。而且所有的编程语言会出现这种情况，所有支持浮点运算的计算机也都存在相似的情况，只是表现方式会有所差异。</p><p>若不注意这些，在编写代码的时候会出现什么样的潜在问题呢？因为计算机不能正确的表达1/10，显而易见的问题就是我们文章一开头的求和问题。遇见这样的问题时，有人会提出Python和一些编程语言提供round()函数，用于取舍不就会得到最接近的值？那该函数是不是也能够用在此处解决这样的问题呢？我们来做个实验，这个实验和文章开头有点不一样，我们也做0.1的求和，但是不做那么多次的加法，三次足亦，如下：</p><p>第一步，我们用最简单的方法求和，求三个0.1的和，然后和0.3进行比较，发现果然和预期（为真）的不一样。要注意：计算机不能正确表达0.1，同时0.3不能被正确表达。所以两者不相等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> == <span class="number">0.3</span></span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><p>第二步，我们用round()函数进行提前取舍，取舍精度都为1， 然后进行求和判断。发现结果也不符合预期，可以推测的是，先取舍再求和，最终结果也不和0.3相等。需要注意的是，这个过程不能验证，只要验证了结果就是对的，有点量子论里测不准的感觉，内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>round(<span class="number">0.1</span>, <span class="number">1</span>) + round(<span class="number">0.1</span>, <span class="number">1</span>) + round(<span class="number">0.1</span>, <span class="number">1</span>) == round(<span class="number">0.3</span>, <span class="number">1</span>)</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><p>第三步， 我们不提前取舍，先求和然后取舍，进而与0.3 进行比较，此时结果就符合预期了，而且调整取舍精度也能再次得到预期的结果，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>round(<span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span>, <span class="number">1</span>) == round(<span class="number">0.3</span>, <span class="number">1</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>round(<span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span>, <span class="number">10</span>) == round(<span class="number">0.3</span>, <span class="number">10</span>)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><p>上面的例子中不仅仅是因为，计算机里二进制浮点数不能正确表达十进制分数的；还有一个原因是内置round()函数的取舍也有问题。例如，一个小数2.675舍入到小数点后两位，按照四舍五入的原则，预期的结果应该为2.68。但是实际不是，是2.67，原因就是计算机浮点数不能正确表达十进制分数（小数）。十进制小数2.675的在计算机内转换为浮点数后如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.67499999999999982236431605997495353221893310546875</span></span><br></pre></td></tr></table></figure><p>因为，这个数的数值更接近与2.67而不是2.68，所以使用round()函数时会向下取舍。</p><p>小结，因为计算机的二进制浮点数不能正确表达十进制分数，所以编程时遇见浮点数据运算就会得到诸如此类的奇异结果。但我们不能因为会遇见这样的怪异现象，就仇视或者惧怕浮点数和有意避免浮点数运算。此问题有种官方的叫法，叫做<strong>表达错误</strong>（representation error）。</p><h2 id="表达错误"><a href="#表达错误" class="headerlink" title="表达错误"></a><strong>表达错误</strong></h2><p>在这个章节中我们探索一下，十进制的分（小）数在计算机里是如何转换为二进制的浮点数的。也希望借助此章节的内容，各位能够更加深入地理解为什么编程语言不能按照预期表达十进制数值。</p><p>通过前面的章节我们已经确定，计算机确实不能正确地表达1/10，而如今绝大部分的计算机都使用IEEE-754的浮点数算法，而几乎所有的平台和版本的Python会将浮点数映射为IEEE-754的双精度浮点数。即，计算机会尽量将输入的十进制小数通过方程J/2^N转化为最接近的二进制小数，其中J为一个53位的整数，N为最佳指数。</p><p>举例来说，就拿1/10来说，如果该有理数需要在Python中需要转化为计算机的双精度浮点数，通过上面的方程来转化会写作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>/<span class="number">10</span> ≈ J/<span class="number">2</span>^N <span class="comment">#近似等于</span></span><br></pre></td></tr></table></figure><p>转换等式，可得：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">J ≈ <span class="number">2</span>^N / <span class="number">10</span></span><br></pre></td></tr></table></figure><p>因为双精度浮点数有52位来存储有效数字，而同时IEEE 754规定：在计算机内部保存有效数字时，默认这个小数（二进制）的第一位总是1，因此可以被舍去，只保存后面的内容。因此双精度浮点的有效数数字应该有53位。即在上式中J应该被定义为一个53位的整数。等式的右边应该无限接近于这个53位的整数即，应该满足大于等于2^52，小于2^53。通过计算可得当N等于56时满足条件，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span>**<span class="number">52</span></span><br><span class="line"><span class="number">4503599627370496L</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span>**<span class="number">56</span> // <span class="number">10</span></span><br><span class="line"><span class="number">7205759403792793L</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span>**<span class="number">53</span></span><br><span class="line"><span class="number">9007199254740992L</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span>**<span class="number">52</span> &lt;=  <span class="number">2</span>**<span class="number">56</span> // <span class="number">10</span>  &lt; <span class="number">2</span>**<span class="number">53</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>接下来我们就要考虑这个等于2^56的整数是不是位最佳值，为此，需要得到该整数与10进行除法运算的商和余数，在这可以使用divmod()内置函数，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>q, r = divmod(<span class="number">2</span>**<span class="number">56</span>, <span class="number">10</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q, r</span><br><span class="line">(<span class="number">7205759403792793L</span>, <span class="number">6L</span>)</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>在上式中其除法运算的余数大于5，即更接近10，所以该整数的最佳近似值，应该向上取整，即在原来商的基础上加1。</p><p>因此，十进制的分数1/10，在IEEE 754 规定的双精度浮点的标准下，最佳近似值如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">7205759403792794</span> / <span class="number">2</span> ** <span class="number">56</span></span><br><span class="line"><span class="number">0.1</span></span><br></pre></td></tr></table></figure><p>由于我们在计算的时，整数J向上取整了（式子为J/2^N)，也就意味着得到的浮点数应该比1/10要稍微大一点。而如果我们不向上取整，又会比1/10的实际值小一点点。反正不管怎么算，就是得能精确等于1/10，这就是为什么说Python从没见过1/10长什么样，即计算机其实不认识1/10。</p><p>我们再往下探索一下：由上可知，按照IEEE 754 标准，如果我们将最后一步中分子分母约分（因为分子为偶数，即公因数为2），则可以得到下面的内容:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3602879701896397</span> / <span class="number">2</span> ** <span class="number">55</span></span><br></pre></td></tr></table></figure><p>这时候，J为3602879701896397，N为55。如果我们想看到这个浮点数所有的有效数字，可以将小数整数化，也就是说让J乘以10^55，就可以得到一个55位的整数，如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">3602879701896397</span> * <span class="number">10</span> ** <span class="number">55</span> // <span class="number">2</span> ** <span class="number">55</span></span><br><span class="line"><span class="number">1000000000000000055511151231257827021181583404541015625L</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Decimal(<span class="number">0.1</span>)</span><br><span class="line">Decimal(<span class="string">'0.1000000000000000055511151231257827021181583404541015625'</span>)</span><br></pre></td></tr></table></figure><p>由上可得，得到的整数化的有效数字，和计算机内部存储的是相同的。也就证明了，整个推到过程是正确无误的。虽然计算机可以实现到53位的精度。但是因为编程语言中print足够聪明，所以如果直接输入0.1，打印出来的内容也就是0.1。因为大部分情况下，可能不需要这个高的精度，所以很多编程语言在做浮点数的算术运算的时候，一般取的是小数点后17位的精度，即：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0.1</span></span><br><span class="line"><span class="number">0.1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">"%.17f"</span> % <span class="number">0.1</span></span><br><span class="line"><span class="number">0.10000000000000001</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h2><p>因为运算的每一步都需要会涉及到精确度和有效数字丢失的问题，所以编程中，浮点数的计算常常会得到不满足预期的结果，但是浮点数又是很重要的一种数据类型，又不能够舍弃。总之，当遇见代码中出现浮点算术运算问题的时候，就应该考虑到是不是遇见了上面的问题，进而就要找到合适的计算方式，对计算结果进行精度上的取舍。而如果代码中设计到大量的浮点数计算，在Python中，就可以考虑使用专门的模块来处理这些计算。</p><h2 id="讨论"><a href="#讨论" class="headerlink" title="讨论"></a><strong>讨论</strong></h2><p>Python 的浮点数运算模块decimal，使用decimal中的Decimal函数可以允许浮点数以字符串的方式传入，这样就可以保有足够的（大于双精度浮点数的53位）有效数字，从而避免计算时精度的丢失。在本章的一开始遇见的0.1求和的问题就可以使用Decimal来解决，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> decimal <span class="keyword">import</span> Decimal</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = Decimal(<span class="string">'0.0'</span>) <span class="comment"># 注意：传入字符串。若传入浮点数，就丢失了精度</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line"><span class="meta">... </span>    x += Decimal(<span class="string">'0.1'</span>) </span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line">Decimal(<span class="string">'1.0'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">"%.17f"</span> % x1<span class="number">.00000000000000000</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>float(x) == <span class="number">1</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><p>Decimal模块可以解决问题，在一些涉及到高精度计算或者一些金融方面的计算时，也能够保证不丢失精度，毕竟关乎钱的问题就不能允许有误差存在，但是这样的计算会却有牵扯到浮点数与字符串之间的转换问题，性能肯定会下降。程序设计是需要考虑到所有因素，假如17位的普通精度能够满足设计要求，而且计算允许一定的误差，同时又有性能上的要求，毕竟原生的浮点数计算速度会快很多，就可以使用math模块来解决类似的问题。</p><p>关于math模块我们在这里借助一个新的例子，这个例子更为典型也十分有趣，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>nums = [<span class="number">1.23e+18</span>, <span class="number">1</span>, <span class="number">-1.23e+18</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sum(nums)</span><br><span class="line"><span class="number">0.0</span></span><br></pre></td></tr></table></figure><p>求和过程丢失了一个1，感觉十分神奇。其计算结果就不是近似了，根本就是完全错误。主要原因就是函数sum()做的就是一个加法运算，该函数不在意过程中精度的损失，只是简单的求和。为了避免上面的计算错误，就可以使用math模块下的fsum()函数来处理，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> math</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nums = [<span class="number">1.23e+18</span>, <span class="number">1</span>, <span class="number">-1.23e+18</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.fsum(nums)</span><br><span class="line"><span class="number">1.0</span></span><br></pre></td></tr></table></figure><p>使用函数math.fsum()进行计算的时候，函数会回溯每一步计算的误差，在保持精度的同时得到计算的最优解，所以结果符合预期。总的来说，decimal模块可以被用于涉及到金融领域和科学计算的工程领域。但是一般问题中设计到浮点数计算的问题，math模块足够胜任。</p><p>在程序开发上遇到问题，如果追本溯源，就肯定能够找到问题的根本原因，也能够借助一篇篇文章了解问题出现的机理，进而明白一些现实因素的局限性，也能够扩展自己知识面，也希望大家能够通过这篇文章真正理解，为什么计算机不能正确认识1/10，即明白二进制下如何表达浮点数的方法。</p><h2 id="参考目录"><a href="#参考目录" class="headerlink" title="参考目录"></a><strong>参考目录</strong></h2><p>IEEE754 的内容 ：<a href="https://de.wikipedia.org/wiki/IEEE_754" target="_blank" rel="noopener">https://de.wikipedia.org/wiki/IEEE_754</a></p><p>Python表达错误 ：<a href="https://docs.python.org/2/tutorial/floatingpoint.html" target="_blank" rel="noopener">https://docs.python.org/2/tutorial/floatingpoint.html</a></p><p>Python浮点计算 ：<a href="http://python3-cookbook.readthedocs.io/zh_CN/latest/c03/p02_accurate_decimal_calculations.html" target="_blank" rel="noopener">http://python3-cookbook.readthedocs.io/zh_CN/latest/c03/p02_accurate_decimal_calculations.html</a></p><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">          版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，          转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。        </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者: Jim Wang 公众号: &lt;a class=&quot;main-button-link&quot; href=&quot;#wechat&quot; rel=&quot;noopener&quot;&gt;巴博萨船长&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在计算机编程的过程中，常常会涉及到浮点数（小数）的算术运算。稍加留意就会发现，算术运算的结果时常是不正确的。如果程序中有条件语句if加逻辑判断来控制程序执行，由于判断结果也不符合预期，程序就会流向错误的节点。经典例子就是0.1的10次求和与1进行逻辑判断得出的结果为False，遇见相似的问题会把自己急出一身汗，却也弄不个所以然来。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python 相关 - 8. Python 杂记" scheme="https://zicowarn.github.io/categories/Python-%E7%9B%B8%E5%85%B3-8-Python-%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="https://zicowarn.github.io/tags/Python/"/>
    
      <category term="杂记" scheme="https://zicowarn.github.io/tags/%E6%9D%82%E8%AE%B0/"/>
    
      <category term="浮点数" scheme="https://zicowarn.github.io/tags/%E6%B5%AE%E7%82%B9%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Python 应用之 Two sum</title>
    <link href="https://zicowarn.github.io/2018/11/23/0701-issue-twosum/"/>
    <id>https://zicowarn.github.io/2018/11/23/0701-issue-twosum/</id>
    <published>2018-11-23T00:11:08.000Z</published>
    <updated>2018-11-23T00:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>作者: Jim Wang 公众号: <a class="main-button-link" href="#wechat" rel="noopener">巴博萨船长</a></p><p>最近一直考虑着下一篇关于Python的文章应该是什么样的内容，对比一些专业大咖的文章，目前应该写一个完整的且无错的程序，然后和大家一起一行行地分析代码相互学习，可是我实在不想如此亦步亦趋。在学习编程方面，我是一个实用主义者，认为“学以致用”才是学习的最终目的， 最近发现了一些有趣的东西，让我很感兴趣，也能检验我自己所学的东西。</p><a id="more"></a><p>本着“学以致用”为先，从今天开始我们通过研究算法的方式，进而明白自己之前学的内容如何更好地使用。之所以打算写这样方面的内容，也是因为最近的一次和猎头通话时，被问到类似的问题，可是自己竟然不会，丢脸啊。所以就下定决心研究算法，在此把自己所学所想跟大家分享。</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a><strong>问题描述</strong></h2><p>* 英文原文：</p><blockquote><p>Given an array of integers, return indices of the two numbers such that they add up to a specific target. You may assume that each input would have exactly one solution, and you may not use the same element twice.</p></blockquote><p>* 我的理解：</p><blockquote><p>给定一个整数数组和一个目标值，求数组内两个元素和为目标值的指针。 需要保证每次输入都能得到正确的解，并且任何一个元素<strong>不能</strong>使用两次。</p></blockquote><p>* 例：</p><blockquote><p>如有列表 [2, 7, 11, 15] 若目标值 9， 因为 2 + 7 = 9， 所以得[0, 1]; 若目标值 18， 因为 7 + 11 = 18， 所以得[1, 2]。</p></blockquote><h2 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a><strong>解决思路</strong></h2><ul><li><strong>第一步推导</strong></li></ul><p>使用最简单的思路暴力解决。 历遍列表中的每一个元素，然后检查是否相邻的两个元素的和是否和所求一致，如果相同则返回这两个元素的索引。代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Approach1</span><span class="params">(listInput, iTarget)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        Brute Force</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :type listInput: List[int]</span></span><br><span class="line"><span class="string">        :type iTarget: int</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> len(listInput) &lt;= <span class="number">1</span>:            </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">for</span> iDx <span class="keyword">in</span> range(len(listInput)):            </span><br><span class="line">            <span class="keyword">for</span> jDx <span class="keyword">in</span> range(<span class="number">1</span>, len(listInput)):                </span><br><span class="line">                <span class="keyword">if</span> listInput[jDx] == (iTarget - listInput[iDx]):</span><br><span class="line">                    <span class="keyword">return</span> [iDx, jDx]</span><br></pre></td></tr></table></figure><p>这样的方法虽然不能符合题目要求，因为列表中的每一个元素都被使用了两次。但是可以以此为基础，进一步探索找到解决问题的最优解。</p><ul><li><p><strong>第二步推导</strong></p><p>因为第一步推导中方法的时间复杂度为O(n^2)。 为了优化时间复杂度，就要尝试找到一个更加高性能的方法来检查一个元素与目标值的差是否存在于列表中。 而且当其差值存在，我们还要得到该元素的索引。 那么最好的保存两者映射的途径是什么？ 当然是一个哈希表，在Python中为字典。</p></li></ul><p>为了提高效率就要减少查找时间，准确地说把两者映射的查找次数从N降低到1。 而哈希表就是为此而生的。 理论上使用哈希表可以实现在恒定时间内完成查找。但是现实中可能会出现哈希函数不完善造成的冲突可能会导致查找次数重新从1退到n。 所以选择合适的哈希函数也是很重要的。 以此为思路优化第一步的推导，就得到下面的代码。 Python作为高级编程的语言，虽然解释器封装了哈希函数，也会存在碰撞冲突的风险，但一般很少出现。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Approach2</span><span class="params">(listInput, iTarget)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        Two-pass Hash Table</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :type listInput: List[int]</span></span><br><span class="line"><span class="string">        :type iTarget: int</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> len(listInput) &lt;= <span class="number">1</span>:            </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="comment"># dictBuffer = &#123;&#125;</span></span><br><span class="line">        <span class="comment"># for iDx in range(len(listInput)):</span></span><br><span class="line">        <span class="comment">#    dictBuffer[listInput[iDx]] = iDx</span></span><br><span class="line">        dictBuffer = dict(zip(listInput, range(len(listInput))))        </span><br><span class="line">        <span class="keyword">for</span> iDx <span class="keyword">in</span> range(len(listInput)):</span><br><span class="line">            iComplement = iTarget - listInput[iDx]            </span><br><span class="line">            <span class="keyword">if</span> dictBuffer.has_key(iComplement) <span class="keyword">and</span> dictBuffer.get(iComplement) != iDx:</span><br><span class="line">                <span class="keyword">return</span> [iDx, dictBuffer.get(iComplement)]</span><br></pre></td></tr></table></figure><p>上述的推导里面，使用了两个迭代，第一次迭代中（被注释的内容），循环将每个元素和其索引添加到字典内。然后在第二个迭代中，我们检查字典中是否存在其中一个元素差值为键的映射，如果存在就返回该元素以及差值对于的索引。 需要检验该差值不能为元素本身。</p><ul><li><strong>第三步推导</strong></li></ul><p>通过正确理解第二步推导，其实可以发现。 相同的目的也可以通过一次迭代完成。 在迭代的过程中，我们先判断当前元素是否存在于映射字典中，该映射字典保存了列表中一个元素与目标值的差以及该元素的索引。如果存在就立即返回。 若不存在，则将该元素与目标值的差作为键，其索引作为值，保存在这个映射字典中。代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Approach3</span><span class="params">(listInput, iTarget)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        One-pass Hash Table</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :type listInput: List[int]</span></span><br><span class="line"><span class="string">        :type iTarget: int</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> len(listInput) &lt;= <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        dictBuffer = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> iDx <span class="keyword">in</span> range(len(listInput)):</span><br><span class="line">            <span class="keyword">if</span> listInput[iDx] <span class="keyword">in</span> dictBuffer:</span><br><span class="line">                <span class="keyword">return</span> [dictBuffer[listInput[iDx]], iDx]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                dictBuffer[iTarget - listInput[iDx]] = iDx</span><br></pre></td></tr></table></figure><p>可以看出第三步的推导能够满足题目的要求，即每个元素只能使用一次，而且解决方案的时间复杂度(O(n))和空间复杂度(O(n))都为最优。 关于算法的复杂度，即时间复杂度和空间复杂度的内容，我找机会总结后分享给大家。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h2><p>第三步推导完成之后，真的是醍醐灌顶。通过这三步推导，从最早的暴力解决，一步步地靠近正确的答案，发现这里面没有新的编程技术，也没有自创的数据类型。全都是之前文章介绍过的基本知识，可是通过改变这些基本内容的使用方法和方式，就能得到不一样的效果。也意识到，我们都有解决问题的能力和想到解决方案的智慧，只是很多时候面对问题时，都是以简单和快速为先，并没有考虑使用的方法是否最优。很多时候只要具有就是看下去的毅力和试下去的恒心，我们都能找到解决问题的最优解。</p><p>研究这个算法的过程，也认识到自己离软件大拿和行业翘楚还很远。也明白自己看待问题的眼光，解决问题的思路包括编程的思维都是有局限。这篇文章也作为我自己对待编程的新起点，希望与君相互讨论帮助，共同进步学习。</p><hr><div style="color:#757288;font-size:1.3rem;padding:2px 6px;border:1px solid #fad2d2;background:#ffecea;border-radius:3px;line-height:22px;">          版权声明：<br>文章首发于 <a href="http://zhichaowang.online" target="_blank" rel="noopener"> Jim Wang's blog </a>，          转载文章请务必以超链接形式标明文章出处，作者信息及本版权声明。        </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者: Jim Wang 公众号: &lt;a class=&quot;main-button-link&quot; href=&quot;#wechat&quot; rel=&quot;noopener&quot;&gt;巴博萨船长&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最近一直考虑着下一篇关于Python的文章应该是什么样的内容，对比一些专业大咖的文章，目前应该写一个完整的且无错的程序，然后和大家一起一行行地分析代码相互学习，可是我实在不想如此亦步亦趋。在学习编程方面，我是一个实用主义者，认为“学以致用”才是学习的最终目的， 最近发现了一些有趣的东西，让我很感兴趣，也能检验我自己所学的东西。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python 相关 - 7. Python 应用" scheme="https://zicowarn.github.io/categories/Python-%E7%9B%B8%E5%85%B3-7-Python-%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="Python" scheme="https://zicowarn.github.io/tags/Python/"/>
    
      <category term="实战经验" scheme="https://zicowarn.github.io/tags/%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
</feed>
